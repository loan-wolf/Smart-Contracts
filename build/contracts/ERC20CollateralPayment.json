{
  "contractName": "ERC20CollateralPayment",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bonds",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkFulfilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkRequested",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amm",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "addInterest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bondContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "collateralLookup",
      "outputs": [
        {
          "internalType": "address",
          "name": "ERC20Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ammount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_paymentPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_inverseInterestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_accrualPeriod",
          "type": "uint256"
        }
      ],
      "name": "configureNew",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_merkleRoot",
          "type": "uint256"
        }
      ],
      "name": "fulfill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        }
      ],
      "name": "getNumberOfLoans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "isComplete",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "isDelinquent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "issueBonds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanIDs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanLookup",
      "outputs": [
        {
          "internalType": "bool",
          "name": "issued",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "ERC20Address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "chainlinkRequestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "paymentPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paymentDueDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRateInverse",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accrualPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalPaymentsValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "awaitingCollection",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paymentComplete",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "merkleRoots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_erc20Ammount",
          "type": "uint256"
        }
      ],
      "name": "payment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ERC20Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ammount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loanId",
          "type": "uint256"
        }
      ],
      "name": "addCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_loanId",
          "type": "uint256"
        }
      ],
      "name": "returnCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amm",
          "type": "uint256"
        }
      ],
      "name": "withdrawl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bonds\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkRequested\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC20Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ammount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"}],\"name\":\"addCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"addInterest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collateralLookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ERC20Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ammount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_paymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_inverseInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_accrualPeriod\",\"type\":\"uint256\"}],\"name\":\"configureNew\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_merkleRoot\",\"type\":\"uint256\"}],\"name\":\"fulfill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"getNumberOfLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isDelinquent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"issueBonds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanIDs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanLookup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"issued\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"chainlinkRequestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"paymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentDueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateInverse\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accrualPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPaymentsValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"awaitingCollection\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentComplete\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"merkleRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_erc20Ammount\",\"type\":\"uint256\"}],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"}],\"name\":\"returnCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amm\",\"type\":\"uint256\"}],\"name\":\"withdrawl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Carson Case\",\"methods\":{\"addCollateral(address,uint256,uint256)\":{\"params\":{\"_ERC20Contract\":\"address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\",\"_ammount\":\"is the ammount to add as collateral\",\"_loanId\":\"is the loan ID to add collateral to\"}},\"addInterest(uint256,uint256)\":{\"params\":{\"_amm\":\"the ammount of interest to add\",\"_id\":\"is the id of the loan\"},\"returns\":{\"_0\":\"true if added. Will not add interest if payment has been completed. his prevents lenders from refusing to end a loan when it is rightfully over by forever ncreasing the totalPaymentsValue through interest staking and never fully collecting payment. his also means that if lenders do not realize interest gains soon enough they may not be able to collect them before he borrower can complete the loan.\"}},\"configureNew(address,address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"borrower is msg.sender for testing. In production might want to make this a param\",\"params\":{\"_accrualPeriod\":\"the time it takes for interest to accrue in seconds\",\"_borrower\":\"is the borrower loan is being configured for. Keep in mind. ONLY this borrower can mint bonds to start the loan\",\"_erc20\":\"is the ERC20 contract address that will be used for payments\",\"_inverseInterestRate\":\"the interest rate expressed as inverse. 2% = 1/5 = inverse of 5\",\"_minPayment\":\"is the minimum payment that must be made before the payment period ends\",\"_paymentPeriod\":\"payment must be made by this time or delinquent function will return true\",\"_principal\":\"the origional loan value before interest\"},\"returns\":{\"_0\":\"the id it just created\"}},\"constructor\":{\"params\":{\"_bonds\":\"is the contract address of bonds\"}},\"fulfill(bytes32,uint256)\":{\"params\":{\"_merkleRoot\":\"is what's returned\",\"_requestId\":\"is the request ID\"}},\"getId(address,uint256)\":{\"params\":{\"_borrower\":\"is borrower\",\"_index\":\"is the index in the borrowers loan array\"},\"returns\":{\"_0\":\"the loan ID\"}},\"getInterest(uint256)\":{\"params\":{\"_id\":\"is the loan ID\"},\"returns\":{\"_0\":\"inverse interest rate\"}},\"getNumberOfLoans(address)\":{\"params\":{\"_who\":\"is who to look up\"},\"returns\":{\"_0\":\"length\"}},\"isComplete(uint256)\":{\"params\":{\"_id\":\"of loan to check\"},\"returns\":{\"_0\":\"return if the contract is payed off or not as bool\"}},\"isDelinquent(uint256)\":{\"params\":{\"_id\":\"is the hash id of the loan. Same as bond ERC1155 ID as well\"},\"returns\":{\"_0\":\"if delinquent or not. Meaning missed a payment\"}},\"issueBonds(uint256)\":{\"params\":{\"_id\":\"loan ID\"},\"returns\":{\"_0\":\"the loan principal (so bonds knows how many NFTs to mint)\",\"_1\":\"the borrowers address (so bonds can make sure borrower is calling this function)\"}},\"payment(uint256,uint256)\":{\"params\":{\"_erc20Ammount\":\"is ammount in loan's ERC20 to pay\",\"_id\":\"to pay off\"}},\"returnCollateral(uint256)\":{\"params\":{\"_loanId\":\"is the loan ID\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"withdrawl(uint256,uint256)\":{\"params\":{\"_amm\":\"is the ammount to send\",\"_id\":\"is the id of the bond to send in\"}}},\"title\":\"ERC20CollateralPayment\"},\"userdoc\":{\"methods\":{\"addCollateral(address,uint256,uint256)\":{\"notice\":\"addCollateral must be called before issuing loan\"},\"addInterest(uint256,uint256)\":{\"notice\":\"Called each time new NFTs are minted by staking\"},\"configureNew(address,address,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"contract must be configured before bonds are issued. Pushes new loan to array for user\"},\"constructor\":\"constructor just runs the ERC20PaymentStandard constructor\",\"fulfill(bytes32,uint256)\":{\"notice\":\"Chainlink fulfill function. Called to set the merkle root for a request ID\"},\"getId(address,uint256)\":{\"notice\":\"Returns the ID for a loan given the borrower and index in the array\"},\"getInterest(uint256)\":{\"notice\":\"get the interest rate of a loan. Makes it easy for other contract since it doens't have to parse struct\"},\"getNumberOfLoans(address)\":{\"notice\":\"gets the number of loans a person has\"},\"isComplete(uint256)\":{\"notice\":\"helper function\"},\"isDelinquent(uint256)\":{\"notice\":\"This contract is not very forgiving. Miss one payment and you're marked as delinquent. Unless contract is complete\"},\"issueBonds(uint256)\":{\"notice\":\"called when bonds are issued so as to make sure lender can only mint bonds once.\"},\"payment(uint256,uint256)\":{\"notice\":\"function handles the payment of the loan. Does not have to be borrower s payment comes in. The contract holds it until collection by bond owners. MUST APPROVE FIRST in ERC20 contract first\"},\"returnCollateral(uint256)\":{\"notice\":\"return Collateral when the loan is complete \"},\"withdrawl(uint256,uint256)\":{\"notice\":\"MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function. However that was not a good idea as a hacker could create fake bonds.\"}},\"notice\":\"this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added\"}},\"settings\":{\"compilationTarget\":{\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol\":\"ERC20CollateralPayment\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol\":{\"keccak256\":\"0xad03fc08b6521c76839472751e26a8881cd33522f6fdf0da9246a40c5a12a77e\",\"urls\":[\"bzz-raw://52c974e85176ded5f25e43dfc00f200c53dcfd88614314a90401ca6359d39152\",\"dweb:/ipfs/QmecfnqaZ42eAhbCLZNygr52CLetrBxsjtzi1WjuDtkJ6b\"]},\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol\":{\"keccak256\":\"0x77c796774426b78f7c4cefd1935de5dae33ce3e21ceef39a4e68b4358e8bda3c\",\"urls\":[\"bzz-raw://44d7805ca56ee0a2ce41fec826340c03efed9ad39b52ea3b160332528e5b2006\",\"dweb:/ipfs/QmQDrpAksPgJXj4aJBzGVDCpSQFxkoiizrk6TixFV7cXLw\"]},\"@chainlink/contracts/src/v0.6/Chainlink.sol\":{\"keccak256\":\"0x7bef34fd97f611103c6113025e3d6af755f326069767e72266698f64258e62b6\",\"urls\":[\"bzz-raw://82125916319b872093aa8599d2c00bd07d363386a74a4d0268c6edf25c366f82\",\"dweb:/ipfs/QmXTnVy1XEw387NduvHHFQNmnzYTwFUhVz95kRvRrcwdHd\"]},\"@chainlink/contracts/src/v0.6/ChainlinkClient.sol\":{\"keccak256\":\"0x9f8883b8b5b76bba151e5f30d4c353b8a3f15ee3d97117deee4cccd91fe8640f\",\"urls\":[\"bzz-raw://ee9b132779ac24df4f8a5e45dfc256acc70eb5e43f715de36593e488f20a44ff\",\"dweb:/ipfs/QmagJ1htVpP2ZYLAdHEpSEMx1Xd3csbUHAhLctryVDsNFg\"]},\"@chainlink/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0xe513c0f60edf13da7d82625489cf2008c7b66170f3b1ed1606b84c73f95b17ad\",\"urls\":[\"bzz-raw://78e083ef252b80bb63a5aa126bc7283cd9b88767dfdf0190d46802bc32756ecf\",\"dweb:/ipfs/QmdTyEQwX5ecoXR1rBh8DLDJpCYVDM85JjjR2sEJdE9wAA\"]},\"@chainlink/contracts/src/v0.6/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xdef864af6e516477773ea246b73531b1836de5bea4ac1cfd8be6e7f4b3f3c3fd\",\"urls\":[\"bzz-raw://ad3346f5a393cd62d8de678a77d8dc323d8f9e21f0aaa504d0d0b990c8b61477\",\"dweb:/ipfs/QmQ2n8329Fzb7Zbzk5wqYvAfKJ9QPwTdCUmm9zUqhL67a1\"]},\"@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xe245a7be950c94d87bb775ae9ee9fbd693fbe2987778e6ce0b04605ea44b7b68\",\"urls\":[\"bzz-raw://bd2c3165d949fc66fe407b96eb3dc2092c7e800f4c073b411bf7b96de3e156c9\",\"dweb:/ipfs/QmcfJhR1Np4GsLWnww2Duqks2wEzYk8VDTvCAYy7MisG1r\"]},\"@chainlink/contracts/src/v0.6/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x08aed19c3bef1ae2d90fc0d9d28a497fd7f312991ed08fedfe545de6b9a476e4\",\"urls\":[\"bzz-raw://b2e7b4acfbd4cfbd4c3e266011955954ec0f5a2323647e81b936c66cb35e1b5e\",\"dweb:/ipfs/QmXVrpdo76r2WhxE7gJPj3dGycZYKKvK39VNVaB7HyhAbT\"]},\"@chainlink/contracts/src/v0.6/vendor/BufferChainlink.sol\":{\"keccak256\":\"0x14f13139229a2fef8f705f29f91de0bc81bcd5070ec75b4bd3fd82c1536ca685\",\"urls\":[\"bzz-raw://9a403d7f17b316c7b8837a25df0563de2a1c3121b7cd43473abce8ce6742bd29\",\"dweb:/ipfs/QmWZYi4xJGjPt1pEM7mS7XsA1eF2zpcxiiuGHuiTndXHo7\"]},\"@chainlink/contracts/src/v0.6/vendor/CBORChainlink.sol\":{\"keccak256\":\"0xe7c6e4290ac2a41a138e6bd89d89a2779f66847a5ee6fb5a6f2a3386e5ce589d\",\"urls\":[\"bzz-raw://1eb0e7821c4963b125b47c93e31cd6e073d2b87550651054fc526e63915d92ab\",\"dweb:/ipfs/QmVJq2sNTzX4Hfyway8JiY4RoQw4vQRSbzJWbsC7JsiyUs\"]},\"@chainlink/contracts/src/v0.6/vendor/ENSResolver.sol\":{\"keccak256\":\"0xfd992937d215ad669f69e91fefbe62cad8973ae329b4e810ca9b26a1ae0b6bb7\",\"urls\":[\"bzz-raw://afb189e69fb705795bf41dea9ff20bab191164fc4876803168372f9bf1a1a0f1\",\"dweb:/ipfs/QmUBbNkFiJh9BrPepNVYMpxnEk1a5xqun8VT6Zb2jC3FtV\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155Holder.sol\":{\"keccak256\":\"0xee8e03681af5ab7458e04154246dfb0c7918c442dc708bdc78f53ecfec55146a\",\"urls\":[\"bzz-raw://6061a9c79c6fda63dd028eb690c5dc426ecf92df79cbbe82482fd309c614cf3c\",\"dweb:/ipfs/QmUCdPStmBzxxYiNf9gMBtbddVw93YsEUGs7L4wxX8QN35\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155Receiver.sol\":{\"keccak256\":\"0x4d9b42828f5a2ea16ea396377904448f1ef8ce17babf06d6259b3e4cf65d6c32\",\"urls\":[\"bzz-raw://bdba169baa86bd0277651759a6dee86574a8e277528de4df39970077baf97a16\",\"dweb:/ipfs/QmdzqcK7xPaYZqXqYLakD1bXe26zunWCbjyrvmoVpgTYeV\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0bc1d0b8fa3b262a6fb98b88dceab8b3348903b95dcc5909b9074fb19a3d2da5\",\"urls\":[\"bzz-raw://a1a2d7b10e484742885d2042f66e8150bfc143a08756a269fb207c4c553b55aa\",\"dweb:/ipfs/Qmbhi8dodhRZS6mqL2T8WfMzmEwPzgSwpuGVHtKF5F6QDp\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "342:3750:3:-:0;;;1163:1:9;1132:32;;637:67:4;;;-1:-1:-1;;;;;;637:67:4;662:42;637:67;;;710:58;;;796:14;774:36;;758:65:3;2:2:-1;;;;27:1;24;17:12;2:2;758:65:3;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;758:65:3;;751:40:18;770:20;751:18;;;;:40;:::i;:::-;272:152:23;304:110;272:18;;;;:152;:::i;:::-;1768:12:4;:21;;-1:-1:-1;;;;;;1768:21:4;-1:-1:-1;;;;;1768:21:4;;;;;;;;;;-1:-1:-1;342:3750:3;;1482:198:18;1565:25;;;;;;1557:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1633:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1633:40:18;1669:4;1633:40;;;1482:198::o;342:3750:3:-;;;;;;;",
  "deployedSourceMap": "342:3750:3:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;342:3750:3;;;;;;;;-1:-1:-1;;;342:3750:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;948:140:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;948:140:18;-1:-1:-1;;;;;;948:140:18;;:::i;:::-;;;;;;;;;;;;;;;;;;7604:879:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;7604:879:4;;;;;;;:::i;:::-;;9494:202;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;9494:202:4;;:::i;11051:171::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;11051:171:4;;;;;;;:::i;555:54:3:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;555:54:3;;:::i;:::-;;;;-1:-1:-1;;;;;555:54:3;;;;;;;;;;;;;;;;;;;;;1937:437;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1937:437:3;;:::i;1533:44:4:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;1533:44:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4190:132;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4190:132:4;;:::i;1485:42::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1485:42:4;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1485:42:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2389:122;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2389:122:4;-1:-1:-1;;;;;2389:122:4;;:::i;4615:163::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4615:163:4;;:::i;2697:1393:3:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2697:1393:3;;;;;;;:::i;358:201:22:-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;358:201:22;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;358:201:22;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;358:201:22;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;358:201:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;358:201:22;;;;;;;;-1:-1:-1;358:201:22;;-1:-1:-1;;27:11;11:28;;8:2;;;52:1;49;42:12;8:2;358:201:22;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;358:201:22;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;358:201:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;358:201:22;;;;;;;;-1:-1:-1;358:201:22;;-1:-1:-1;;27:11;11:28;;8:2;;;52:1;49;42:12;8:2;358:201:22;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;358:201:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;358:201:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;358:201:22;;-1:-1:-1;358:201:22;;-1:-1:-1;;;;;358:201:22:i;:::-;;;;-1:-1:-1;;;;;;358:201:22;;;;;;;;;;;;;;9929:264:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;9929:264:4;;;;;;;;:::i;1148:672:3:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;1148:672:3;;;;;;;;;;;;;:::i;2824:286:4:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2824:286:4;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2824:286:4;;;;;;;;;;;;;;;;3725:257;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3725:257:4;;;;;;;:::i;863:27::-;;;:::i;:::-;;;;-1:-1:-1;;;;;863:27:4;;;;;;;;;;;;;;5694:1586;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;;5694:1586:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;179:173:22:-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;179:173:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;179:173:22;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;179:173:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;179:173:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;179:173:22;;-1:-1:-1;179:173:22;;-1:-1:-1;;;;;179:173:22:i;1583:46:4:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1583:46:4;;:::i;948:140:18:-;-1:-1:-1;;;;;;1048:33:18;;1025:4;1048:33;;;;;;;;;;;;;948:140;;;;:::o;7604:879:4:-;2156:15;;;;:10;:15;;;;;;;;:34;;;;2114:31;;;7699:3;;-1:-1:-1;2106:130:4;;;;-1:-1:-1;;;;;2106:130:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7718:14:::1;;:::i;:::-;-1:-1:-1::0;7735:15:4::1;::::0;;;:10:::1;:15;::::0;;;;;;;;7718:32;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;;;::::0;;-1:-1:-1;;;;;7718:32:4::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;7768:30;::::1;;::::0;:182:::1;;;7937:2;:13;;;7916:2;:18;;;7892:2;:21;;;:42;:58;7768:182;7760:293;;;;-1:-1:-1::0;;;;;7760:293:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8087:15;::::0;;::::1;::::0;8080:78:::1;::::0;;;;;8117:10:::1;8080:78;::::0;::::1;::::0;8137:4:::1;8080:78:::0;;;;;;;;;;;;-1:-1:-1;;;;;8080:36:4;;::::1;::::0;::::1;::::0;:78;;;;;;;;;;-1:-1:-1;8080:36:4;:78;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;8080:78:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;8080:78:4;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;;8173:15:4::1;::::0;;;:10:::1;8080:78;8173:15:::0;;;;;;;:34:::1;::::0;::::1;:51:::0;;;::::1;::::0;;8310:16:::1;::::0;;::::1;::::0;8292:15:::1;:34;8259:30;::::0;::::1;:67:::0;8370:31;;::::1;:48:::0;;;;::::1;::::0;;-1:-1:-1;7604:879:4:o;9494:202::-;9555:4;9620:15;;;:10;:15;;;;;;;:34;;;;9577:31;;;:77;;;:112;;-1:-1:-1;9667:15:4;;;;:10;:15;;;;;:22;;;9666:23;9577:112;9570:119;9494:202;-1:-1:-1;;9494:202:4:o;11051:171::-;8743:27:9;;;;:15;:27;;;;;;;;-1:-1:-1;;;;;8743:27:9;8729:10;:41;8721:106;;;;-1:-1:-1;;;;;8721:106:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8840:27;;;;:15;:27;;;;;;8833:34;;-1:-1:-1;;8833:34:9;;;8878:30;8856:10;;8878:30;;;-1:-1:-1;11169:23:4::1;::::0;;;:11:::1;:23;::::0;;;;;:46;11051:171::o;555:54:3:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;555:54:3;;;;;:::o;1937:437::-;2020:19;;;;:10;:19;;;;;:28;;;-1:-1:-1;;;;;2020:28:3;2006:10;:42;1998:95;;;;-1:-1:-1;;;;;1998:95:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2111:19;2122:7;2111:10;:19::i;:::-;:50;;;-1:-1:-1;2135:19:3;;;;:10;:19;;;;;:26;;;2134:27;2111:50;2103:121;;;;-1:-1:-1;;;;;2103:121:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:12;2256:25;;;:16;:25;;;;;;;;:39;;;2333:33;;;;2306:61;;-1:-1:-1;;;;;2306:61:3;;2321:10;2306:61;;;;;;;;;;;;;-1:-1:-1;;;;;2256:39:3;;;;;;2306:14;;:61;;;;;2256:25;;2306:61;;;;;;;;2256:39;2306:61;;;2:2:-1;;;;27:1;24;17:12;2:2;2306:61:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2306:61:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;1937:437:3:o;1533:44:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4190:132::-;4254:7;4279:15;;;:10;:15;;;;;:35;;;;4190:132::o;1485:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1485:42:4;;;;;;;;;;;;;;;;;;;;;;;:::o;2389:122::-;-1:-1:-1;;;;;2484:13:4;2459:7;2484:13;;;:7;:13;;;;;:20;;2389:122::o;4615:163::-;4678:4;4720:15;;;:10;:15;;;;;:30;;;4701:15;:49;;;;:69;;;4755:15;4766:3;4755:10;:15::i;:::-;4754:16;;4615:163;-1:-1:-1;;4615:163:4:o;2697:1393:3:-;2798:12;;2770:16;2843:15;;;:10;:15;;;;;;;;:28;2902:16;:21;;;;:35;2956:15;;;-1:-1:-1;;;;;2798:12:3;;;;;2843:28;;;;;2902:35;;;2956:22;;2948:106;;;;-1:-1:-1;;;;;2948:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3064:66;;;;;;3089:10;3064:66;;;;3109:4;3064:66;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3064:66:3;;;;;;;;-1:-1:-1;;;;;3064:24:3;;;;;:66;;;;;;;;;;;-1:-1:-1;3064:24:3;:66;;;2:2:-1;;;;27:1;24;17:12;2:2;3064:66:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3064:66:3;;;;3209:17;3222:3;3209:12;:17::i;:::-;:54;;;;-1:-1:-1;3230:21:3;;;;:16;:21;;;;;:29;;;:33;;3209:54;3206:693;;;3378:21;;;;:16;:21;;;;;:29;;;:36;-1:-1:-1;3375:301:3;;;3465:1;3433:21;;;:16;:21;;;;;;;;:29;;:33;;;3484:55;;-1:-1:-1;;;;;3484:55:3;;3497:10;3484:55;;;;;;;;;;;;-1:-1:-1;;;;;3484:12:3;;;;;:55;;;;;3433:21;;3484:55;;;;;;;;;:12;:55;;;2:2:-1;;;;27:1;24;17:12;2:2;3484:55:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3484:55:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3375:301:3;;-1:-1:-1;3375:301:3;;3576:21;;;;:16;:21;;;;;;;;:29;;:37;;;;;;;3631:30;;-1:-1:-1;;;;;3631:30:3;;3644:10;3631:30;;;;;;;;;;;;-1:-1:-1;;;;;3631:12:3;;;;;:30;;;;;3576:21;;3631:30;;;;;;;;;:12;:30;;;2:2:-1;;;;27:1;24;17:12;2:2;3631:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3631:30:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;3375:301:3;3206:693;;;3714:15;;;;:10;:15;;;;;:34;;;3707:41;;3704:185;;;3767:107;;-1:-1:-1;;;;;3767:107:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3704:185;3991:15;;;;:10;:15;;;;;:34;;;3983:42;;3980:103;;4040:32;;;-1:-1:-1;;;;;4040:32:3;;4055:10;4040:32;;;;;;;;;;;;-1:-1:-1;;;;;4040:14:3;;;;;:32;;;;;;;;;;;;;;-1:-1:-1;4040:14:3;:32;;;2:2:-1;;;;27:1;24;17:12;2:2;4040:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4040:32:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;3980:103:3;2697:1393;;;;;:::o;358:201:22:-;516:36;358:201;;;;;;;:::o;9929:264:4:-;10069:96;;;;10107:4;10069:96;;;;;;;;;;-1:-1:-1;;;;;10069:96:4;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;10069:96:4;;;;10059:107;;;;;;9929:264::o;1148:672:3:-;1256:19;;;;:10;:19;;;;;:28;;;-1:-1:-1;;;;;1256:28:3;1288:10;1256:42;1248:91;;;;-1:-1:-1;;;;;1248:91:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1349:12;1399:25;;;:16;:25;;;;;:33;;;1371:14;;1396:353;;1480:36;;;;;;;;-1:-1:-1;;;;;1480:36:3;;;;;;;;;;;;-1:-1:-1;1452:25:3;;;:16;:25;;;;;;:64;;;;-1:-1:-1;;1452:64:3;;;;;;;;-1:-1:-1;1452:64:3;;;;1396:353;;;1571:25;;;;:16;:25;;;;;:39;-1:-1:-1;;;;;1553:57:3;;;1571:39;;1553:57;1545:134;;;;-1:-1:-1;;;;;1545:134:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1693:25;;;;:16;:25;;;;;:33;;:45;;;;;;1396:353;1758:55;;;;;;1777:10;1758:55;;;;1797:4;1758:55;;;;;;;;;;;;-1:-1:-1;;;;;1758:18:3;;;;;:55;;;;;;;;;;;;;;-1:-1:-1;1758:18:3;:55;;;2:2:-1;;;;27:1;24;17:12;2:2;1758:55:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1758:55:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;1148:672:3:o;2824:286:4:-;1924:12;;2892:7;;;;-1:-1:-1;;;;;1924:12:4;1910:10;:26;1902:84;;;;-1:-1:-1;;;;;1902:84:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2927:15:::1;::::0;;;:10:::1;:15;::::0;;;;:22;::::1;;2926:23;2918:78;;;;-1:-1:-1::0;;;;;2918:78:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;3006:15:4::1;::::0;;;:10:::1;:15;::::0;;;;:29;;-1:-1:-1;;3006:29:4::1;3031:4;3006:29:::0;;::::1;::::0;;3052:25:::1;::::0;::::1;::::0;3078:24;::::1;::::0;-1:-1:-1;;;;;3078:24:4::1;2824:286:::0;;;:::o;3725:257::-;1924:12;;3808:4;;-1:-1:-1;;;;;1924:12:4;1910:10;:26;1902:84;;;;-1:-1:-1;;;;;1902:84:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3827:15:::1;3838:3;3827:10;:15::i;:::-;3823:153;;-1:-1:-1::0;3857:15:4::1;::::0;;;:10:::1;:15;::::0;;;;:34:::1;;:42:::0;;;::::1;::::0;;-1:-1:-1;3913:11:4::1;;3823:153;-1:-1:-1::0;3960:5:4::1;3953:12;;863:27:::0;;;-1:-1:-1;;;;;863:27:4;;:::o;5694:1586::-;-1:-1:-1;;;;;6035:18:4;;5945:7;6035:18;;;:7;:18;;;;;:25;5945:7;;6018:43;;6024:9;;6018:5;:43::i;:::-;6005:56;;6098:7;:18;6106:9;-1:-1:-1;;;;;6098:18:4;-1:-1:-1;;;;;6098:18:4;;;;;;;;;;;;6122:2;6098:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6098:27:4;;;;;;;;;;;;;;;;;;;6187:615;;;;;;;;6223:5;6187:615;;;;;;6256:6;-1:-1:-1;;;;;6187:615:4;;;;;6286:10;-1:-1:-1;;;;;6187:615:4;;;;;6330:3;6187:615;;;;;;6362:14;6187:615;;;;6424:14;6406:15;:32;6187:615;;;;6464:11;6187:615;;;;6510:20;6187:615;;;;6559:14;6187:615;;;;6598:10;6187:615;;;;6642:10;6187:615;;;;6745:1;6187:615;;;;6777:1;6187:615;;;6170:10;:14;6181:2;6170:14;;;;;;;;;;;:632;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6170:632:4;;;;;-1:-1:-1;;;;;6170:632:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6170:632:4;;;;;-1:-1:-1;;;;;6170:632:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6861:21;6879:2;6861:17;:21::i;:::-;-1:-1:-1;7271:2:4;5694:1586;-1:-1:-1;;;;;;;;5694:1586:4:o;179:173:22:-;314:31;179:173;;;;;;;:::o;1583:46:4:-;;;;;;;;;;;;;:::o;10328:527::-;10386:17;10420:32;;:::i;:::-;10477:5;;10455:66;;10492:4;10499:21;10455;:66::i;:::-;10420:101;;10531:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;;:67;;:11;:67;:::i;:::-;10608:36;;;;;;;;;;;;;;;;;;10630:13;10639:3;10630:8;:13::i;:::-;10608:7;;:36;;:11;:36;:::i;:::-;10654:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:11;;:33;;;;;:::i;:::-;10761:6;;10778:3;;10726:9;;10738:44;;-1:-1:-1;;;;;10761:6:4;;;;10769:7;;10738:22;:44::i;:::-;10792:15;;;;:10;:15;;;;;:34;;:38;;;10726:56;-1:-1:-1;;;10328:527:4;;;:::o;1767:295:9:-;1915:24;;:::i;:::-;1947:28;;:::i;:::-;1988:69;:3;2003:7;2012:16;2030:26;1988:69;:14;:69;:::i;:::-;1981:76;1767:295;-1:-1:-1;;;;;1767:295:9:o;1988:169:8:-;2090:8;;;;:27;;2112:4;2090:27;:21;:27;:::i;:::-;2123:8;;;;:29;;2145:6;2123:29;:21;:29;:::i;:::-;1988:169;;;:::o;11515:565:4:-;11568:27;11611:7;11607:48;;-1:-1:-1;11634:10:4;;;;;;;;;;;;;;;;;;;11607:48;11676:2;11664:9;11709:66;11716:6;;11709:66;;11738:5;;11762:2;11757:7;;;;11709:66;;;11784:17;11814:3;11804:14;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;11804:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;108:14;11804::4;87:42:-1;143:17;;-1:-1;11804:14:4;-1:-1:-1;11784:34:4;-1:-1:-1;11840:3:4;11853:192;11860:7;;11853:192;;-1:-1:-1;;11887:3:4;11904:10;11939:2;11934;:7;11944:2;11934:12;11929:2;:17;11918:2;:29;11904:44;;11962:9;11981:4;11974:12;;11962:24;;12010:2;12000:4;12005:1;12000:7;;;;;;;;;;;:12;;;;;;;;;;-1:-1:-1;12032:2:4;12026:8;;;;11853:192;;;;;-1:-1:-1;12068:4:4;11515:565;-1:-1:-1;;;;11515:565:4:o;3072:488:9:-;3268:12;;3245:36;;;3262:4;3245:36;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3245:36:9;;;;;;3235:47;;;;;;;;;3288:10;;;:25;;;;-1:-1:-1;3319:26:9;;;:15;:26;;;;;;:36;;-1:-1:-1;;3319:36:9;-1:-1:-1;;;;;3319:36:9;;;;;3366:29;;3235:47;;3366:29;;;3409:4;;-1:-1:-1;;;;;3409:4:9;:20;3430:7;3439:8;3449:19;3463:4;3449:13;:19::i;:::-;3409:60;;;;;-1:-1:-1;;;3409:60:9;;;;;;;-1:-1:-1;;;;;3409:60:9;-1:-1:-1;;;;;3409:60:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3409:60:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3409:60:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3409:60:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3409:60:9;3401:108;;;;-1:-1:-1;;;;;3401:108:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3515:12;:17;;3531:1;3515:17;;;3072:488;;;;;:::o;998:365:8:-;1147:24;;:::i;:::-;1179:49;1200:4;:8;;;365:3;1179:20;:49::i;:::-;-1:-1:-1;;1234:13:8;;;-1:-1:-1;;;;;1253:39:8;:20;;;:39;-1:-1:-1;;;;;;1298:43:8;:23;;;:43;1234:13;998:365::o;2793:210:15:-;2913:55;2924:3;386:1;2954:5;2948:19;2913:10;:55::i;:::-;2974:24;:3;2991:5;2974:24;:10;:24;:::i;7564:527:9:-;7652:12;7711:29;-1:-1:-1;;;7711:29:9;719:1;663;7961:4;:7;;;7976:4;:20;;;8004:4;:23;;;8035:4;:10;;;765:1;8073:4;:8;;;:12;;;7681:405;;;;;;-1:-1:-1;;;;;7681:405:9;-1:-1:-1;;;;;7681:405:9;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7681:405:9;-1:-1:-1;;;;;7681:405:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7681:405:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7681:405:9;;;-1:-1:-1;;26:21;;;22:32;6:49;;7681:405:9;;;49:4:-1;25:18;;61:17;;7681:405:9;182:15:-1;-1:-1;;;;;;7681:405:9;;;179:29:-1;;;;160:49;;;-1:-1;7681:405:9;;-1:-1:-1;;;;;;;;;;7564:527:9;;;:::o;982:395:14:-;1052:13;;:::i;:::-;1088:2;1077:8;:13;:18;1073:71;;1134:2;1123:8;:13;1117:2;:20;1105:32;;;;1073:71;-1:-1:-1;1191:12:14;;;;:23;;;1254:4;1248:11;;1266:16;;;-1:-1:-1;1289:14:14;;1331:18;;;1323:27;1310:41;;1191:12;982:395::o;685:670:15:-;822:2;813:5;:11;810:541;;834:44;:3;857:10;;;;;;856:20;;;834:15;:44::i;:::-;;810:541;;;903:4;894:5;:13;891:460;;917:41;:3;954:2;940:10;;;;;939:17;917:41;:15;:41;:::i;:::-;-1:-1:-1;966:23:15;:3;980:5;987:1;966:23;:13;:23;:::i;891:460::-;1014:6;1005:5;:15;1002:349;;1030:41;:3;1067:2;1053:10;;;;;1052:17;1030:41;:15;:41;:::i;:::-;-1:-1:-1;1079:23:15;:3;1093:5;1100:1;1079:23;:13;:23;:::i;1002:349::-;1127:10;1118:5;:19;1115:236;;1147:41;:3;1184:2;1170:10;;;;;1169:17;1147:41;:15;:41;:::i;:::-;-1:-1:-1;1196:23:15;:3;1210:5;1217:1;1196:23;:13;:23;:::i;1115:236::-;1244:18;1235:5;:27;1232:119;;1272:41;:3;1309:2;1295:10;;;;;1294:17;1272:41;:15;:41;:::i;:::-;-1:-1:-1;1321:23:15;:3;1335:5;1342:1;1321:23;:13;:23;:::i;4536:155:14:-;4613:13;;:::i;:::-;4641:45;4647:3;4652;:7;;;:14;4668:4;4674;:11;4641:5;:45::i;:::-;4634:52;4536:155;-1:-1:-1;;;4536:155:14:o;5851:144::-;5925:13;;:::i;:::-;5953:37;5964:3;5969;:7;;;:14;5985:4;5953:10;:37::i;9543:154::-;9624:13;;:::i;:::-;9652:40;9661:3;9666;:7;;;:14;9682:4;9688:3;9652:8;:40::i;:::-;9645:47;9543:154;-1:-1:-1;;;;9543:154:14:o;2691:1140::-;2786:13;;:::i;:::-;2822:4;:11;2815:3;:18;;2807:27;;12:1:-1;9;2:12;2807:27:14;2857:3;:12;;;2851:3;2845;:9;:24;2841:90;;;2879:45;2886:3;2891:28;2895:3;:12;;;2915:3;2909;:9;2891:3;:28::i;:::-;2922:1;2891:32;2879:6;:45::i;:::-;2937:9;2952:8;3046:3;3040:10;3117:6;3111:13;3233:3;3228:2;3220:6;3216:15;3212:25;3204:33;;3317:6;3311:3;3306;3302:13;3299:25;3296:2;;;3359:3;3354;3350:13;3342:6;3335:29;3296:2;-1:-1:-1;;;3396:2:14;3386:13;;3457:129;3471:2;3464:3;:9;3457:129;;3526:10;;3513:24;;-1:-1:-1;;3475:9:14;;;;3560:2;3552:10;;;;3570:9;3457:129;;;3695:10;3744:11;;-1:-1:-1;;3640:2:14;:8;;;3632:3;:17;:21;3740:22;;;3707:9;;3691:26;;;;3782:21;3769:35;;-1:-1:-1;3823:3:14;2691:1140;;;;;;:::o;4985:619::-;5068:13;;:::i;:::-;5100:3;:12;;;5093:3;:19;5089:69;;5122:29;5129:3;5134;:12;;;5149:1;5134:16;5122:6;:29::i;:::-;5244:3;5238:10;5315:6;5309:13;5427:2;5421:3;5413:6;5409:16;5405:25;5451:4;5445;5437:19;;5522:6;5517:3;5514:15;5511:2;;;5567:1;5559:6;5555:14;5547:6;5540:30;5511:2;-1:-1:-1;5596:3:14;;4985:619;-1:-1:-1;;;;4985:619:14:o;8650:642::-;8739:13;;:::i;:::-;8776:3;:12;;;8770:3;8764;:9;:24;8760:73;;;8798:28;8805:3;8817;8811;:9;8824:1;8810:15;8798:6;:28::i;:::-;8839:9;8864:1;8858:3;8851;:10;:14;8839:26;;8951:3;8945:10;9066:3;9060;9052:6;9048:16;9044:26;9122:4;9114;9110:9;9103:4;9097:11;9093:27;9090:37;9084:4;9077:51;;9210:6;9204:13;9198:3;9193;9189:13;9186:32;9183:2;;;9253:3;9248;9244:13;9236:6;9229:29;9183:2;-1:-1:-1;9284:3:14;;8650:642;-1:-1:-1;;;;;8650:642:14:o;1929:114::-;1979:4;1999:1;1995;:5;1991:34;;;-1:-1:-1;2017:1:14;2010:8;;1991:34;-1:-1:-1;2037:1:14;1929:114;-1:-1:-1;1929:114:14:o;1772:153::-;1863:7;;1876:19;1863:3;1886:8;1876:4;:19::i;:::-;;1901;1908:3;1913:6;1901;:19::i;342:3750:3:-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;342:3750:3;;;;;;-1:-1:-1;;;;;342:3750:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;342:3750:3;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/// SPDX-License-Identifier: None\npragma solidity ^0.6.6;\n\nimport \"./ERC20PaymentStandard.sol\";\nimport {IERC20} from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\n/**\n* @title ERC20CollateralPayment\n* @author Carson Case\n* @notice this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added\n */\ncontract ERC20CollateralPayment is ERC20PaymentStandard{\n    /// @notice collateral info is stored in a struct/mapping pair\n    struct collateral{\n        address ERC20Contract;\n        uint256 ammount;\n    }\n    mapping(uint256 => collateral) public collateralLookup;\n\n    /**\n    * @notice constructor just runs the ERC20PaymentStandard constructor\n    * @param _bonds is the contract address of bonds\n     */\n    constructor(address _bonds) ERC20PaymentStandard(_bonds) public{}\n\n    /**\n    * @notice addCollateral must be called before issuing loan\n    * @param _ERC20Contract address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\n    * @param _ammount is the ammount to add as collateral\n    * @param _loanId is the loan ID to add collateral to\n     */\n    function addCollateral(address _ERC20Contract, uint256 _ammount, uint256 _loanId) external{\n        require(loanLookup[_loanId].borrower == msg.sender, \"only the borrower can add collateral\");\n        IERC20 erc20 = IERC20(_ERC20Contract);\n        if(collateralLookup[_loanId].ammount == 0){\n            collateralLookup[_loanId] = collateral(_ERC20Contract, _ammount);\n        }else{\n            require(_ERC20Contract == collateralLookup[_loanId].ERC20Contract, \"When increasing collateral, you must use the same ERC20 address \");\n            collateralLookup[_loanId].ammount += _ammount;\n        }\n        erc20.transferFrom(msg.sender, address(this), _ammount);\n    }\n\n    /**\n    * @notice return Collateral when the loan is complete \n    * @param _loanId is the loan ID\n     */\n    function returnCollateral(uint256 _loanId) external{\n        require(msg.sender == loanLookup[_loanId].borrower, \"only the borrower can collect collateral\");\n        require(isComplete(_loanId) || !loanLookup[_loanId].issued, \"loan must be paid off or not started to collect collateral\");\n        IERC20 erc20 = IERC20(collateralLookup[_loanId].ERC20Contract);\n        erc20.transfer(msg.sender, collateralLookup[_loanId].ammount);\n    }\n\n    /**\n    * @notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\n    * However that was not a good idea as a hacker could create fake bonds.\n    * @param _id is the id of the bond to send in\n    * @param _amm is the ammount to send\n     */\n    function withdrawl(uint256 _id, uint256 _amm) external override{\n        IERC1155 erc1155 = IERC1155(bondContract);\n        IERC20 erc20 = IERC20(loanLookup[_id].ERC20Address);\n        IERC20 col = IERC20(collateralLookup[_id].ERC20Contract);\n        require(loanLookup[_id].issued, \"this loan has not been issued yet. How do you even have bonds for it???\");\n        erc1155.safeTransferFrom(msg.sender, address(this), _id, _amm, \"\");\n        //if loan is delinquent and there's collateral to collect\n        if(isDelinquent(_id) && collateralLookup[_id].ammount !=0){\n            //determine if we should send remainder of collateral or exact ammount of bonds sent\n            if(collateralLookup[_id].ammount < _amm){\n                collateralLookup[_id].ammount = 0;\n                col.transfer(msg.sender, collateralLookup[_id].ammount);\n            }else{\n                collateralLookup[_id].ammount -= _amm;\n                col.transfer(msg.sender, _amm);\n            }\n        }else{\n            if(_amm > loanLookup[_id].awaitingCollection){\n                revert(\"The ammount your are trying to collect is not available. And/Or there is no collateral to collect\");\n            }\n        }\n        //if there's payments to collect in this ammount, collect them.\n        if(_amm <= loanLookup[_id].awaitingCollection){\n            erc20.transfer(msg.sender, _amm);\n        }\n\n    }\n}",
  "sourcePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol",
  "ast": {
    "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol",
    "exportedSymbols": {
      "ERC20CollateralPayment": [
        944
      ]
    },
    "id": 945,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 653,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:3"
      },
      {
        "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol",
        "file": "./ERC20PaymentStandard.sol",
        "id": 654,
        "nodeType": "ImportDirective",
        "scope": 945,
        "sourceUnit": 1621,
        "src": "59:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 656,
        "nodeType": "ImportDirective",
        "scope": 945,
        "sourceUnit": 5971,
        "src": "96:70:3",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 655,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "104:6:3",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 658,
              "name": "ERC20PaymentStandard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1620,
              "src": "377:20:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1620",
                "typeString": "contract ERC20PaymentStandard"
              }
            },
            "id": 659,
            "nodeType": "InheritanceSpecifier",
            "src": "377:20:3"
          }
        ],
        "contractDependencies": [
          1620,
          2693,
          3899,
          3911,
          5179,
          5207,
          5385
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 657,
          "nodeType": "StructuredDocumentation",
          "src": "168:173:3",
          "text": "@title ERC20CollateralPayment\n@author Carson Case\n@notice this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added"
        },
        "fullyImplemented": true,
        "id": 944,
        "linearizedBaseContracts": [
          944,
          1620,
          2693,
          5179,
          5207,
          5385,
          3899,
          3911
        ],
        "name": "ERC20CollateralPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC20CollateralPayment.collateral",
            "id": 664,
            "members": [
              {
                "constant": false,
                "id": 661,
                "mutability": "mutable",
                "name": "ERC20Contract",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 664,
                "src": "497:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 660,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "497:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 663,
                "mutability": "mutable",
                "name": "ammount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 664,
                "src": "528:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 662,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "collateral",
            "nodeType": "StructDefinition",
            "scope": 944,
            "src": "470:80:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "444da0c9",
            "id": 668,
            "mutability": "mutable",
            "name": "collateralLookup",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 944,
            "src": "555:54:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral)"
            },
            "typeName": {
              "id": 667,
              "keyType": {
                "id": 665,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "563:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "555:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral)"
              },
              "valueType": {
                "contractScope": null,
                "id": 666,
                "name": "collateral",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 664,
                "src": "574:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_collateral_$664_storage_ptr",
                  "typeString": "struct ERC20CollateralPayment.collateral"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 677,
              "nodeType": "Block",
              "src": "821:2:3",
              "statements": []
            },
            "documentation": {
              "id": 669,
              "nodeType": "StructuredDocumentation",
              "src": "616:137:3",
              "text": "@notice constructor just runs the ERC20PaymentStandard constructor\n@param _bonds is the contract address of bonds"
            },
            "id": 678,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 674,
                    "name": "_bonds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 671,
                    "src": "807:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 675,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 673,
                  "name": "ERC20PaymentStandard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1620,
                  "src": "786:20:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20PaymentStandard_$1620_$",
                    "typeString": "type(contract ERC20PaymentStandard)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "786:28:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "_bonds",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 678,
                  "src": "770:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "769:16:3"
            },
            "returnParameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "821:0:3"
            },
            "scope": 944,
            "src": "758:65:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "1238:582:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 689,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "1256:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$999_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 691,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 690,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "1267:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1256:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$999_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 692,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 978,
                          "src": "1256:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1288:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1288:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1256:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792074686520626f72726f7765722063616e2061646420636f6c6c61746572616c",
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1300:38:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                          "typeString": "literal_string \"only the borrower can add collateral\""
                        },
                        "value": "only the borrower can add collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                          "typeString": "literal_string \"only the borrower can add collateral\""
                        }
                      ],
                      "id": 688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1248:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1248:91:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "1248:91:3"
                },
                {
                  "assignments": [
                    700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 700,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 752,
                      "src": "1349:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5970",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 699,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5970,
                        "src": "1349:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5970",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 702,
                        "name": "_ERC20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "1371:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 701,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5970,
                      "src": "1364:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$5970_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1364:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5970",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1349:37:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 705,
                          "name": "collateralLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 668,
                          "src": "1399:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                          }
                        },
                        "id": 707,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 706,
                          "name": "_loanId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 685,
                          "src": "1416:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1399:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateral_$664_storage",
                          "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ammount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 663,
                      "src": "1399:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1436:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1399:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 738,
                    "nodeType": "Block",
                    "src": "1531:218:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 722,
                                "name": "_ERC20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 681,
                                "src": "1553:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 723,
                                    "name": "collateralLookup",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 668,
                                    "src": "1571:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                                      "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                    }
                                  },
                                  "id": 725,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 724,
                                    "name": "_loanId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 685,
                                    "src": "1588:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1571:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_collateral_$664_storage",
                                    "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                  }
                                },
                                "id": 726,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ERC20Contract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 661,
                                "src": "1571:39:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1553:57:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5768656e20696e6372656173696e6720636f6c6c61746572616c2c20796f75206d75737420757365207468652073616d65204552433230206164647265737320",
                              "id": 728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1612:66:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                                "typeString": "literal_string \"When increasing collateral, you must use the same ERC20 address \""
                              },
                              "value": "When increasing collateral, you must use the same ERC20 address "
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                                "typeString": "literal_string \"When increasing collateral, you must use the same ERC20 address \""
                              }
                            ],
                            "id": 721,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1545:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1545:134:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 730,
                        "nodeType": "ExpressionStatement",
                        "src": "1545:134:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 731,
                                "name": "collateralLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 668,
                                "src": "1693:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                }
                              },
                              "id": 733,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 732,
                                "name": "_loanId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 685,
                                "src": "1710:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1693:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateral_$664_storage",
                                "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                              }
                            },
                            "id": 734,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ammount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 663,
                            "src": "1693:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 735,
                            "name": "_ammount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 683,
                            "src": "1730:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1693:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 737,
                        "nodeType": "ExpressionStatement",
                        "src": "1693:45:3"
                      }
                    ]
                  },
                  "id": 739,
                  "nodeType": "IfStatement",
                  "src": "1396:353:3",
                  "trueBody": {
                    "id": 720,
                    "nodeType": "Block",
                    "src": "1438:89:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 711,
                              "name": "collateralLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "1452:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                              }
                            },
                            "id": 713,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 712,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "1469:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1452:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateral_$664_storage",
                              "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 715,
                                "name": "_ERC20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 681,
                                "src": "1491:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 716,
                                "name": "_ammount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 683,
                                "src": "1507:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 714,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 664,
                              "src": "1480:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_collateral_$664_storage_ptr_$",
                                "typeString": "type(struct ERC20CollateralPayment.collateral storage pointer)"
                              }
                            },
                            "id": 717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1480:36:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateral_$664_memory_ptr",
                              "typeString": "struct ERC20CollateralPayment.collateral memory"
                            }
                          },
                          "src": "1452:64:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$664_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 719,
                        "nodeType": "ExpressionStatement",
                        "src": "1452:64:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 743,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1777:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1777:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 747,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1797:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$944",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$944",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          ],
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1789:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1789:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1789:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 749,
                        "name": "_ammount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "1804:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 740,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "1758:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5970",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5951,
                      "src": "1758:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "1758:55:3"
                }
              ]
            },
            "documentation": {
              "id": 679,
              "nodeType": "StructuredDocumentation",
              "src": "829:314:3",
              "text": "@notice addCollateral must be called before issuing loan\n@param _ERC20Contract address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\n@param _ammount is the ammount to add as collateral\n@param _loanId is the loan ID to add collateral to"
            },
            "functionSelector": "c75cf245",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "_ERC20Contract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 753,
                  "src": "1171:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1171:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "_ammount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 753,
                  "src": "1195:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1195:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "_loanId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 753,
                  "src": "1213:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1170:59:3"
            },
            "returnParameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1238:0:3"
            },
            "scope": 944,
            "src": "1148:672:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "1988:386:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 760,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2006:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2006:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 762,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "2020:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$999_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 764,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 763,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "2031:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2020:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$999_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 978,
                          "src": "2020:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2006:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792074686520626f72726f7765722063616e20636f6c6c65637420636f6c6c61746572616c",
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2050:42:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                          "typeString": "literal_string \"only the borrower can collect collateral\""
                        },
                        "value": "only the borrower can collect collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                          "typeString": "literal_string \"only the borrower can collect collateral\""
                        }
                      ],
                      "id": 759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1998:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1998:95:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "1998:95:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 772,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "2122:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 771,
                            "name": "isComplete",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1409,
                            "src": "2111:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2111:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2134:27:3",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 774,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1003,
                                "src": "2135:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$999_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 776,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 775,
                                "name": "_loanId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 756,
                                "src": "2146:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2135:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$999_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 777,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "issued",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 974,
                            "src": "2135:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2111:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6f616e206d7573742062652070616964206f6666206f72206e6f74207374617274656420746f20636f6c6c65637420636f6c6c61746572616c",
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2163:60:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                          "typeString": "literal_string \"loan must be paid off or not started to collect collateral\""
                        },
                        "value": "loan must be paid off or not started to collect collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                          "typeString": "literal_string \"loan must be paid off or not started to collect collateral\""
                        }
                      ],
                      "id": 770,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2103:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2103:121:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "2103:121:3"
                },
                {
                  "assignments": [
                    784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 784,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 803,
                      "src": "2234:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5970",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 783,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5970,
                        "src": "2234:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5970",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 791,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 786,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "2256:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 788,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 787,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "2273:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2256:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$664_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Contract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 661,
                        "src": "2256:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 785,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5970,
                      "src": "2249:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$5970_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2249:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5970",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2234:62:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 795,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2321:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2321:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 797,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "2333:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 799,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 798,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "2350:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2333:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$664_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 800,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ammount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 663,
                        "src": "2333:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 792,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "2306:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5970",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5919,
                      "src": "2306:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2306:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "2306:61:3"
                }
              ]
            },
            "documentation": {
              "id": 754,
              "nodeType": "StructuredDocumentation",
              "src": "1826:106:3",
              "text": "@notice return Collateral when the loan is complete \n@param _loanId is the loan ID"
            },
            "functionSelector": "44e02dbc",
            "id": 804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "_loanId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 804,
                  "src": "1963:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1963:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1962:17:3"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1988:0:3"
            },
            "scope": 944,
            "src": "1937:437:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1384
            ],
            "body": {
              "id": 942,
              "nodeType": "Block",
              "src": "2760:1330:3",
              "statements": [
                {
                  "assignments": [
                    814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 814,
                      "mutability": "mutable",
                      "name": "erc1155",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 942,
                      "src": "2770:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$5329",
                        "typeString": "contract IERC1155"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 813,
                        "name": "IERC1155",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5329,
                        "src": "2770:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$5329",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 818,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 816,
                        "name": "bondContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "2798:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 815,
                      "name": "IERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5329,
                      "src": "2789:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC1155_$5329_$",
                        "typeString": "type(contract IERC1155)"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2789:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$5329",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2770:41:3"
                },
                {
                  "assignments": [
                    820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 820,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 942,
                      "src": "2821:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5970",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 819,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5970,
                        "src": "2821:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5970",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 827,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 822,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "2843:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$999_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 824,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 823,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "2854:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2843:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$999_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 976,
                        "src": "2843:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 821,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5970,
                      "src": "2836:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$5970_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2836:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5970",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2821:51:3"
                },
                {
                  "assignments": [
                    829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 829,
                      "mutability": "mutable",
                      "name": "col",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 942,
                      "src": "2882:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5970",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 828,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5970,
                        "src": "2882:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5970",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 836,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 831,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "2902:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 833,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 832,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "2919:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2902:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$664_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 834,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Contract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 661,
                        "src": "2902:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 830,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5970,
                      "src": "2895:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$5970_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2895:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5970",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2882:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 838,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "2956:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$999_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 840,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 839,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "2967:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2956:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$999_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 841,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issued",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 974,
                        "src": "2956:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74686973206c6f616e20686173206e6f74206265656e20697373756564207965742e20486f7720646f20796f75206576656e206861766520626f6e647320666f722069743f3f3f",
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2980:73:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        },
                        "value": "this loan has not been issued yet. How do you even have bonds for it???"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        }
                      ],
                      "id": 837,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2948:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2948:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 844,
                  "nodeType": "ExpressionStatement",
                  "src": "2948:106:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 848,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3089:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3089:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 852,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3109:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$944",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$944",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          ],
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3101:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 850,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3101:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3101:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 854,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "3116:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 855,
                        "name": "_amm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "3121:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3127:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 845,
                        "name": "erc1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "3064:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$5329",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5312,
                      "src": "3064:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3064:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 858,
                  "nodeType": "ExpressionStatement",
                  "src": "3064:66:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 860,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "3222:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 859,
                        "name": "isDelinquent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "3209:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3209:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 862,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "3230:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 864,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 863,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "3247:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3230:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$664_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 865,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ammount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 663,
                        "src": "3230:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3262:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3230:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3209:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 924,
                    "nodeType": "Block",
                    "src": "3690:209:3",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 912,
                            "name": "_amm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "3707:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 913,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1003,
                                "src": "3714:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$999_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 915,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 914,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "3725:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3714:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$999_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 916,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "awaitingCollection",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 996,
                            "src": "3714:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3707:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 923,
                        "nodeType": "IfStatement",
                        "src": "3704:185:3",
                        "trueBody": {
                          "id": 922,
                          "nodeType": "Block",
                          "src": "3749:140:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "54686520616d6d6f756e7420796f75722061726520747279696e6720746f20636f6c6c656374206973206e6f7420617661696c61626c652e20416e642f4f72207468657265206973206e6f20636f6c6c61746572616c20746f20636f6c6c656374",
                                    "id": 919,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3774:99:3",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_846cc0b1aafc73139d8ddf10bd5c5eb839730e911733144a6446ec920579faed",
                                      "typeString": "literal_string \"The ammount your are trying to collect is not available. And/Or there is no collateral to collect\""
                                    },
                                    "value": "The ammount your are trying to collect is not available. And/Or there is no collateral to collect"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_846cc0b1aafc73139d8ddf10bd5c5eb839730e911733144a6446ec920579faed",
                                      "typeString": "literal_string \"The ammount your are trying to collect is not available. And/Or there is no collateral to collect\""
                                    }
                                  ],
                                  "id": 918,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "3767:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3767:107:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 921,
                              "nodeType": "ExpressionStatement",
                              "src": "3767:107:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 925,
                  "nodeType": "IfStatement",
                  "src": "3206:693:3",
                  "trueBody": {
                    "id": 911,
                    "nodeType": "Block",
                    "src": "3264:422:3",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 869,
                                "name": "collateralLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 668,
                                "src": "3378:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                }
                              },
                              "id": 871,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 870,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "3395:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3378:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateral_$664_storage",
                                "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                              }
                            },
                            "id": 872,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ammount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 663,
                            "src": "3378:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 873,
                            "name": "_amm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "3410:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3378:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 909,
                          "nodeType": "Block",
                          "src": "3558:118:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 894,
                                      "name": "collateralLookup",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 668,
                                      "src": "3576:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                                        "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                      }
                                    },
                                    "id": 896,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 895,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 807,
                                      "src": "3593:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3576:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_collateral_$664_storage",
                                      "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                    }
                                  },
                                  "id": 897,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ammount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 663,
                                  "src": "3576:29:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 898,
                                  "name": "_amm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 809,
                                  "src": "3609:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3576:37:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 900,
                              "nodeType": "ExpressionStatement",
                              "src": "3576:37:3"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 904,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3644:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 905,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "3644:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 906,
                                    "name": "_amm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 809,
                                    "src": "3656:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 901,
                                    "name": "col",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "3631:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$5970",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 903,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5919,
                                  "src": "3631:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3631:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 908,
                              "nodeType": "ExpressionStatement",
                              "src": "3631:30:3"
                            }
                          ]
                        },
                        "id": 910,
                        "nodeType": "IfStatement",
                        "src": "3375:301:3",
                        "trueBody": {
                          "id": 893,
                          "nodeType": "Block",
                          "src": "3415:139:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 875,
                                      "name": "collateralLookup",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 668,
                                      "src": "3433:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                                        "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                      }
                                    },
                                    "id": 877,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 876,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 807,
                                      "src": "3450:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3433:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_collateral_$664_storage",
                                      "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                    }
                                  },
                                  "id": 878,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ammount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 663,
                                  "src": "3433:29:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 879,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3465:1:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3433:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 881,
                              "nodeType": "ExpressionStatement",
                              "src": "3433:33:3"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 885,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3497:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 886,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "3497:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 887,
                                        "name": "collateralLookup",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 668,
                                        "src": "3509:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$664_storage_$",
                                          "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                        }
                                      },
                                      "id": 889,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 888,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 807,
                                        "src": "3526:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3509:21:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateral_$664_storage",
                                        "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                      }
                                    },
                                    "id": 890,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ammount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 663,
                                    "src": "3509:29:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 882,
                                    "name": "col",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "3484:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$5970",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 884,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5919,
                                  "src": "3484:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3484:55:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 892,
                              "nodeType": "ExpressionStatement",
                              "src": "3484:55:3"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 926,
                      "name": "_amm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 809,
                      "src": "3983:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 927,
                          "name": "loanLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "3991:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$999_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                          }
                        },
                        "id": 929,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 928,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "4002:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3991:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$999_storage",
                          "typeString": "struct ERC20PaymentStandard.loan storage ref"
                        }
                      },
                      "id": 930,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "awaitingCollection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 996,
                      "src": "3991:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3983:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 941,
                  "nodeType": "IfStatement",
                  "src": "3980:103:3",
                  "trueBody": {
                    "id": 940,
                    "nodeType": "Block",
                    "src": "4026:57:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 935,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4055:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4055:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 937,
                              "name": "_amm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 809,
                              "src": "4067:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 932,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 820,
                              "src": "4040:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5970",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5919,
                            "src": "4040:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4040:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 939,
                        "nodeType": "ExpressionStatement",
                        "src": "4040:32:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 805,
              "nodeType": "StructuredDocumentation",
              "src": "2380:312:3",
              "text": "@notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\nHowever that was not a good idea as a hacker could create fake bonds.\n@param _id is the id of the bond to send in\n@param _amm is the ammount to send"
            },
            "functionSelector": "a97868be",
            "id": 943,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawl",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 811,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2752:8:3"
            },
            "parameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 943,
                  "src": "2716:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "_amm",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 943,
                  "src": "2729:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2729:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2715:27:3"
            },
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2760:0:3"
            },
            "scope": 944,
            "src": "2697:1393:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 945,
        "src": "342:3750:3"
      }
    ],
    "src": "34:4058:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol",
      "exportedSymbols": {
        "ERC20CollateralPayment": [
          944
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".6"
          ]
        },
        "id": 653,
        "name": "PragmaDirective",
        "src": "34:23:3"
      },
      {
        "attributes": {
          "SourceUnit": 1621,
          "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol",
          "file": "./ERC20PaymentStandard.sol",
          "scope": 945,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 654,
        "name": "ImportDirective",
        "src": "59:36:3"
      },
      {
        "attributes": {
          "SourceUnit": 5971,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "scope": 945,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "argumentTypes": null,
                  "overloadedDeclarations": [
                    null
                  ],
                  "referencedDeclaration": null,
                  "type": null,
                  "value": "IERC20"
                },
                "id": 655,
                "name": "Identifier",
                "src": "104:6:3"
              },
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 656,
        "name": "ImportDirective",
        "src": "96:70:3"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1620,
            2693,
            3899,
            3911,
            5179,
            5207,
            5385
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            944,
            1620,
            2693,
            5179,
            5207,
            5385,
            3899,
            3911
          ],
          "name": "ERC20CollateralPayment",
          "scope": 945
        },
        "children": [
          {
            "attributes": {
              "text": "@title ERC20CollateralPayment\n@author Carson Case\n@notice this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added"
            },
            "id": 657,
            "name": "StructuredDocumentation",
            "src": "168:173:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20PaymentStandard",
                  "referencedDeclaration": 1620,
                  "type": "contract ERC20PaymentStandard"
                },
                "id": 658,
                "name": "UserDefinedTypeName",
                "src": "377:20:3"
              }
            ],
            "id": 659,
            "name": "InheritanceSpecifier",
            "src": "377:20:3"
          },
          {
            "attributes": {
              "canonicalName": "ERC20CollateralPayment.collateral",
              "name": "collateral",
              "scope": 944,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "ERC20Contract",
                  "overrides": null,
                  "scope": 664,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 660,
                    "name": "ElementaryTypeName",
                    "src": "497:7:3"
                  }
                ],
                "id": 661,
                "name": "VariableDeclaration",
                "src": "497:21:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "ammount",
                  "overrides": null,
                  "scope": 664,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 662,
                    "name": "ElementaryTypeName",
                    "src": "528:7:3"
                  }
                ],
                "id": 663,
                "name": "VariableDeclaration",
                "src": "528:15:3"
              }
            ],
            "id": 664,
            "name": "StructDefinition",
            "src": "470:80:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "444da0c9",
              "mutability": "mutable",
              "name": "collateralLookup",
              "overrides": null,
              "scope": 944,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 665,
                    "name": "ElementaryTypeName",
                    "src": "563:7:3"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "collateral",
                      "referencedDeclaration": 664,
                      "type": "struct ERC20CollateralPayment.collateral"
                    },
                    "id": 666,
                    "name": "UserDefinedTypeName",
                    "src": "574:10:3"
                  }
                ],
                "id": 667,
                "name": "Mapping",
                "src": "555:30:3"
              }
            ],
            "id": 668,
            "name": "VariableDeclaration",
            "src": "555:54:3"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 944,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice constructor just runs the ERC20PaymentStandard constructor\n@param _bonds is the contract address of bonds"
                },
                "id": 669,
                "name": "StructuredDocumentation",
                "src": "616:137:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_bonds",
                      "overrides": null,
                      "scope": 678,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 670,
                        "name": "ElementaryTypeName",
                        "src": "770:7:3"
                      }
                    ],
                    "id": 671,
                    "name": "VariableDeclaration",
                    "src": "770:14:3"
                  }
                ],
                "id": 672,
                "name": "ParameterList",
                "src": "769:16:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 676,
                "name": "ParameterList",
                "src": "821:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1620,
                      "type": "type(contract ERC20PaymentStandard)",
                      "value": "ERC20PaymentStandard"
                    },
                    "id": 673,
                    "name": "Identifier",
                    "src": "786:20:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 671,
                      "type": "address",
                      "value": "_bonds"
                    },
                    "id": 674,
                    "name": "Identifier",
                    "src": "807:6:3"
                  }
                ],
                "id": 675,
                "name": "ModifierInvocation",
                "src": "786:28:3"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 677,
                "name": "Block",
                "src": "821:2:3"
              }
            ],
            "id": 678,
            "name": "FunctionDefinition",
            "src": "758:65:3"
          },
          {
            "attributes": {
              "functionSelector": "c75cf245",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addCollateral",
              "overrides": null,
              "scope": 944,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice addCollateral must be called before issuing loan\n@param _ERC20Contract address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\n@param _ammount is the ammount to add as collateral\n@param _loanId is the loan ID to add collateral to"
                },
                "id": 679,
                "name": "StructuredDocumentation",
                "src": "829:314:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_ERC20Contract",
                      "overrides": null,
                      "scope": 753,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 680,
                        "name": "ElementaryTypeName",
                        "src": "1171:7:3"
                      }
                    ],
                    "id": 681,
                    "name": "VariableDeclaration",
                    "src": "1171:22:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_ammount",
                      "overrides": null,
                      "scope": 753,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 682,
                        "name": "ElementaryTypeName",
                        "src": "1195:7:3"
                      }
                    ],
                    "id": 683,
                    "name": "VariableDeclaration",
                    "src": "1195:16:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_loanId",
                      "overrides": null,
                      "scope": 753,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 684,
                        "name": "ElementaryTypeName",
                        "src": "1213:7:3"
                      }
                    ],
                    "id": 685,
                    "name": "VariableDeclaration",
                    "src": "1213:15:3"
                  }
                ],
                "id": 686,
                "name": "ParameterList",
                "src": "1170:59:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 687,
                "name": "ParameterList",
                "src": "1238:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                                  "typeString": "literal_string \"only the borrower can add collateral\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 688,
                            "name": "Identifier",
                            "src": "1248:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "borrower",
                                  "referencedDeclaration": 978,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct ERC20PaymentStandard.loan storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1003,
                                          "type": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)",
                                          "value": "loanLookup"
                                        },
                                        "id": 689,
                                        "name": "Identifier",
                                        "src": "1256:10:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 685,
                                          "type": "uint256",
                                          "value": "_loanId"
                                        },
                                        "id": 690,
                                        "name": "Identifier",
                                        "src": "1267:7:3"
                                      }
                                    ],
                                    "id": 691,
                                    "name": "IndexAccess",
                                    "src": "1256:19:3"
                                  }
                                ],
                                "id": 692,
                                "name": "MemberAccess",
                                "src": "1256:28:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 693,
                                    "name": "Identifier",
                                    "src": "1288:3:3"
                                  }
                                ],
                                "id": 694,
                                "name": "MemberAccess",
                                "src": "1288:10:3"
                              }
                            ],
                            "id": 695,
                            "name": "BinaryOperation",
                            "src": "1256:42:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6f6e6c792074686520626f72726f7765722063616e2061646420636f6c6c61746572616c",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"only the borrower can add collateral\"",
                              "value": "only the borrower can add collateral"
                            },
                            "id": 696,
                            "name": "Literal",
                            "src": "1300:38:3"
                          }
                        ],
                        "id": 697,
                        "name": "FunctionCall",
                        "src": "1248:91:3"
                      }
                    ],
                    "id": 698,
                    "name": "ExpressionStatement",
                    "src": "1248:91:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        700
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "erc20",
                          "overrides": null,
                          "scope": 752,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 5970,
                              "type": "contract IERC20"
                            },
                            "id": 699,
                            "name": "UserDefinedTypeName",
                            "src": "1349:6:3"
                          }
                        ],
                        "id": 700,
                        "name": "VariableDeclaration",
                        "src": "1349:12:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract IERC20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5970,
                              "type": "type(contract IERC20)",
                              "value": "IERC20"
                            },
                            "id": 701,
                            "name": "Identifier",
                            "src": "1364:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 681,
                              "type": "address",
                              "value": "_ERC20Contract"
                            },
                            "id": 702,
                            "name": "Identifier",
                            "src": "1371:14:3"
                          }
                        ],
                        "id": 703,
                        "name": "FunctionCall",
                        "src": "1364:22:3"
                      }
                    ],
                    "id": 704,
                    "name": "VariableDeclarationStatement",
                    "src": "1349:37:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ammount",
                              "referencedDeclaration": 663,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct ERC20CollateralPayment.collateral storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 668,
                                      "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                      "value": "collateralLookup"
                                    },
                                    "id": 705,
                                    "name": "Identifier",
                                    "src": "1399:16:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 685,
                                      "type": "uint256",
                                      "value": "_loanId"
                                    },
                                    "id": 706,
                                    "name": "Identifier",
                                    "src": "1416:7:3"
                                  }
                                ],
                                "id": 707,
                                "name": "IndexAccess",
                                "src": "1399:25:3"
                              }
                            ],
                            "id": 708,
                            "name": "MemberAccess",
                            "src": "1399:33:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 709,
                            "name": "Literal",
                            "src": "1436:1:3"
                          }
                        ],
                        "id": 710,
                        "name": "BinaryOperation",
                        "src": "1399:38:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "struct ERC20CollateralPayment.collateral storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "struct ERC20CollateralPayment.collateral storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 668,
                                          "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                          "value": "collateralLookup"
                                        },
                                        "id": 711,
                                        "name": "Identifier",
                                        "src": "1452:16:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 685,
                                          "type": "uint256",
                                          "value": "_loanId"
                                        },
                                        "id": 712,
                                        "name": "Identifier",
                                        "src": "1469:7:3"
                                      }
                                    ],
                                    "id": 713,
                                    "name": "IndexAccess",
                                    "src": "1452:25:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": true,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "struct ERC20CollateralPayment.collateral memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 664,
                                          "type": "type(struct ERC20CollateralPayment.collateral storage pointer)",
                                          "value": "collateral"
                                        },
                                        "id": 714,
                                        "name": "Identifier",
                                        "src": "1480:10:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 681,
                                          "type": "address",
                                          "value": "_ERC20Contract"
                                        },
                                        "id": 715,
                                        "name": "Identifier",
                                        "src": "1491:14:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 683,
                                          "type": "uint256",
                                          "value": "_ammount"
                                        },
                                        "id": 716,
                                        "name": "Identifier",
                                        "src": "1507:8:3"
                                      }
                                    ],
                                    "id": 717,
                                    "name": "FunctionCall",
                                    "src": "1480:36:3"
                                  }
                                ],
                                "id": 718,
                                "name": "Assignment",
                                "src": "1452:64:3"
                              }
                            ],
                            "id": 719,
                            "name": "ExpressionStatement",
                            "src": "1452:64:3"
                          }
                        ],
                        "id": 720,
                        "name": "Block",
                        "src": "1438:89:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                                          "typeString": "literal_string \"When increasing collateral, you must use the same ERC20 address \""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 721,
                                    "name": "Identifier",
                                    "src": "1545:7:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 681,
                                          "type": "address",
                                          "value": "_ERC20Contract"
                                        },
                                        "id": 722,
                                        "name": "Identifier",
                                        "src": "1553:14:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "ERC20Contract",
                                          "referencedDeclaration": 661,
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct ERC20CollateralPayment.collateral storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 668,
                                                  "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                                  "value": "collateralLookup"
                                                },
                                                "id": 723,
                                                "name": "Identifier",
                                                "src": "1571:16:3"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 685,
                                                  "type": "uint256",
                                                  "value": "_loanId"
                                                },
                                                "id": 724,
                                                "name": "Identifier",
                                                "src": "1588:7:3"
                                              }
                                            ],
                                            "id": 725,
                                            "name": "IndexAccess",
                                            "src": "1571:25:3"
                                          }
                                        ],
                                        "id": 726,
                                        "name": "MemberAccess",
                                        "src": "1571:39:3"
                                      }
                                    ],
                                    "id": 727,
                                    "name": "BinaryOperation",
                                    "src": "1553:57:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "5768656e20696e6372656173696e6720636f6c6c61746572616c2c20796f75206d75737420757365207468652073616d65204552433230206164647265737320",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"When increasing collateral, you must use the same ERC20 address \"",
                                      "value": "When increasing collateral, you must use the same ERC20 address "
                                    },
                                    "id": 728,
                                    "name": "Literal",
                                    "src": "1612:66:3"
                                  }
                                ],
                                "id": 729,
                                "name": "FunctionCall",
                                "src": "1545:134:3"
                              }
                            ],
                            "id": 730,
                            "name": "ExpressionStatement",
                            "src": "1545:134:3"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "ammount",
                                      "referencedDeclaration": 663,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct ERC20CollateralPayment.collateral storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 668,
                                              "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                              "value": "collateralLookup"
                                            },
                                            "id": 731,
                                            "name": "Identifier",
                                            "src": "1693:16:3"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 685,
                                              "type": "uint256",
                                              "value": "_loanId"
                                            },
                                            "id": 732,
                                            "name": "Identifier",
                                            "src": "1710:7:3"
                                          }
                                        ],
                                        "id": 733,
                                        "name": "IndexAccess",
                                        "src": "1693:25:3"
                                      }
                                    ],
                                    "id": 734,
                                    "name": "MemberAccess",
                                    "src": "1693:33:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 683,
                                      "type": "uint256",
                                      "value": "_ammount"
                                    },
                                    "id": 735,
                                    "name": "Identifier",
                                    "src": "1730:8:3"
                                  }
                                ],
                                "id": 736,
                                "name": "Assignment",
                                "src": "1693:45:3"
                              }
                            ],
                            "id": 737,
                            "name": "ExpressionStatement",
                            "src": "1693:45:3"
                          }
                        ],
                        "id": 738,
                        "name": "Block",
                        "src": "1531:218:3"
                      }
                    ],
                    "id": 739,
                    "name": "IfStatement",
                    "src": "1396:353:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 5951,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 700,
                                  "type": "contract IERC20",
                                  "value": "erc20"
                                },
                                "id": 740,
                                "name": "Identifier",
                                "src": "1758:5:3"
                              }
                            ],
                            "id": 742,
                            "name": "MemberAccess",
                            "src": "1758:18:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 743,
                                "name": "Identifier",
                                "src": "1777:3:3"
                              }
                            ],
                            "id": 744,
                            "name": "MemberAccess",
                            "src": "1777:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20CollateralPayment_$944",
                                      "typeString": "contract ERC20CollateralPayment"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 745,
                                    "name": "ElementaryTypeName",
                                    "src": "1789:7:3"
                                  }
                                ],
                                "id": 746,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1789:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract ERC20CollateralPayment",
                                  "value": "this"
                                },
                                "id": 747,
                                "name": "Identifier",
                                "src": "1797:4:3"
                              }
                            ],
                            "id": 748,
                            "name": "FunctionCall",
                            "src": "1789:13:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 683,
                              "type": "uint256",
                              "value": "_ammount"
                            },
                            "id": 749,
                            "name": "Identifier",
                            "src": "1804:8:3"
                          }
                        ],
                        "id": 750,
                        "name": "FunctionCall",
                        "src": "1758:55:3"
                      }
                    ],
                    "id": 751,
                    "name": "ExpressionStatement",
                    "src": "1758:55:3"
                  }
                ],
                "id": 752,
                "name": "Block",
                "src": "1238:582:3"
              }
            ],
            "id": 753,
            "name": "FunctionDefinition",
            "src": "1148:672:3"
          },
          {
            "attributes": {
              "functionSelector": "44e02dbc",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "returnCollateral",
              "overrides": null,
              "scope": 944,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice return Collateral when the loan is complete \n@param _loanId is the loan ID"
                },
                "id": 754,
                "name": "StructuredDocumentation",
                "src": "1826:106:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_loanId",
                      "overrides": null,
                      "scope": 804,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 755,
                        "name": "ElementaryTypeName",
                        "src": "1963:7:3"
                      }
                    ],
                    "id": 756,
                    "name": "VariableDeclaration",
                    "src": "1963:15:3"
                  }
                ],
                "id": 757,
                "name": "ParameterList",
                "src": "1962:17:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 758,
                "name": "ParameterList",
                "src": "1988:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                                  "typeString": "literal_string \"only the borrower can collect collateral\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 759,
                            "name": "Identifier",
                            "src": "1998:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 760,
                                    "name": "Identifier",
                                    "src": "2006:3:3"
                                  }
                                ],
                                "id": 761,
                                "name": "MemberAccess",
                                "src": "2006:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "borrower",
                                  "referencedDeclaration": 978,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct ERC20PaymentStandard.loan storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1003,
                                          "type": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)",
                                          "value": "loanLookup"
                                        },
                                        "id": 762,
                                        "name": "Identifier",
                                        "src": "2020:10:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 756,
                                          "type": "uint256",
                                          "value": "_loanId"
                                        },
                                        "id": 763,
                                        "name": "Identifier",
                                        "src": "2031:7:3"
                                      }
                                    ],
                                    "id": 764,
                                    "name": "IndexAccess",
                                    "src": "2020:19:3"
                                  }
                                ],
                                "id": 765,
                                "name": "MemberAccess",
                                "src": "2020:28:3"
                              }
                            ],
                            "id": 766,
                            "name": "BinaryOperation",
                            "src": "2006:42:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6f6e6c792074686520626f72726f7765722063616e20636f6c6c65637420636f6c6c61746572616c",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"only the borrower can collect collateral\"",
                              "value": "only the borrower can collect collateral"
                            },
                            "id": 767,
                            "name": "Literal",
                            "src": "2050:42:3"
                          }
                        ],
                        "id": 768,
                        "name": "FunctionCall",
                        "src": "1998:95:3"
                      }
                    ],
                    "id": 769,
                    "name": "ExpressionStatement",
                    "src": "1998:95:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                                  "typeString": "literal_string \"loan must be paid off or not started to collect collateral\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 770,
                            "name": "Identifier",
                            "src": "2103:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "||",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1409,
                                      "type": "function (uint256) view returns (bool)",
                                      "value": "isComplete"
                                    },
                                    "id": 771,
                                    "name": "Identifier",
                                    "src": "2111:10:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 756,
                                      "type": "uint256",
                                      "value": "_loanId"
                                    },
                                    "id": 772,
                                    "name": "Identifier",
                                    "src": "2122:7:3"
                                  }
                                ],
                                "id": 773,
                                "name": "FunctionCall",
                                "src": "2111:19:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "issued",
                                      "referencedDeclaration": 974,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct ERC20PaymentStandard.loan storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1003,
                                              "type": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)",
                                              "value": "loanLookup"
                                            },
                                            "id": 774,
                                            "name": "Identifier",
                                            "src": "2135:10:3"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 756,
                                              "type": "uint256",
                                              "value": "_loanId"
                                            },
                                            "id": 775,
                                            "name": "Identifier",
                                            "src": "2146:7:3"
                                          }
                                        ],
                                        "id": 776,
                                        "name": "IndexAccess",
                                        "src": "2135:19:3"
                                      }
                                    ],
                                    "id": 777,
                                    "name": "MemberAccess",
                                    "src": "2135:26:3"
                                  }
                                ],
                                "id": 778,
                                "name": "UnaryOperation",
                                "src": "2134:27:3"
                              }
                            ],
                            "id": 779,
                            "name": "BinaryOperation",
                            "src": "2111:50:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6c6f616e206d7573742062652070616964206f6666206f72206e6f74207374617274656420746f20636f6c6c65637420636f6c6c61746572616c",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"loan must be paid off or not started to collect collateral\"",
                              "value": "loan must be paid off or not started to collect collateral"
                            },
                            "id": 780,
                            "name": "Literal",
                            "src": "2163:60:3"
                          }
                        ],
                        "id": 781,
                        "name": "FunctionCall",
                        "src": "2103:121:3"
                      }
                    ],
                    "id": 782,
                    "name": "ExpressionStatement",
                    "src": "2103:121:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        784
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "erc20",
                          "overrides": null,
                          "scope": 803,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 5970,
                              "type": "contract IERC20"
                            },
                            "id": 783,
                            "name": "UserDefinedTypeName",
                            "src": "2234:6:3"
                          }
                        ],
                        "id": 784,
                        "name": "VariableDeclaration",
                        "src": "2234:12:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract IERC20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5970,
                              "type": "type(contract IERC20)",
                              "value": "IERC20"
                            },
                            "id": 785,
                            "name": "Identifier",
                            "src": "2249:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ERC20Contract",
                              "referencedDeclaration": 661,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct ERC20CollateralPayment.collateral storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 668,
                                      "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                      "value": "collateralLookup"
                                    },
                                    "id": 786,
                                    "name": "Identifier",
                                    "src": "2256:16:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 756,
                                      "type": "uint256",
                                      "value": "_loanId"
                                    },
                                    "id": 787,
                                    "name": "Identifier",
                                    "src": "2273:7:3"
                                  }
                                ],
                                "id": 788,
                                "name": "IndexAccess",
                                "src": "2256:25:3"
                              }
                            ],
                            "id": 789,
                            "name": "MemberAccess",
                            "src": "2256:39:3"
                          }
                        ],
                        "id": 790,
                        "name": "FunctionCall",
                        "src": "2249:47:3"
                      }
                    ],
                    "id": 791,
                    "name": "VariableDeclarationStatement",
                    "src": "2234:62:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "referencedDeclaration": 5919,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 784,
                                  "type": "contract IERC20",
                                  "value": "erc20"
                                },
                                "id": 792,
                                "name": "Identifier",
                                "src": "2306:5:3"
                              }
                            ],
                            "id": 794,
                            "name": "MemberAccess",
                            "src": "2306:14:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 795,
                                "name": "Identifier",
                                "src": "2321:3:3"
                              }
                            ],
                            "id": 796,
                            "name": "MemberAccess",
                            "src": "2321:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ammount",
                              "referencedDeclaration": 663,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct ERC20CollateralPayment.collateral storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 668,
                                      "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                      "value": "collateralLookup"
                                    },
                                    "id": 797,
                                    "name": "Identifier",
                                    "src": "2333:16:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 756,
                                      "type": "uint256",
                                      "value": "_loanId"
                                    },
                                    "id": 798,
                                    "name": "Identifier",
                                    "src": "2350:7:3"
                                  }
                                ],
                                "id": 799,
                                "name": "IndexAccess",
                                "src": "2333:25:3"
                              }
                            ],
                            "id": 800,
                            "name": "MemberAccess",
                            "src": "2333:33:3"
                          }
                        ],
                        "id": 801,
                        "name": "FunctionCall",
                        "src": "2306:61:3"
                      }
                    ],
                    "id": 802,
                    "name": "ExpressionStatement",
                    "src": "2306:61:3"
                  }
                ],
                "id": 803,
                "name": "Block",
                "src": "1988:386:3"
              }
            ],
            "id": 804,
            "name": "FunctionDefinition",
            "src": "1937:437:3"
          },
          {
            "attributes": {
              "baseFunctions": [
                1384
              ],
              "functionSelector": "a97868be",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawl",
              "scope": 944,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\nHowever that was not a good idea as a hacker could create fake bonds.\n@param _id is the id of the bond to send in\n@param _amm is the ammount to send"
                },
                "id": 805,
                "name": "StructuredDocumentation",
                "src": "2380:312:3"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 811,
                "name": "OverrideSpecifier",
                "src": "2752:8:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_id",
                      "overrides": null,
                      "scope": 943,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 806,
                        "name": "ElementaryTypeName",
                        "src": "2716:7:3"
                      }
                    ],
                    "id": 807,
                    "name": "VariableDeclaration",
                    "src": "2716:11:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amm",
                      "overrides": null,
                      "scope": 943,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 808,
                        "name": "ElementaryTypeName",
                        "src": "2729:7:3"
                      }
                    ],
                    "id": 809,
                    "name": "VariableDeclaration",
                    "src": "2729:12:3"
                  }
                ],
                "id": 810,
                "name": "ParameterList",
                "src": "2715:27:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 812,
                "name": "ParameterList",
                "src": "2760:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        814
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "erc1155",
                          "overrides": null,
                          "scope": 942,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC1155",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC1155",
                              "referencedDeclaration": 5329,
                              "type": "contract IERC1155"
                            },
                            "id": 813,
                            "name": "UserDefinedTypeName",
                            "src": "2770:8:3"
                          }
                        ],
                        "id": 814,
                        "name": "VariableDeclaration",
                        "src": "2770:16:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract IERC1155",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5329,
                              "type": "type(contract IERC1155)",
                              "value": "IERC1155"
                            },
                            "id": 815,
                            "name": "Identifier",
                            "src": "2789:8:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 972,
                              "type": "address",
                              "value": "bondContract"
                            },
                            "id": 816,
                            "name": "Identifier",
                            "src": "2798:12:3"
                          }
                        ],
                        "id": 817,
                        "name": "FunctionCall",
                        "src": "2789:22:3"
                      }
                    ],
                    "id": 818,
                    "name": "VariableDeclarationStatement",
                    "src": "2770:41:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        820
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "erc20",
                          "overrides": null,
                          "scope": 942,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 5970,
                              "type": "contract IERC20"
                            },
                            "id": 819,
                            "name": "UserDefinedTypeName",
                            "src": "2821:6:3"
                          }
                        ],
                        "id": 820,
                        "name": "VariableDeclaration",
                        "src": "2821:12:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract IERC20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5970,
                              "type": "type(contract IERC20)",
                              "value": "IERC20"
                            },
                            "id": 821,
                            "name": "Identifier",
                            "src": "2836:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ERC20Address",
                              "referencedDeclaration": 976,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct ERC20PaymentStandard.loan storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1003,
                                      "type": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)",
                                      "value": "loanLookup"
                                    },
                                    "id": 822,
                                    "name": "Identifier",
                                    "src": "2843:10:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 807,
                                      "type": "uint256",
                                      "value": "_id"
                                    },
                                    "id": 823,
                                    "name": "Identifier",
                                    "src": "2854:3:3"
                                  }
                                ],
                                "id": 824,
                                "name": "IndexAccess",
                                "src": "2843:15:3"
                              }
                            ],
                            "id": 825,
                            "name": "MemberAccess",
                            "src": "2843:28:3"
                          }
                        ],
                        "id": 826,
                        "name": "FunctionCall",
                        "src": "2836:36:3"
                      }
                    ],
                    "id": 827,
                    "name": "VariableDeclarationStatement",
                    "src": "2821:51:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        829
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "col",
                          "overrides": null,
                          "scope": 942,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 5970,
                              "type": "contract IERC20"
                            },
                            "id": 828,
                            "name": "UserDefinedTypeName",
                            "src": "2882:6:3"
                          }
                        ],
                        "id": 829,
                        "name": "VariableDeclaration",
                        "src": "2882:10:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract IERC20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5970,
                              "type": "type(contract IERC20)",
                              "value": "IERC20"
                            },
                            "id": 830,
                            "name": "Identifier",
                            "src": "2895:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ERC20Contract",
                              "referencedDeclaration": 661,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct ERC20CollateralPayment.collateral storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 668,
                                      "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                      "value": "collateralLookup"
                                    },
                                    "id": 831,
                                    "name": "Identifier",
                                    "src": "2902:16:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 807,
                                      "type": "uint256",
                                      "value": "_id"
                                    },
                                    "id": 832,
                                    "name": "Identifier",
                                    "src": "2919:3:3"
                                  }
                                ],
                                "id": 833,
                                "name": "IndexAccess",
                                "src": "2902:21:3"
                              }
                            ],
                            "id": 834,
                            "name": "MemberAccess",
                            "src": "2902:35:3"
                          }
                        ],
                        "id": 835,
                        "name": "FunctionCall",
                        "src": "2895:43:3"
                      }
                    ],
                    "id": 836,
                    "name": "VariableDeclarationStatement",
                    "src": "2882:56:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                                  "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 837,
                            "name": "Identifier",
                            "src": "2948:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "issued",
                              "referencedDeclaration": 974,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct ERC20PaymentStandard.loan storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1003,
                                      "type": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)",
                                      "value": "loanLookup"
                                    },
                                    "id": 838,
                                    "name": "Identifier",
                                    "src": "2956:10:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 807,
                                      "type": "uint256",
                                      "value": "_id"
                                    },
                                    "id": 839,
                                    "name": "Identifier",
                                    "src": "2967:3:3"
                                  }
                                ],
                                "id": 840,
                                "name": "IndexAccess",
                                "src": "2956:15:3"
                              }
                            ],
                            "id": 841,
                            "name": "MemberAccess",
                            "src": "2956:22:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74686973206c6f616e20686173206e6f74206265656e20697373756564207965742e20486f7720646f20796f75206576656e206861766520626f6e647320666f722069743f3f3f",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\"",
                              "value": "this loan has not been issued yet. How do you even have bonds for it???"
                            },
                            "id": 842,
                            "name": "Literal",
                            "src": "2980:73:3"
                          }
                        ],
                        "id": 843,
                        "name": "FunctionCall",
                        "src": "2948:106:3"
                      }
                    ],
                    "id": 844,
                    "name": "ExpressionStatement",
                    "src": "2948:106:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeTransferFrom",
                              "referencedDeclaration": 5312,
                              "type": "function (address,address,uint256,uint256,bytes memory) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 814,
                                  "type": "contract IERC1155",
                                  "value": "erc1155"
                                },
                                "id": 845,
                                "name": "Identifier",
                                "src": "3064:7:3"
                              }
                            ],
                            "id": 847,
                            "name": "MemberAccess",
                            "src": "3064:24:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 848,
                                "name": "Identifier",
                                "src": "3089:3:3"
                              }
                            ],
                            "id": 849,
                            "name": "MemberAccess",
                            "src": "3089:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20CollateralPayment_$944",
                                      "typeString": "contract ERC20CollateralPayment"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 850,
                                    "name": "ElementaryTypeName",
                                    "src": "3101:7:3"
                                  }
                                ],
                                "id": 851,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3101:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract ERC20CollateralPayment",
                                  "value": "this"
                                },
                                "id": 852,
                                "name": "Identifier",
                                "src": "3109:4:3"
                              }
                            ],
                            "id": 853,
                            "name": "FunctionCall",
                            "src": "3101:13:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 807,
                              "type": "uint256",
                              "value": "_id"
                            },
                            "id": 854,
                            "name": "Identifier",
                            "src": "3116:3:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 809,
                              "type": "uint256",
                              "value": "_amm"
                            },
                            "id": 855,
                            "name": "Identifier",
                            "src": "3121:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 856,
                            "name": "Literal",
                            "src": "3127:2:3"
                          }
                        ],
                        "id": 857,
                        "name": "FunctionCall",
                        "src": "3064:66:3"
                      }
                    ],
                    "id": 858,
                    "name": "ExpressionStatement",
                    "src": "3064:66:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "&&",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1178,
                                  "type": "function (uint256) view returns (bool)",
                                  "value": "isDelinquent"
                                },
                                "id": 859,
                                "name": "Identifier",
                                "src": "3209:12:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 807,
                                  "type": "uint256",
                                  "value": "_id"
                                },
                                "id": 860,
                                "name": "Identifier",
                                "src": "3222:3:3"
                              }
                            ],
                            "id": 861,
                            "name": "FunctionCall",
                            "src": "3209:17:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "ammount",
                                  "referencedDeclaration": 663,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct ERC20CollateralPayment.collateral storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 668,
                                          "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                          "value": "collateralLookup"
                                        },
                                        "id": 862,
                                        "name": "Identifier",
                                        "src": "3230:16:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 807,
                                          "type": "uint256",
                                          "value": "_id"
                                        },
                                        "id": 863,
                                        "name": "Identifier",
                                        "src": "3247:3:3"
                                      }
                                    ],
                                    "id": 864,
                                    "name": "IndexAccess",
                                    "src": "3230:21:3"
                                  }
                                ],
                                "id": 865,
                                "name": "MemberAccess",
                                "src": "3230:29:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 866,
                                "name": "Literal",
                                "src": "3262:1:3"
                              }
                            ],
                            "id": 867,
                            "name": "BinaryOperation",
                            "src": "3230:33:3"
                          }
                        ],
                        "id": 868,
                        "name": "BinaryOperation",
                        "src": "3209:54:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "ammount",
                                      "referencedDeclaration": 663,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct ERC20CollateralPayment.collateral storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 668,
                                              "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                              "value": "collateralLookup"
                                            },
                                            "id": 869,
                                            "name": "Identifier",
                                            "src": "3378:16:3"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 807,
                                              "type": "uint256",
                                              "value": "_id"
                                            },
                                            "id": 870,
                                            "name": "Identifier",
                                            "src": "3395:3:3"
                                          }
                                        ],
                                        "id": 871,
                                        "name": "IndexAccess",
                                        "src": "3378:21:3"
                                      }
                                    ],
                                    "id": 872,
                                    "name": "MemberAccess",
                                    "src": "3378:29:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 809,
                                      "type": "uint256",
                                      "value": "_amm"
                                    },
                                    "id": 873,
                                    "name": "Identifier",
                                    "src": "3410:4:3"
                                  }
                                ],
                                "id": 874,
                                "name": "BinaryOperation",
                                "src": "3378:36:3"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "member_name": "ammount",
                                              "referencedDeclaration": 663,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct ERC20CollateralPayment.collateral storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 668,
                                                      "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                                      "value": "collateralLookup"
                                                    },
                                                    "id": 875,
                                                    "name": "Identifier",
                                                    "src": "3433:16:3"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 807,
                                                      "type": "uint256",
                                                      "value": "_id"
                                                    },
                                                    "id": 876,
                                                    "name": "Identifier",
                                                    "src": "3450:3:3"
                                                  }
                                                ],
                                                "id": 877,
                                                "name": "IndexAccess",
                                                "src": "3433:21:3"
                                              }
                                            ],
                                            "id": 878,
                                            "name": "MemberAccess",
                                            "src": "3433:29:3"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 879,
                                            "name": "Literal",
                                            "src": "3465:1:3"
                                          }
                                        ],
                                        "id": 880,
                                        "name": "Assignment",
                                        "src": "3433:33:3"
                                      }
                                    ],
                                    "id": 881,
                                    "name": "ExpressionStatement",
                                    "src": "3433:33:3"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "bool",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "transfer",
                                              "referencedDeclaration": 5919,
                                              "type": "function (address,uint256) external returns (bool)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 829,
                                                  "type": "contract IERC20",
                                                  "value": "col"
                                                },
                                                "id": 882,
                                                "name": "Identifier",
                                                "src": "3484:3:3"
                                              }
                                            ],
                                            "id": 884,
                                            "name": "MemberAccess",
                                            "src": "3484:12:3"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "referencedDeclaration": null,
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": -15,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 885,
                                                "name": "Identifier",
                                                "src": "3497:3:3"
                                              }
                                            ],
                                            "id": 886,
                                            "name": "MemberAccess",
                                            "src": "3497:10:3"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "ammount",
                                              "referencedDeclaration": 663,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct ERC20CollateralPayment.collateral storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 668,
                                                      "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                                      "value": "collateralLookup"
                                                    },
                                                    "id": 887,
                                                    "name": "Identifier",
                                                    "src": "3509:16:3"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 807,
                                                      "type": "uint256",
                                                      "value": "_id"
                                                    },
                                                    "id": 888,
                                                    "name": "Identifier",
                                                    "src": "3526:3:3"
                                                  }
                                                ],
                                                "id": 889,
                                                "name": "IndexAccess",
                                                "src": "3509:21:3"
                                              }
                                            ],
                                            "id": 890,
                                            "name": "MemberAccess",
                                            "src": "3509:29:3"
                                          }
                                        ],
                                        "id": 891,
                                        "name": "FunctionCall",
                                        "src": "3484:55:3"
                                      }
                                    ],
                                    "id": 892,
                                    "name": "ExpressionStatement",
                                    "src": "3484:55:3"
                                  }
                                ],
                                "id": 893,
                                "name": "Block",
                                "src": "3415:139:3"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "-=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "member_name": "ammount",
                                              "referencedDeclaration": 663,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct ERC20CollateralPayment.collateral storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 668,
                                                      "type": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)",
                                                      "value": "collateralLookup"
                                                    },
                                                    "id": 894,
                                                    "name": "Identifier",
                                                    "src": "3576:16:3"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 807,
                                                      "type": "uint256",
                                                      "value": "_id"
                                                    },
                                                    "id": 895,
                                                    "name": "Identifier",
                                                    "src": "3593:3:3"
                                                  }
                                                ],
                                                "id": 896,
                                                "name": "IndexAccess",
                                                "src": "3576:21:3"
                                              }
                                            ],
                                            "id": 897,
                                            "name": "MemberAccess",
                                            "src": "3576:29:3"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 809,
                                              "type": "uint256",
                                              "value": "_amm"
                                            },
                                            "id": 898,
                                            "name": "Identifier",
                                            "src": "3609:4:3"
                                          }
                                        ],
                                        "id": 899,
                                        "name": "Assignment",
                                        "src": "3576:37:3"
                                      }
                                    ],
                                    "id": 900,
                                    "name": "ExpressionStatement",
                                    "src": "3576:37:3"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "bool",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "transfer",
                                              "referencedDeclaration": 5919,
                                              "type": "function (address,uint256) external returns (bool)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 829,
                                                  "type": "contract IERC20",
                                                  "value": "col"
                                                },
                                                "id": 901,
                                                "name": "Identifier",
                                                "src": "3631:3:3"
                                              }
                                            ],
                                            "id": 903,
                                            "name": "MemberAccess",
                                            "src": "3631:12:3"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "referencedDeclaration": null,
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": -15,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 904,
                                                "name": "Identifier",
                                                "src": "3644:3:3"
                                              }
                                            ],
                                            "id": 905,
                                            "name": "MemberAccess",
                                            "src": "3644:10:3"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 809,
                                              "type": "uint256",
                                              "value": "_amm"
                                            },
                                            "id": 906,
                                            "name": "Identifier",
                                            "src": "3656:4:3"
                                          }
                                        ],
                                        "id": 907,
                                        "name": "FunctionCall",
                                        "src": "3631:30:3"
                                      }
                                    ],
                                    "id": 908,
                                    "name": "ExpressionStatement",
                                    "src": "3631:30:3"
                                  }
                                ],
                                "id": 909,
                                "name": "Block",
                                "src": "3558:118:3"
                              }
                            ],
                            "id": 910,
                            "name": "IfStatement",
                            "src": "3375:301:3"
                          }
                        ],
                        "id": 911,
                        "name": "Block",
                        "src": "3264:422:3"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 809,
                                      "type": "uint256",
                                      "value": "_amm"
                                    },
                                    "id": 912,
                                    "name": "Identifier",
                                    "src": "3707:4:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "awaitingCollection",
                                      "referencedDeclaration": 996,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct ERC20PaymentStandard.loan storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1003,
                                              "type": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)",
                                              "value": "loanLookup"
                                            },
                                            "id": 913,
                                            "name": "Identifier",
                                            "src": "3714:10:3"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 807,
                                              "type": "uint256",
                                              "value": "_id"
                                            },
                                            "id": 914,
                                            "name": "Identifier",
                                            "src": "3725:3:3"
                                          }
                                        ],
                                        "id": 915,
                                        "name": "IndexAccess",
                                        "src": "3714:15:3"
                                      }
                                    ],
                                    "id": 916,
                                    "name": "MemberAccess",
                                    "src": "3714:34:3"
                                  }
                                ],
                                "id": 917,
                                "name": "BinaryOperation",
                                "src": "3707:41:3"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_stringliteral_846cc0b1aafc73139d8ddf10bd5c5eb839730e911733144a6446ec920579faed",
                                                  "typeString": "literal_string \"The ammount your are trying to collect is not available. And/Or there is no collateral to collect\""
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                -19,
                                                -19
                                              ],
                                              "referencedDeclaration": -19,
                                              "type": "function (string memory) pure",
                                              "value": "revert"
                                            },
                                            "id": 918,
                                            "name": "Identifier",
                                            "src": "3767:6:3"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "54686520616d6d6f756e7420796f75722061726520747279696e6720746f20636f6c6c656374206973206e6f7420617661696c61626c652e20416e642f4f72207468657265206973206e6f20636f6c6c61746572616c20746f20636f6c6c656374",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "string",
                                              "type": "literal_string \"The ammount your are trying to collect is not available. And/Or there is no collateral to collect\"",
                                              "value": "The ammount your are trying to collect is not available. And/Or there is no collateral to collect"
                                            },
                                            "id": 919,
                                            "name": "Literal",
                                            "src": "3774:99:3"
                                          }
                                        ],
                                        "id": 920,
                                        "name": "FunctionCall",
                                        "src": "3767:107:3"
                                      }
                                    ],
                                    "id": 921,
                                    "name": "ExpressionStatement",
                                    "src": "3767:107:3"
                                  }
                                ],
                                "id": 922,
                                "name": "Block",
                                "src": "3749:140:3"
                              }
                            ],
                            "id": 923,
                            "name": "IfStatement",
                            "src": "3704:185:3"
                          }
                        ],
                        "id": 924,
                        "name": "Block",
                        "src": "3690:209:3"
                      }
                    ],
                    "id": 925,
                    "name": "IfStatement",
                    "src": "3206:693:3"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 809,
                              "type": "uint256",
                              "value": "_amm"
                            },
                            "id": 926,
                            "name": "Identifier",
                            "src": "3983:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "awaitingCollection",
                              "referencedDeclaration": 996,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct ERC20PaymentStandard.loan storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1003,
                                      "type": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)",
                                      "value": "loanLookup"
                                    },
                                    "id": 927,
                                    "name": "Identifier",
                                    "src": "3991:10:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 807,
                                      "type": "uint256",
                                      "value": "_id"
                                    },
                                    "id": 928,
                                    "name": "Identifier",
                                    "src": "4002:3:3"
                                  }
                                ],
                                "id": 929,
                                "name": "IndexAccess",
                                "src": "3991:15:3"
                              }
                            ],
                            "id": 930,
                            "name": "MemberAccess",
                            "src": "3991:34:3"
                          }
                        ],
                        "id": 931,
                        "name": "BinaryOperation",
                        "src": "3983:42:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "transfer",
                                      "referencedDeclaration": 5919,
                                      "type": "function (address,uint256) external returns (bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 820,
                                          "type": "contract IERC20",
                                          "value": "erc20"
                                        },
                                        "id": 932,
                                        "name": "Identifier",
                                        "src": "4040:5:3"
                                      }
                                    ],
                                    "id": 934,
                                    "name": "MemberAccess",
                                    "src": "4040:14:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 935,
                                        "name": "Identifier",
                                        "src": "4055:3:3"
                                      }
                                    ],
                                    "id": 936,
                                    "name": "MemberAccess",
                                    "src": "4055:10:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 809,
                                      "type": "uint256",
                                      "value": "_amm"
                                    },
                                    "id": 937,
                                    "name": "Identifier",
                                    "src": "4067:4:3"
                                  }
                                ],
                                "id": 938,
                                "name": "FunctionCall",
                                "src": "4040:32:3"
                              }
                            ],
                            "id": 939,
                            "name": "ExpressionStatement",
                            "src": "4040:32:3"
                          }
                        ],
                        "id": 940,
                        "name": "Block",
                        "src": "4026:57:3"
                      }
                    ],
                    "id": 941,
                    "name": "IfStatement",
                    "src": "3980:103:3"
                  }
                ],
                "id": 942,
                "name": "Block",
                "src": "2760:1330:3"
              }
            ],
            "id": 943,
            "name": "FunctionDefinition",
            "src": "2697:1393:3"
          }
        ],
        "id": 944,
        "name": "ContractDefinition",
        "src": "342:3750:3"
      }
    ],
    "id": 945,
    "name": "SourceUnit",
    "src": "34:4058:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0x7EB58A330d8f466504c035CDfB4019761C1a51D8",
      "transactionHash": "0xc549ca800c2a0fc79d8a42814a01a9732a8a1e4f583c4daba2b873121b9550c5"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9838BDD4849278e2dF76a7CE907b5cb9690Af7F7",
      "transactionHash": "0x0422dcf8c53e009f10e5898c4cd0fca3e2588b807a53c9e340ae6a57049e2830"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-11T15:43:01.169Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Carson Case",
    "methods": {
      "addCollateral(address,uint256,uint256)": {
        "params": {
          "_ERC20Contract": "address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20",
          "_ammount": "is the ammount to add as collateral",
          "_loanId": "is the loan ID to add collateral to"
        }
      },
      "addInterest(uint256,uint256)": {
        "params": {
          "_amm": "the ammount of interest to add",
          "_id": "is the id of the loan"
        },
        "returns": {
          "_0": "true if added. Will not add interest if payment has been completed. his prevents lenders from refusing to end a loan when it is rightfully over by forever ncreasing the totalPaymentsValue through interest staking and never fully collecting payment. his also means that if lenders do not realize interest gains soon enough they may not be able to collect them before he borrower can complete the loan."
        }
      },
      "configureNew(address,address,uint256,uint256,uint256,uint256,uint256)": {
        "details": "borrower is msg.sender for testing. In production might want to make this a param",
        "params": {
          "_accrualPeriod": "the time it takes for interest to accrue in seconds",
          "_borrower": "is the borrower loan is being configured for. Keep in mind. ONLY this borrower can mint bonds to start the loan",
          "_erc20": "is the ERC20 contract address that will be used for payments",
          "_inverseInterestRate": "the interest rate expressed as inverse. 2% = 1/5 = inverse of 5",
          "_minPayment": "is the minimum payment that must be made before the payment period ends",
          "_paymentPeriod": "payment must be made by this time or delinquent function will return true",
          "_principal": "the origional loan value before interest"
        },
        "returns": {
          "_0": "the id it just created"
        }
      },
      "constructor": {
        "params": {
          "_bonds": "is the contract address of bonds"
        }
      },
      "fulfill(bytes32,uint256)": {
        "params": {
          "_merkleRoot": "is what's returned",
          "_requestId": "is the request ID"
        }
      },
      "getId(address,uint256)": {
        "params": {
          "_borrower": "is borrower",
          "_index": "is the index in the borrowers loan array"
        },
        "returns": {
          "_0": "the loan ID"
        }
      },
      "getInterest(uint256)": {
        "params": {
          "_id": "is the loan ID"
        },
        "returns": {
          "_0": "inverse interest rate"
        }
      },
      "getNumberOfLoans(address)": {
        "params": {
          "_who": "is who to look up"
        },
        "returns": {
          "_0": "length"
        }
      },
      "isComplete(uint256)": {
        "params": {
          "_id": "of loan to check"
        },
        "returns": {
          "_0": "return if the contract is payed off or not as bool"
        }
      },
      "isDelinquent(uint256)": {
        "params": {
          "_id": "is the hash id of the loan. Same as bond ERC1155 ID as well"
        },
        "returns": {
          "_0": "if delinquent or not. Meaning missed a payment"
        }
      },
      "issueBonds(uint256)": {
        "params": {
          "_id": "loan ID"
        },
        "returns": {
          "_0": "the loan principal (so bonds knows how many NFTs to mint)",
          "_1": "the borrowers address (so bonds can make sure borrower is calling this function)"
        }
      },
      "payment(uint256,uint256)": {
        "params": {
          "_erc20Ammount": "is ammount in loan's ERC20 to pay",
          "_id": "to pay off"
        }
      },
      "returnCollateral(uint256)": {
        "params": {
          "_loanId": "is the loan ID"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "withdrawl(uint256,uint256)": {
        "params": {
          "_amm": "is the ammount to send",
          "_id": "is the id of the bond to send in"
        }
      }
    },
    "title": "ERC20CollateralPayment"
  },
  "userdoc": {
    "methods": {
      "addCollateral(address,uint256,uint256)": {
        "notice": "addCollateral must be called before issuing loan"
      },
      "addInterest(uint256,uint256)": {
        "notice": "Called each time new NFTs are minted by staking"
      },
      "configureNew(address,address,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "contract must be configured before bonds are issued. Pushes new loan to array for user"
      },
      "constructor": "constructor just runs the ERC20PaymentStandard constructor",
      "fulfill(bytes32,uint256)": {
        "notice": "Chainlink fulfill function. Called to set the merkle root for a request ID"
      },
      "getId(address,uint256)": {
        "notice": "Returns the ID for a loan given the borrower and index in the array"
      },
      "getInterest(uint256)": {
        "notice": "get the interest rate of a loan. Makes it easy for other contract since it doens't have to parse struct"
      },
      "getNumberOfLoans(address)": {
        "notice": "gets the number of loans a person has"
      },
      "isComplete(uint256)": {
        "notice": "helper function"
      },
      "isDelinquent(uint256)": {
        "notice": "This contract is not very forgiving. Miss one payment and you're marked as delinquent. Unless contract is complete"
      },
      "issueBonds(uint256)": {
        "notice": "called when bonds are issued so as to make sure lender can only mint bonds once."
      },
      "payment(uint256,uint256)": {
        "notice": "function handles the payment of the loan. Does not have to be borrower s payment comes in. The contract holds it until collection by bond owners. MUST APPROVE FIRST in ERC20 contract first"
      },
      "returnCollateral(uint256)": {
        "notice": "return Collateral when the loan is complete "
      },
      "withdrawl(uint256,uint256)": {
        "notice": "MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function. However that was not a good idea as a hacker could create fake bonds."
      }
    },
    "notice": "this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added"
  }
}
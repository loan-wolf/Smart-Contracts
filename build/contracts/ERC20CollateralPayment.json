{
  "contractName": "ERC20CollateralPayment",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bonds",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amm",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "addInterest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bondContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "collateralLookup",
      "outputs": [
        {
          "internalType": "address",
          "name": "ERC20Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ammount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_paymentPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_inverseInterestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_accrualPeriod",
          "type": "uint256"
        }
      ],
      "name": "configureNew",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        }
      ],
      "name": "getNumberOfLoans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "isComplete",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "isDelinquent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "issueBonds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanIDs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanLookup",
      "outputs": [
        {
          "internalType": "bool",
          "name": "issued",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "ERC20Address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "paymentPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paymentDueDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRateInverse",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accrualPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalPaymentsValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "awaitingCollection",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paymentComplete",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_erc20Ammount",
          "type": "uint256"
        }
      ],
      "name": "payment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ERC20Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ammount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loanId",
          "type": "uint256"
        }
      ],
      "name": "addCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_loanId",
          "type": "uint256"
        }
      ],
      "name": "returnCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amm",
          "type": "uint256"
        }
      ],
      "name": "withdrawl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bonds\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC20Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ammount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"}],\"name\":\"addCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"addInterest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collateralLookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ERC20Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ammount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_paymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_inverseInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_accrualPeriod\",\"type\":\"uint256\"}],\"name\":\"configureNew\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"getNumberOfLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isDelinquent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"issueBonds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanIDs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanLookup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"issued\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"paymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentDueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateInverse\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accrualPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPaymentsValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"awaitingCollection\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentComplete\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_erc20Ammount\",\"type\":\"uint256\"}],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"}],\"name\":\"returnCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amm\",\"type\":\"uint256\"}],\"name\":\"withdrawl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Carson Case\",\"kind\":\"dev\",\"methods\":{\"addCollateral(address,uint256,uint256)\":{\"params\":{\"_ERC20Contract\":\"address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\",\"_ammount\":\"is the ammount to add as collateral\",\"_loanId\":\"is the loan ID to add collateral to\"}},\"addInterest(uint256,uint256)\":{\"params\":{\"_amm\":\"the ammount of interest to add\",\"_id\":\"is the id of the loan\"},\"returns\":{\"_0\":\"true if added. Will not add interest if payment has been completed. This prevents lenders from refusing to end a loan when it is rightfully over by forever increasing the totalPaymentsValue through interest staking and never fully collecting payment. This also means that if lenders do not realize interest gains soon enough they may not be able to collect them before the borrower can complete the loan.\"}},\"configureNew(address,address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"borrower is msg.sender for testing. In production might want to make this a param\",\"params\":{\"_accrualPeriod\":\"the time it takes for interest to accrue in seconds\",\"_borrower\":\"is the borrower loan is being configured for. Keep in mind. ONLY this borrower can mint bonds to start the loan\",\"_erc20\":\"is the ERC20 contract address that will be used for payments\",\"_inverseInterestRate\":\"the interest rate expressed as inverse. 2% = 1/5 = inverse of 5\",\"_minPayment\":\"is the minimum payment that must be made before the payment period ends\",\"_paymentPeriod\":\"payment must be made by this time or delinquent function will return true\",\"_principal\":\"the origional loan value before interest\"},\"returns\":{\"_0\":\"the id it just created\"}},\"constructor\":{\"params\":{\"_bonds\":\"is the contract address of bonds\"}},\"getId(address,uint256)\":{\"params\":{\"_borrower\":\"is borrower\",\"_index\":\"is the index in the borrowers loan array\"},\"returns\":{\"_0\":\"the loan ID\"}},\"getInterest(uint256)\":{\"params\":{\"_id\":\"is the loan ID\"},\"returns\":{\"_0\":\"inverse interest rate\"}},\"getNumberOfLoans(address)\":{\"params\":{\"_who\":\"is who to look up\"},\"returns\":{\"_0\":\"length\"}},\"isComplete(uint256)\":{\"params\":{\"_id\":\"of loan to check\"},\"returns\":{\"_0\":\"return if the contract is payed off or not as bool\"}},\"isDelinquent(uint256)\":{\"params\":{\"_id\":\"is the hash id of the loan. Same as bond ERC1155 ID as well\"},\"returns\":{\"_0\":\"if delinquent or not. Meaning missed a payment\"}},\"issueBonds(uint256)\":{\"params\":{\"_id\":\"loan ID\"},\"returns\":{\"_0\":\"the loan principal (so bonds knows how many NFTs to mint)\",\"_1\":\"the borrowers address (so bonds can make sure borrower is calling this function)\"}},\"payment(uint256,uint256)\":{\"params\":{\"_erc20Ammount\":\"is ammount in loan's ERC20 to pay\",\"_id\":\"to pay off\"}},\"returnCollateral(uint256)\":{\"params\":{\"_loanId\":\"is the loan ID\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"withdrawl(uint256,uint256)\":{\"params\":{\"_amm\":\"is the ammount to send\",\"_id\":\"is the id of the bond to send in\"}}},\"title\":\"ERC20CollateralPayment\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addCollateral(address,uint256,uint256)\":{\"notice\":\"addCollateral must be called before issuing loan\"},\"addInterest(uint256,uint256)\":{\"notice\":\"Called each time new NFTs are minted by staking\"},\"configureNew(address,address,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"contract must be configured before bonds are issued. Pushes new loan to array for user\"},\"constructor\":{\"notice\":\"constructor just runs the ERC20PaymentStandard constructor\"},\"getId(address,uint256)\":{\"notice\":\"Returns the ID for a loan given the borrower and index in the array\"},\"getInterest(uint256)\":{\"notice\":\"get the interest rate of a loan. Makes it easy for other contract since it doens't have to parse struct\"},\"getNumberOfLoans(address)\":{\"notice\":\"gets the number of loans a person has\"},\"isComplete(uint256)\":{\"notice\":\"helper function\"},\"isDelinquent(uint256)\":{\"notice\":\"This contract is not very forgiving. Miss one payment and you're marked as delinquent. Unless contract is complete\"},\"issueBonds(uint256)\":{\"notice\":\"called when bonds are issued so as to make sure lender can only mint bonds once.\"},\"payment(uint256,uint256)\":{\"notice\":\"function handles the payment of the loan. Does not have to be borrower as payment comes in. The contract holds it until collection by bond owners. MUST APPROVE FIRST in ERC20 contract first\"},\"returnCollateral(uint256)\":{\"notice\":\"return Collateral when the loan is complete \"},\"withdrawl(uint256,uint256)\":{\"notice\":\"MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function. However that was not a good idea as a hacker could create fake bonds.\"}},\"notice\":\"this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol\":\"ERC20CollateralPayment\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol\":{\"keccak256\":\"0xf67815be84e9e90047bf3cf87ecbe6bbcb36582e6688437b6f7385fa227f8a35\",\"license\":\"None\",\"urls\":[\"bzz-raw://8ad772de6cbaa49bbe57d05671790d9cb7b1d048878e2542246a52fe6d2f7244\",\"dweb:/ipfs/QmecGkCWtDuBtRbjhFQDR65zUEJ1McHVZAsFiP48f1QaGw\"]},\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol\":{\"keccak256\":\"0x95b2e78e8270c6087eb21ab3cfe827e181223cd901f64c0190d4689f8495e844\",\"license\":\"None\",\"urls\":[\"bzz-raw://44b3d5887eff3899b62d9445092804a8e0466c48ad0a068600e82ac48f39d846\",\"dweb:/ipfs/QmNXV8eGg7G3r7W2QpDNjuforgejC1Kt31yx5dNn2w2wUx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db9d720fadb1315ba64790815f9f1d80237cca584fc530b8906519bd46ff4cc\",\"dweb:/ipfs/QmXQSGPuGHG5e9ZRVbcUymP3B78cn6ZjfaiaEwd3P3yBCF\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc7aa8a96aaeb7e1672a3d5fd37582136ff46b6a6cafabcc40ec0e00a42915e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f294719963da5d6c0aa89f6e79eb6dbcbcc258a2f42686e735dbb0791593a761\",\"dweb:/ipfs/QmTnVcJfNe5728bUBhjMmBXJFDR1HwVQfw9jGmexbGmS7z\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2ccdc162657b677334eb08a60bb50a0dd74b22eff7150abb06487f58dbebd5e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fff47f23d2b9cfce4660566d3e5fa355959a6f3ba8c8394271addd9845a07d58\",\"dweb:/ipfs/QmU6vHnARdZscV47wHaPRnzS3pqSKG3YoLbhMUbyAHxLda\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0xfb1161632a10d0bd366c80db583246fa490183b45ec4f59acb43b97d1a7437b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1b773c4f83eed25714e54f3ac4d7d5c43f70ba9adf7a0039870395280d57ab0\",\"dweb:/ipfs/QmeMWUj4afupT66btFmbXPWePdv1NAVbJuAGwb3YmDGjH5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611b12380380611b1283398101604081905261002f91610054565b60008054600160a060020a031916600160a060020a0392909216919091179055610082565b600060208284031215610065578081fd5b8151600160a060020a038116811461007b578182fd5b9392505050565b611a81806100916000396000f3fe608060405234801561001057600080fd5b506004361061013e576000357c01000000000000000000000000000000000000000000000000000000009004806391f67191116100ca578063d41db84b1161008e578063d41db84b146102a6578063e62e1e42146102c7578063e7004a7a146102da578063f1f2a757146102ef578063f23a6e61146103025761013e565b806391f671911461023a578063a97868be1461024d578063bc197c8114610260578063c5d3e11d14610280578063c75cf245146102935761013e565b806344e02dbc1161011157806344e02dbc146101b55780634af50116146101c85780635fe2d689146101e8578063630e69ad146101fb5780637e23f5dd146102275761013e565b806301ffc9a7146101435780632f63147f1461016c5780633a0be1a614610181578063444da0c914610194575b600080fd5b6101566101513660046113af565b610315565b60405161016391906114cd565b60405180910390f35b61017f61017a3660046113ef565b61035b565b005b61015661018f3660046113d7565b6105aa565b6101a76101a23660046113d7565b6105e2565b6040516101639291906114b4565b61017f6101c33660046113d7565b610607565b6101db6101d6366004611334565b610727565b604051610163919061196d565b6101db6101f63660046113d7565b610758565b61020e6102093660046113d7565b61076d565b6040516101639d9c9b9a999897969594939291906114d8565b6101db6102353660046111ad565b6107d4565b6101566102483660046113d7565b6107ef565b61017f61025b3660046113ef565b61081b565b61027361026e3660046111ce565b610b55565b6040516101639190611543565b6101db61028e366004611334565b610b7f565b61017f6102a136600461135d565b610bb9565b6102b96102b43660046113d7565b610d64565b604051610163929190611976565b6101566102d53660046113ef565b610df9565b6102e2610e6c565b6040516101639190611444565b6101db6102fd3660046112d7565b610e7b565b610273610310366004611274565b61104d565b6000600160e060020a031982167f4e2312e0000000000000000000000000000000000000000000000000000000001480610353575061035382611077565b90505b919050565b60008281526001602052604090206009810154600b9091015483911161039f5760405160e560020a62461bcd0281526004016103969061179b565b60405180910390fd5b60008381526001602081815260409283902083516101a081018552815460ff811615158252600160a060020a036101009182900481169483019490945293820154909216938201939093526002830154606082015260038301546080820152600483015460a0820152600583015460c08201819052600684015460e083015260078401549282019290925260088301546101208201526009830154610140820152600a830154610160820152600b909201546101808301528310158061047d57508060c0015181610180015182610140015161047b91906119d6565b105b61049c5760405160e560020a62461bcd02815260040161039690611612565b8060200151600160a060020a03166323b872dd3330866040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104ec93929190611458565b602060405180830381600087803b15801561050657600080fd5b505af115801561051a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053e919061138f565b506000848152600160205260408120600a0180548592906105609084906119be565b9091555050608081015161057490426119be565b60008581526001602052604081206004810192909255600b909101805485929061059f9084906119be565b909155505050505050565b60008181526001602052604081206009810154600b9091015410158061035357505060009081526001602052604090205460ff161590565b60036020526000908152604090208054600190910154600160a060020a039091169082565b60008181526001602081905260409091200154600160a060020a031633146106445760405160e560020a62461bcd02815260040161039690611910565b61064d816105aa565b80610667575060008181526001602052604090205460ff16155b6106865760405160e560020a62461bcd02815260040161039690611855565b600081815260036020526040908190208054600190910154915160e060020a63a9059cbb028152600160a060020a0390911691829163a9059cbb916106d0913391906004016114b4565b602060405180830381600087803b1580156106ea57600080fd5b505af11580156106fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610722919061138f565b505050565b6002602052816000526040600020818154811061074357600080fd5b90600052602060002001600091509150505481565b60009081526001602052604090206006015490565b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006860154600787015460088801546009890154600a8a0154600b909a015460ff8c169b600160a060020a0361010090910481169b9a1699908d565b600160a060020a031660009081526002602052604090205490565b60008181526001602052604081206004015442108015906103535750610814826105aa565b1592915050565b600080548382526001602081815260408085205460038352942054919052600160a060020a039182169261010081048316929091169060ff166108735760405160e560020a62461bcd0281526004016103969061166f565b6040517ff242432a000000000000000000000000000000000000000000000000000000008152600160a060020a0384169063f242432a906108be90339030908a908a9060040161147c565b600060405180830381600087803b1580156108d857600080fd5b505af11580156108ec573d6000803e3d6000fd5b505050506108f9856107ef565b8015610915575060008581526003602052604090206001015415155b15610a7d576000858152600360205260409020600101548411156109cd576000858152600360205260408082206001018290555160e060020a63a9059cbb028152600160a060020a0383169163a9059cbb916109759133916004016114b4565b602060405180830381600087803b15801561098f57600080fd5b505af11580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c7919061138f565b50610a78565b600085815260036020526040812060010180548692906109ee9084906119d6565b909155505060405160e060020a63a9059cbb028152600160a060020a0382169063a9059cbb90610a2490339088906004016114b4565b602060405180830381600087803b158015610a3e57600080fd5b505af1158015610a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a76919061138f565b505b610ab1565b6000858152600160205260409020600a0154841115610ab15760405160e560020a62461bcd028152600401610396906116f2565b6000858152600160205260409020600a01548411610b4e5760405160e060020a63a9059cbb028152600160a060020a0383169063a9059cbb90610afa90339088906004016114b4565b602060405180830381600087803b158015610b1457600080fd5b505af1158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c919061138f565b505b5050505050565b7fbc197c810000000000000000000000000000000000000000000000000000000095945050505050565b600080308484604051602001610b9793929190611410565b60408051601f1981840301815291905280516020909101209150505b92915050565b60008181526001602081905260409091200154600160a060020a03163314610bf65760405160e560020a62461bcd028152600401610396906117f8565b6000818152600360205260409020600101548390610c6657604080518082018252600160a060020a0386811682526020808301878152600087815260039092529390209151825473ffffffffffffffffffffffffffffffffffffffff191691161781559051600190910155610cc9565b600082815260036020526040902054600160a060020a03858116911614610ca25760405160e560020a62461bcd028152600401610396906118b2565b60008281526003602052604081206001018054859290610cc39084906119be565b90915550505b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038216906323b872dd90610d1290339030908890600401611458565b602060405180830381600087803b158015610d2c57600080fd5b505af1158015610d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4e919061138f565b600080548190600160a060020a03163314610d945760405160e560020a62461bcd028152600401610396906115b5565b60008381526001602052604090205460ff1615610dc65760405160e560020a62461bcd02815260040161039690611558565b50506000818152600160208190526040909120805460ff1916821781556008810154910154600160a060020a0316915091565b60008054600160a060020a03163314610e275760405160e560020a62461bcd028152600401610396906115b5565b610e30826105aa565b610e645760008281526001602052604081206009018054859290610e559084906119be565b9091555060019150610bb39050565b506000610bb3565b600054600160a060020a031681565b600160a060020a0386166000908152600260205260408120548190610ea1908990610b7f565b600160a060020a03808a16600090815260026020908152604080832080546001810182559084528284200185905580516101a081018252928352928d169082015233918101919091527f592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba60608201526080810188905290915060a08101610f2888426119be565b8152602080820199909952604080820196909652606080820195909552608080820188905260a080830198909852600060c080840182905260e09384018290528582526001808d5291899020855181549d87015160ff19909e169015151774ffffffffffffffffffffffffffffffffffffffff001916610100600160a060020a039e8f16810291909117825599860151928101805473ffffffffffffffffffffffffffffffffffffffff191693909d1692909217909b5595830151600287015582015160038601559581015160048501559687015160058401559386015160068301555090840151600782015561012084015160088201556101408401516009820155610160840151600a82015561018090930151600b909301929092555092915050565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b600160e060020a031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b8035600160a060020a038116811461035657600080fd5b600082601f8301126110d0578081fd5b8135602067ffffffffffffffff8211156110ec576110ec611a1c565b8082026110fa82820161198d565b838152828101908684018388018501891015611114578687fd5b8693505b85841015611136578035835260019390930192918401918401611118565b50979650505050505050565b600082601f830112611152578081fd5b813567ffffffffffffffff81111561116c5761116c611a1c565b61117f601f8201601f191660200161198d565b818152846020838601011115611193578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156111be578081fd5b6111c7826110a9565b9392505050565b600080600080600060a086880312156111e5578081fd5b6111ee866110a9565b94506111fc602087016110a9565b9350604086013567ffffffffffffffff80821115611218578283fd5b61122489838a016110c0565b94506060880135915080821115611239578283fd5b61124589838a016110c0565b9350608088013591508082111561125a578283fd5b5061126788828901611142565b9150509295509295909350565b600080600080600060a0868803121561128b578081fd5b611294866110a9565b94506112a2602087016110a9565b93506040860135925060608601359150608086013567ffffffffffffffff8111156112cb578182fd5b61126788828901611142565b600080600080600080600060e0888a0312156112f1578182fd5b6112fa886110a9565b9650611308602089016110a9565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060408385031215611346578182fd5b61134f836110a9565b946020939093013593505050565b600080600060608486031215611371578283fd5b61137a846110a9565b95602085013595506040909401359392505050565b6000602082840312156113a0578081fd5b815180151581146111c7578182fd5b6000602082840312156113c0578081fd5b8135600160e060020a0319811681146111c7578182fd5b6000602082840312156113e8578081fd5b5035919050565b60008060408385031215611401578182fd5b50508035926020909101359150565b6c01000000000000000000000000600160a060020a0394851681028252929093169091026014830152602882015260480190565b600160a060020a0391909116815260200190565b600160a060020a039384168152919092166020820152604081019190915260600190565b600160a060020a0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b600160a060020a03929092168252602082015260400190565b901515815260200190565b9c15158d52600160a060020a039b8c1660208e015299909a1660408c015260608b019790975260808a019590955260a089019390935260c088019190915260e08701526101008601526101208501526101408401526101608301919091526101808201526101a00190565b600160e060020a031991909116815260200190565b6020808252602b908201527f596f75206861766520616c72656164792069737375656420626f6e647320666f60408201527f722074686973206c6f616e000000000000000000000000000000000000000000606082015260800190565b6020808252602d908201527f4f6e6c792074686520626f6e6420636f6e74726163742063616e2063616c6c2060408201527f746869732066756e6374696f6e00000000000000000000000000000000000000606082015260800190565b60208082526021908201527f596f75206d757374206d616b6520746865206d696e696d756d207061796d656e60408201527f7400000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526047908201527f74686973206c6f616e20686173206e6f74206265656e2069737375656420796560408201527f742e20486f7720646f20796f75206576656e206861766520626f6e647320666f60608201527f722069743f3f3f00000000000000000000000000000000000000000000000000608082015260a00190565b60208082526061908201527f54686520616d6d6f756e7420796f75722061726520747279696e6720746f206360408201527f6f6c6c656374206973206e6f7420617661696c61626c652e20416e642f4f722060608201527f7468657265206973206e6f20636f6c6c61746572616c20746f20636f6c6c656360808201527f740000000000000000000000000000000000000000000000000000000000000060a082015260c00190565b60208082526021908201527f5468697320636f6e747261637420697320616c72656179642070616964206f6660408201527f6600000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f6f6e6c792074686520626f72726f7765722063616e2061646420636f6c6c617460408201527f6572616c00000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252603a908201527f6c6f616e206d7573742062652070616964206f6666206f72206e6f742073746160408201527f7274656420746f20636f6c6c65637420636f6c6c61746572616c000000000000606082015260800190565b602080825260409082018190527f5768656e20696e6372656173696e6720636f6c6c61746572616c2c20796f7520908201527f6d75737420757365207468652073616d65204552433230206164647265737320606082015260800190565b60208082526028908201527f6f6e6c792074686520626f72726f7765722063616e20636f6c6c65637420636f60408201527f6c6c61746572616c000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b918252600160a060020a0316602082015260400190565b604051601f8201601f1916810167ffffffffffffffff811182821017156119b6576119b6611a1c565b604052919050565b600082198211156119d1576119d16119ed565b500190565b6000828210156119e8576119e86119ed565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220fa2c705651f1330afc80093111976e4ffdb5c7abc8f1084b82df2e13452a8f9264736f6c63430008010033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:19",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:19",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:19"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:19"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:1:19",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "256:3:19",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:19",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:19"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:19"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:19",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:19",
                "type": ""
              }
            ],
            "src": "14:310:19"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15096:19",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:19",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:147:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:19"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:19"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "190:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "199:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "202:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "192:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "192:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "192:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "144:42:19",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:54:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:65:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:73:19"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:19"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:19",
                "type": ""
              }
            ],
            "src": "14:198:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "287:680:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "336:24:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "345:5:19"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "352:5:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "338:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "338:20:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "338:20:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "315:6:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "323:4:19",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "311:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "311:17:19"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "330:3:19"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "307:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "307:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "300:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "300:35:19"
                  },
                  "nodeType": "YulIf",
                  "src": "297:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "369:30:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "392:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "379:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "379:20:19"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "373:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "408:14:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "418:4:19",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "412:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "461:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "463:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "463:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "463:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "437:2:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "441:18:19",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "434:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:26:19"
                  },
                  "nodeType": "YulIf",
                  "src": "431:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "492:21:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "506:2:19"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "510:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:11:19"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "496:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "522:39:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "553:2:19"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "557:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:11:19"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "533:15:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "533:28:19"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "526:3:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "570:16:19",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "583:3:19"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "574:5:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "602:3:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "607:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "595:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "595:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "595:15:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "619:19:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "630:3:19"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "635:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "626:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "626:12:19"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "619:3:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "647:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "662:6:19"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "670:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "658:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "658:15:19"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "651:3:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "719:24:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "728:5:19"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "735:5:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "721:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "721:20:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "721:20:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "696:6:19"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "704:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "692:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "692:15:19"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "709:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:24:19"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "714:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "685:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "685:33:19"
                  },
                  "nodeType": "YulIf",
                  "src": "682:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "752:14:19",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "761:5:19"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "756:1:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "820:118:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "841:3:19"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "859:3:19"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "846:12:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "846:17:19"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "834:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "834:30:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "834:30:19"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "877:19:19",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "888:3:19"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "893:2:19"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "884:3:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "884:12:19"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "877:3:19"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "909:19:19",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "920:3:19"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "925:2:19"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "916:3:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "916:12:19"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "909:3:19"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "786:1:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "789:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "783:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "783:9:19"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "793:18:19",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "795:14:19",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "804:1:19"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "807:1:19",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "800:3:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "800:9:19"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "795:1:19"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "779:3:19",
                    "statements": []
                  },
                  "src": "775:163:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "947:14:19",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "956:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "947:5:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_array$_t_uint256_$dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "261:6:19",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "269:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "277:5:19",
                "type": ""
              }
            ],
            "src": "217:750:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1026:498:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1075:24:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1084:5:19"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1091:5:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1077:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1077:20:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1077:20:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1054:6:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1062:4:19",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1050:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1050:17:19"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1069:3:19"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1046:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1039:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1039:35:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1036:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1108:30:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1131:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1118:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1118:20:19"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1112:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1177:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1179:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1179:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1179:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1153:2:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1157:18:19",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1150:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1150:26:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1147:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1208:70:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1251:2:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1255:4:19",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1247:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1247:13:19"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1266:2:19",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1262:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1262:7:19"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1243:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1243:27:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1272:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1239:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1239:38:19"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1223:15:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:55:19"
                  },
                  "variables": [
                    {
                      "name": "array_1",
                      "nodeType": "YulTypedName",
                      "src": "1212:7:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array_1",
                        "nodeType": "YulIdentifier",
                        "src": "1294:7:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1303:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1287:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1287:19:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1287:19:19"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1354:24:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1363:5:19"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1370:5:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1356:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1356:20:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1356:20:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1329:6:19"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1337:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1325:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1325:15:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1342:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1321:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1321:26:19"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1349:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1318:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1318:35:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1315:2:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array_1",
                            "nodeType": "YulIdentifier",
                            "src": "1404:7:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1413:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1400:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1400:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1424:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1432:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1420:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1420:17:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1439:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1387:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:55:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1387:55:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array_1",
                                "nodeType": "YulIdentifier",
                                "src": "1466:7:19"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1475:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1462:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1462:16:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1480:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1458:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1458:27:19"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1487:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1451:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1451:42:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1451:42:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1502:16:19",
                  "value": {
                    "name": "array_1",
                    "nodeType": "YulIdentifier",
                    "src": "1511:7:19"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1502:5:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1000:6:19",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1008:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1016:5:19",
                "type": ""
              }
            ],
            "src": "972:552:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1599:128:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1645:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1654:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1662:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1647:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1647:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1647:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1620:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1629:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1616:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1616:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1641:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1612:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1612:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1609:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1680:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1711:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1690:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1690:31:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1680:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1565:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1576:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1588:6:19",
                "type": ""
              }
            ],
            "src": "1529:198:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1929:804:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1976:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1985:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1993:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1978:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1978:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1978:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1950:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1959:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1946:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1946:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1971:3:19",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1942:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:33:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1939:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2011:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2042:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2021:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:31:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2011:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2061:50:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2096:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2107:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2092:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2092:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2071:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2071:40:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2061:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2120:46:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2151:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2162:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2147:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2147:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2134:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2134:32:19"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2124:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2175:28:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2185:18:19",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2179:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2230:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2239:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2247:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2232:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2232:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2232:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2218:6:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2226:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2215:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2215:14:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2212:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2265:77:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2314:9:19"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2325:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2310:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2310:22:19"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2334:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "2275:34:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2275:67:19"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2265:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2351:48:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2384:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2395:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2380:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2380:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2367:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:32:19"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2355:8:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2428:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2437:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2445:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2430:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2430:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2430:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2414:8:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2424:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2411:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2411:16:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2408:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2463:79:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2512:9:19"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2523:8:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2508:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2508:24:19"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2534:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "2473:34:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2473:69:19"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2463:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2551:49:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2584:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2595:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2580:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2580:19:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2567:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2567:33:19"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "2555:8:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2629:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2638:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2646:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2631:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2631:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2631:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "2615:8:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2625:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2612:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2612:16:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2609:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2664:63:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2697:9:19"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "2708:8:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2693:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2693:24:19"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2719:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "2674:18:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2674:53:19"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2664:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1863:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1874:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1886:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1894:6:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1902:6:19",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1910:6:19",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1918:6:19",
                "type": ""
              }
            ],
            "src": "1732:1001:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2885:485:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2932:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2941:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2949:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2934:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2934:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2934:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2906:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2915:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2902:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2902:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2927:3:19",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2898:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2898:33:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2895:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2967:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2998:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2977:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2977:31:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2967:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3017:50:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3052:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3063:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3048:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3048:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3027:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3027:40:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3017:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3076:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3103:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3114:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3099:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3099:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3086:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3086:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3076:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3127:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3154:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3165:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3150:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3150:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3137:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3137:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3127:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3178:47:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3209:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3220:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3205:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3205:19:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3192:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3192:33:19"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3182:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3268:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3277:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3285:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3270:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3270:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3270:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3240:6:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3248:18:19",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3237:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3237:30:19"
                  },
                  "nodeType": "YulIf",
                  "src": "3234:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3303:61:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3336:9:19"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3347:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3332:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3332:22:19"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3356:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "3313:18:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3313:51:19"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3303:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2819:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2830:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2842:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2850:6:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2858:6:19",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2866:6:19",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2874:6:19",
                "type": ""
              }
            ],
            "src": "2738:632:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3547:446:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3594:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value5",
                              "nodeType": "YulIdentifier",
                              "src": "3603:6:19"
                            },
                            {
                              "name": "value5",
                              "nodeType": "YulIdentifier",
                              "src": "3611:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3596:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3596:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3596:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3568:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3577:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3564:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3564:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3589:3:19",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3560:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3560:33:19"
                  },
                  "nodeType": "YulIf",
                  "src": "3557:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3629:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3660:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3639:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3639:31:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3629:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3679:50:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3714:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3725:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3710:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3710:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3689:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3689:40:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3679:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3738:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3765:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3776:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3761:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3761:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3748:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3748:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3738:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3789:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3816:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3827:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3812:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3812:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3799:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3799:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3789:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3840:43:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3867:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3878:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3863:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3863:19:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3850:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3850:33:19"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3840:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3892:43:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3919:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3930:3:19",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3915:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3915:19:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3902:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3902:33:19"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "3892:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3944:43:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3971:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3982:3:19",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3967:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3967:19:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3954:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3954:33:19"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "3944:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3465:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3476:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3488:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3496:6:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3504:6:19",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3512:6:19",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3520:6:19",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3528:6:19",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "3536:6:19",
                "type": ""
              }
            ],
            "src": "3375:618:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4085:179:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4131:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4140:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4148:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4133:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4133:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4133:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4106:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4115:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4102:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4102:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4127:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4098:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4098:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4095:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4166:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4197:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4176:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4176:31:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4166:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4216:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4243:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4254:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4239:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4239:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4226:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4226:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4216:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4043:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4054:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4066:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4074:6:19",
                "type": ""
              }
            ],
            "src": "3998:266:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4373:230:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4419:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4428:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4436:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4421:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4421:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4421:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4394:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4403:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4390:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4390:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4415:2:19",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4386:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4386:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4383:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4454:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4485:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4464:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4464:31:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4454:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4504:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4531:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4542:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4527:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4527:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4514:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4514:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4504:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4555:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4582:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4593:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4578:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4578:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4565:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4565:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4555:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4323:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4334:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4346:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4354:6:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4362:6:19",
                "type": ""
              }
            ],
            "src": "4269:334:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4686:219:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4732:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4741:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4749:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4734:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4734:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4734:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4707:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4716:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4703:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4703:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4728:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4699:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4699:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4696:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4767:29:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4786:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4780:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4780:16:19"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4771:5:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4849:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4858:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4866:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4851:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4851:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4851:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4818:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4839:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4832:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4832:13:19"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4825:6:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4825:21:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4815:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4815:32:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4808:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4808:40:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4805:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4884:15:19",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4894:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4884:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4652:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4663:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4675:6:19",
                "type": ""
              }
            ],
            "src": "4608:297:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4979:283:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5025:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5034:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5042:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5027:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5027:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5027:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5000:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5009:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4996:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4996:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5021:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4992:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4992:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4989:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5060:36:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5086:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5073:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5073:23:19"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5064:5:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5206:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5215:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5223:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5208:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5208:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5208:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5118:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5129:5:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5136:66:19",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5125:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5125:78:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5115:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5115:89:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5108:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5108:97:19"
                  },
                  "nodeType": "YulIf",
                  "src": "5105:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5241:15:19",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5251:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5241:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4945:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4956:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4968:6:19",
                "type": ""
              }
            ],
            "src": "4910:352:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5337:120:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5383:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5392:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5400:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5385:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5385:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5385:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5358:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5367:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5354:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5354:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5379:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5350:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5350:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "5347:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5418:33:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5441:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5428:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5428:23:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5418:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5303:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5314:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5326:6:19",
                "type": ""
              }
            ],
            "src": "5267:190:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5549:171:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5595:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5604:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5612:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5597:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5597:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5597:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5570:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5579:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5566:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5566:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5591:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5562:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5562:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "5559:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5630:33:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5653:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5640:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5640:23:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5630:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5672:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5699:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5710:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5695:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5695:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5682:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5682:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5672:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5507:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5518:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5530:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5538:6:19",
                "type": ""
              }
            ],
            "src": "5462:258:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5900:281:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5910:38:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5920:28:19",
                    "type": "",
                    "value": "0x01000000000000000000000000"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5914:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5957:52:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5967:42:19",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "5961:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6025:3:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6038:6:19"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "6046:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6034:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6034:15:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6051:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "6030:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6030:24:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6018:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6018:37:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6018:37:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6075:3:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6080:2:19",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6071:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6071:12:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "6093:6:19"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "6101:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6089:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6089:15:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6106:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "6085:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6085:24:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6064:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6064:46:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6064:46:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6130:3:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6135:2:19",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6126:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6126:12:19"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6140:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6119:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6119:28:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6119:28:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6156:19:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6167:3:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6172:2:19",
                        "type": "",
                        "value": "72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6163:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6163:12:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6156:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5860:3:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5865:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5873:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5881:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5892:3:19",
                "type": ""
              }
            ],
            "src": "5725:456:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6287:125:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6297:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6309:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6320:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6305:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6305:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6297:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6339:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6354:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6362:42:19",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6350:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6350:55:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6332:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6332:74:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6332:74:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6256:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6267:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6278:4:19",
                "type": ""
              }
            ],
            "src": "6186:226:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6574:241:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6584:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6596:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6607:2:19",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6592:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6592:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6584:4:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6619:52:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6629:42:19",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6623:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6687:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6702:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6710:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6698:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6698:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6680:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6680:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6680:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6734:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6745:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6730:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6730:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6754:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6762:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6750:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6750:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6723:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6723:43:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6723:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6786:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6797:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6782:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6782:18:19"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6802:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6775:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6775:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6775:34:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6527:9:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6538:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6546:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6554:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6565:4:19",
                "type": ""
              }
            ],
            "src": "6417:398:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7105:368:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7115:52:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7125:42:19",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7119:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7183:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7198:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7206:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7194:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7194:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7176:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7176:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7176:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7230:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7241:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7226:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7226:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7250:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7258:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7246:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7246:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7219:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7219:43:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7219:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7282:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7293:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7278:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7278:18:19"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7298:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7271:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7271:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7271:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7325:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7336:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7321:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7321:18:19"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7341:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7314:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7314:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7314:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7368:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7379:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7364:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7364:19:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7385:3:19",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7357:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7357:32:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7357:32:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7409:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7420:3:19",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7405:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7405:19:19"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7426:4:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7398:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7398:33:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7398:33:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7440:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7452:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7463:3:19",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7448:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7448:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7440:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7050:9:19",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7061:6:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7069:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7077:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7085:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7096:4:19",
                "type": ""
              }
            ],
            "src": "6820:653:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7607:168:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7617:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7629:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7640:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7625:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7625:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7617:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7659:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7674:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7682:42:19",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7670:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7670:55:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7652:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7652:74:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7652:74:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7746:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7757:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7742:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7742:18:19"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7762:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7735:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7735:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7735:34:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7568:9:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7579:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7587:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7598:4:19",
                "type": ""
              }
            ],
            "src": "7478:297:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7875:92:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7885:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7897:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7908:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7893:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7893:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7885:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7927:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7952:6:19"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7945:6:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7945:14:19"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7938:6:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7938:22:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7920:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7920:41:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7920:41:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7844:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7855:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7866:4:19",
                "type": ""
              }
            ],
            "src": "7780:187:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8406:700:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8416:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8428:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8439:3:19",
                        "type": "",
                        "value": "416"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8424:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8424:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8416:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8459:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8484:6:19"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8477:6:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8477:14:19"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8470:6:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8470:22:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8452:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8452:41:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8452:41:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8502:52:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8512:42:19",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8506:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8574:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8585:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8570:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8570:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8594:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8602:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8590:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8590:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8563:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8563:43:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8563:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8626:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8637:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8622:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8622:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8646:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8654:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8642:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8642:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8615:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8615:43:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8615:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8678:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8689:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8674:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8674:18:19"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8694:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8667:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8667:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8667:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8721:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8732:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8717:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8717:19:19"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "8738:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8710:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8710:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8710:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8765:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8776:3:19",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8761:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8761:19:19"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "8782:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8754:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8754:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8754:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8809:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8820:3:19",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8805:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8805:19:19"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "8826:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8798:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8798:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8798:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8853:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8864:3:19",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8849:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8849:19:19"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "8870:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8842:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8842:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8842:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8897:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8908:3:19",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8893:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8893:19:19"
                      },
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "8914:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8886:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8886:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8886:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8941:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8952:3:19",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8937:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8937:19:19"
                      },
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "8958:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8930:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8930:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8930:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8985:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8996:3:19",
                            "type": "",
                            "value": "320"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8981:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8981:19:19"
                      },
                      {
                        "name": "value10",
                        "nodeType": "YulIdentifier",
                        "src": "9002:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8974:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8974:36:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8974:36:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9030:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9041:3:19",
                            "type": "",
                            "value": "352"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9026:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9026:19:19"
                      },
                      {
                        "name": "value11",
                        "nodeType": "YulIdentifier",
                        "src": "9047:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9019:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9019:36:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9019:36:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9075:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9086:3:19",
                            "type": "",
                            "value": "384"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9071:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9071:19:19"
                      },
                      {
                        "name": "value12",
                        "nodeType": "YulIdentifier",
                        "src": "9092:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9064:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9064:36:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9064:36:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_address_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_address_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8276:9:19",
                "type": ""
              },
              {
                "name": "value12",
                "nodeType": "YulTypedName",
                "src": "8287:7:19",
                "type": ""
              },
              {
                "name": "value11",
                "nodeType": "YulTypedName",
                "src": "8296:7:19",
                "type": ""
              },
              {
                "name": "value10",
                "nodeType": "YulTypedName",
                "src": "8305:7:19",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "8314:6:19",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "8322:6:19",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "8330:6:19",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "8338:6:19",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8346:6:19",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8354:6:19",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8362:6:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8370:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8378:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8386:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8397:4:19",
                "type": ""
              }
            ],
            "src": "7972:1134:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9210:149:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9220:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9232:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9243:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9228:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9228:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9220:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9262:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9277:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9285:66:19",
                            "type": "",
                            "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9273:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9273:79:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9255:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9255:98:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9255:98:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9179:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9190:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9201:4:19",
                "type": ""
              }
            ],
            "src": "9111:248:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9538:233:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9555:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9566:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9548:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9548:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9548:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9589:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9600:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9585:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9585:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9605:2:19",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9578:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9578:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9578:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9628:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9639:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9624:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9624:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9644:34:19",
                        "type": "",
                        "value": "You have already issued bonds fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9617:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9617:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9617:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9699:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9710:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9695:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9695:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9715:13:19",
                        "type": "",
                        "value": "r this loan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9688:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9688:41:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9688:41:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9738:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9750:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9761:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9746:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9746:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9738:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9515:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9529:4:19",
                "type": ""
              }
            ],
            "src": "9364:407:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9950:235:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9967:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9978:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9960:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9960:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9960:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10001:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10012:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9997:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9997:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10017:2:19",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9990:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9990:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9990:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10040:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10051:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10036:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10036:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10056:34:19",
                        "type": "",
                        "value": "Only the bond contract can call "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10029:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10029:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10029:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10111:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10122:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10107:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10107:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10127:15:19",
                        "type": "",
                        "value": "this function"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10100:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10100:43:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10100:43:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10152:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10164:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10175:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10160:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10160:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10152:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9927:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9941:4:19",
                "type": ""
              }
            ],
            "src": "9776:409:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10364:223:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10381:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10392:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10374:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10374:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10374:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10415:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10426:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10411:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10411:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10431:2:19",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10404:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10404:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10404:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10454:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10465:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10450:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10450:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10470:34:19",
                        "type": "",
                        "value": "You must make the minimum paymen"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10443:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10443:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10443:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10525:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10536:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10521:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10521:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10541:3:19",
                        "type": "",
                        "value": "t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10514:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10514:31:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10514:31:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10554:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10566:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10577:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10562:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10562:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10554:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10341:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10355:4:19",
                "type": ""
              }
            ],
            "src": "10190:397:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10766:301:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10783:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10794:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10776:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10776:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10776:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10817:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10828:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10813:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10813:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10833:2:19",
                        "type": "",
                        "value": "71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10806:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10806:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10806:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10856:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10867:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10852:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10852:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10872:34:19",
                        "type": "",
                        "value": "this loan has not been issued ye"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10845:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10845:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10845:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10927:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10938:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10923:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10923:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10943:34:19",
                        "type": "",
                        "value": "t. How do you even have bonds fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10916:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10916:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10916:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10998:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11009:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10994:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10994:19:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11015:9:19",
                        "type": "",
                        "value": "r it???"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10987:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10987:38:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10987:38:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11034:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11046:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11057:3:19",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11042:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11042:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11034:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10743:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10757:4:19",
                "type": ""
              }
            ],
            "src": "10592:475:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11246:367:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11263:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11274:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11256:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11256:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11256:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11297:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11308:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11293:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11293:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11313:2:19",
                        "type": "",
                        "value": "97"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11286:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11286:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11286:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11336:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11347:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11332:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11332:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11352:34:19",
                        "type": "",
                        "value": "The ammount your are trying to c"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11325:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11325:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11325:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11407:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11418:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11403:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11403:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11423:34:19",
                        "type": "",
                        "value": "ollect is not available. And/Or "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11396:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11396:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11396:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11478:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11489:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11474:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11474:19:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11495:34:19",
                        "type": "",
                        "value": "there is no collateral to collec"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11467:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11467:63:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11467:63:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11550:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11561:3:19",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11546:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11546:19:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11567:3:19",
                        "type": "",
                        "value": "t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11539:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11539:32:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11539:32:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11580:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11592:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11603:3:19",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11588:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11588:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11580:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_846cc0b1aafc73139d8ddf10bd5c5eb839730e911733144a6446ec920579faed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11223:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11237:4:19",
                "type": ""
              }
            ],
            "src": "11072:541:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11792:223:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11809:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11820:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11802:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11802:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11802:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11843:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11854:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11839:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11839:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11859:2:19",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11832:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11832:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11832:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11882:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11893:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11878:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11878:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11898:34:19",
                        "type": "",
                        "value": "This contract is alreayd paid of"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11871:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11871:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11871:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11953:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11964:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11949:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11949:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11969:3:19",
                        "type": "",
                        "value": "f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11942:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11942:31:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11942:31:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11982:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11994:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12005:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11990:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11990:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11982:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11769:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11783:4:19",
                "type": ""
              }
            ],
            "src": "11618:397:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12194:226:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12211:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12222:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12204:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12204:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12204:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12245:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12256:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12241:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12241:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12261:2:19",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12234:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12234:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12234:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12284:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12295:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12280:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12280:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12300:34:19",
                        "type": "",
                        "value": "only the borrower can add collat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12273:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12273:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12273:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12355:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12366:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12351:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12351:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12371:6:19",
                        "type": "",
                        "value": "eral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12344:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12344:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12344:34:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12387:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12399:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12410:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12395:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12395:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12387:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12171:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12185:4:19",
                "type": ""
              }
            ],
            "src": "12020:400:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12599:248:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12616:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12627:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12609:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12609:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12609:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12650:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12661:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12646:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12646:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12666:2:19",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12639:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12639:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12639:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12689:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12700:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12685:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12685:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12705:34:19",
                        "type": "",
                        "value": "loan must be paid off or not sta"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12678:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12678:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12678:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12760:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12771:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12756:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12756:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12776:28:19",
                        "type": "",
                        "value": "rted to collect collateral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12749:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12749:56:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12749:56:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12814:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12826:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12837:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12822:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12822:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12814:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12576:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12590:4:19",
                "type": ""
              }
            ],
            "src": "12425:422:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13026:254:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13043:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13054:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13036:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13036:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13036:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13077:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13088:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13073:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13073:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13093:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13066:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13066:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13066:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13116:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13127:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13112:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13112:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13132:34:19",
                        "type": "",
                        "value": "When increasing collateral, you "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13105:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13105:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13105:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13187:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13198:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13183:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13183:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13203:34:19",
                        "type": "",
                        "value": "must use the same ERC20 address "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13176:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13176:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13176:62:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13247:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13259:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13270:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13255:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13255:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13247:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13003:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13017:4:19",
                "type": ""
              }
            ],
            "src": "12852:428:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13459:230:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13476:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13487:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13469:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13469:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13469:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13510:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13521:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13506:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13506:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13526:2:19",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13499:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13499:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13499:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13549:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13560:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13545:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13545:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13565:34:19",
                        "type": "",
                        "value": "only the borrower can collect co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13538:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13538:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13538:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13620:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13631:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13616:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13616:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13636:10:19",
                        "type": "",
                        "value": "llateral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13609:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13609:38:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13609:38:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13656:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13668:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13679:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13664:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13664:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13656:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13436:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13450:4:19",
                "type": ""
              }
            ],
            "src": "13285:404:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13795:76:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13805:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13817:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13828:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13813:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13813:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13805:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13847:9:19"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13858:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13840:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13840:25:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13840:25:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13764:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13775:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13786:4:19",
                "type": ""
              }
            ],
            "src": "13694:177:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14005:168:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14015:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14027:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14038:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14023:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14023:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14015:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14057:9:19"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14068:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14050:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14050:25:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14050:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14095:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14106:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14091:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14091:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14115:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14123:42:19",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14111:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14111:55:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14084:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14084:83:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14084:83:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13966:9:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13977:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13985:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13996:4:19",
                "type": ""
              }
            ],
            "src": "13876:297:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14223:230:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14233:19:19",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14249:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14243:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14243:9:19"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "14233:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14261:58:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "14283:6:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "14299:4:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14305:2:19",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14295:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14295:13:19"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14314:2:19",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "14310:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14310:7:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14291:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14291:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14279:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14279:40:19"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "14265:10:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14394:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "14396:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14396:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14396:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "14337:10:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14349:18:19",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14334:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14334:34:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "14373:10:19"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14385:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14370:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14370:22:19"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "14331:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14331:62:19"
                  },
                  "nodeType": "YulIf",
                  "src": "14328:2:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14432:2:19",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "14436:10:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14425:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14425:22:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14425:22:19"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "14203:4:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14212:6:19",
                "type": ""
              }
            ],
            "src": "14178:275:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14506:80:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14533:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14535:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14535:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14535:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14522:1:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14529:1:19"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14525:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14525:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14519:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14519:13:19"
                  },
                  "nodeType": "YulIf",
                  "src": "14516:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14564:16:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14575:1:19"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14578:1:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14571:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14571:9:19"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "14564:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14489:1:19",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14492:1:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "14498:3:19",
                "type": ""
              }
            ],
            "src": "14458:128:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14640:76:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14662:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14664:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14664:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14664:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14656:1:19"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14659:1:19"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14653:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14653:8:19"
                  },
                  "nodeType": "YulIf",
                  "src": "14650:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14693:17:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14705:1:19"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14708:1:19"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14701:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14701:9:19"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14693:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14622:1:19",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14625:1:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14631:4:19",
                "type": ""
              }
            ],
            "src": "14591:125:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14753:152:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14770:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14773:77:19",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14763:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14763:88:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14763:88:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14867:1:19",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14870:4:19",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14860:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14860:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14860:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14891:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14894:4:19",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14884:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14884:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14884:15:19"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "14721:184:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14942:152:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14959:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14962:77:19",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14952:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14952:88:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14952:88:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15056:1:19",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15059:4:19",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15049:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15049:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15049:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15080:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15083:4:19",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15073:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15073:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15073:15:19"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14910:184:19"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_array$_t_uint256_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let _3 := mul(_1, _2)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _3), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value2 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value3 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value5, value5) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let _1 := 0x01000000000000000000000000\n        let _2 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(pos, mul(and(value0, _2), _1))\n        mstore(add(pos, 20), mul(and(value1, _2), _1))\n        mstore(add(pos, 40), value2)\n        end := add(pos, 72)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), tail)\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bool_t_address_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_address_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 416)\n        mstore(headStart, iszero(iszero(value0)))\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n        mstore(add(headStart, 384), value12)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"You have already issued bonds fo\")\n        mstore(add(headStart, 96), \"r this loan\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"Only the bond contract can call \")\n        mstore(add(headStart, 96), \"this function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"You must make the minimum paymen\")\n        mstore(add(headStart, 96), \"t\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 71)\n        mstore(add(headStart, 64), \"this loan has not been issued ye\")\n        mstore(add(headStart, 96), \"t. How do you even have bonds fo\")\n        mstore(add(headStart, 128), \"r it???\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_846cc0b1aafc73139d8ddf10bd5c5eb839730e911733144a6446ec920579faed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 97)\n        mstore(add(headStart, 64), \"The ammount your are trying to c\")\n        mstore(add(headStart, 96), \"ollect is not available. And/Or \")\n        mstore(add(headStart, 128), \"there is no collateral to collec\")\n        mstore(add(headStart, 160), \"t\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"This contract is alreayd paid of\")\n        mstore(add(headStart, 96), \"f\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"only the borrower can add collat\")\n        mstore(add(headStart, 96), \"eral\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"loan must be paid off or not sta\")\n        mstore(add(headStart, 96), \"rted to collect collateral\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"When increasing collateral, you \")\n        mstore(add(headStart, 96), \"must use the same ERC20 address \")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"only the borrower can collect co\")\n        mstore(add(headStart, 96), \"llateral\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "342:3743:3:-:0;;;758:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1416:12:4;:21;;-1:-1:-1;;;;;;1416:21:4;-1:-1:-1;;;;;1416:21:4;;;;;;;;;;342:3743:3;;14:310:19;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:19;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:19:o;:::-;342:3743:3;;;;;;",
  "deployedSourceMap": "342:3743:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:233:12;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6812:879:4;;;;;;:::i;:::-;;:::i;:::-;;8702:202;;;;;;:::i;:::-;;:::i;555:54:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1930:437::-;;;;;;:::i;:::-;;:::i;1240:44:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3838:132::-;;;;;;:::i;:::-;;:::i;1192:42::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;2037:122::-;;;;;;:::i;:::-;;:::i;4263:163::-;;;;;;:::i;:::-;;:::i;2690:1393:3:-;;;;;;:::i;:::-;;:::i;358:201:11:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9137:264:4:-;;;;;;:::i;:::-;;:::i;1141:672:3:-;;;;;;:::i;:::-;;:::i;2472:286:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3373:257::-;;;;;;:::i;:::-;;:::i;573:27::-;;;:::i;:::-;;;;;;;:::i;5342:1146::-;;;;;;:::i;:::-;;:::i;179:173:11:-;;;;;;:::i;:::-;;:::i;312:233:12:-;414:4;-1:-1:-1;;;;;;437:49:12;;452:34;437:49;;:101;;;502:36;526:11;502:23;:36::i;:::-;430:108;;312:233;;;;:::o;6812:879:4:-;1804:15;;;;:10;:15;;;;;:34;;;;1762:31;;;;;6907:3;;-1:-1:-1;1754:130:4;;;;-1:-1:-1;;;;;1754:130:4;;;;;;;:::i;:::-;;;;;;;;;6926:14:::1;6943:15:::0;;;:10:::1;:15;::::0;;;;;;;;6926:32;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;;;::::0;;-1:-1:-1;;;;;6926:32:4::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;6976:30;::::1;;::::0;:182:::1;;;7145:2;:13;;;7124:2;:18;;;7100:2;:21;;;:42;;;;:::i;:::-;:58;6976:182;6968:293;;;;-1:-1:-1::0;;;;;6968:293:4::1;;;;;;;:::i;:::-;7295:2;:15;;;-1:-1:-1::0;;;;;7288:36:4::1;;7325:10;7345:4;7352:13;7288:78;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7381:15:4::1;::::0;;;:10:::1;:15;::::0;;;;:34:::1;;:51:::0;;7419:13;;7381:15;:51:::1;::::0;7419:13;;7381:51:::1;:::i;:::-;::::0;;;-1:-1:-1;;7518:16:4::1;::::0;::::1;::::0;7500:34:::1;::::0;:15:::1;:34;:::i;:::-;7467:15;::::0;;;:10:::1;:15;::::0;;;;:30:::1;::::0;::::1;:67:::0;;;;7578:31:::1;::::0;;::::1;:48:::0;;7613:13;;7467:15;7578:48:::1;::::0;7613:13;;7578:48:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;6812:879:4:o;8702:202::-;8763:4;8828:15;;;:10;:15;;;;;:34;;;;8785:31;;;;;:77;;;:112;;-1:-1:-1;;8875:15:4;;;;:10;:15;;;;;:22;;;8874:23;;8702:202::o;555:54:3:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;555:54:3;;;;;:::o;1930:437::-;2013:19;;;;:10;:19;;;;;;;;:28;;-1:-1:-1;;;;;2013:28:3;1999:10;:42;1991:95;;;;-1:-1:-1;;;;;1991:95:3;;;;;;;:::i;:::-;2104:19;2115:7;2104:10;:19::i;:::-;:50;;;-1:-1:-1;2128:19:3;;;;:10;:19;;;;;:26;;;2127:27;2104:50;2096:121;;;;-1:-1:-1;;;;;2096:121:3;;;;;;;:::i;:::-;2227:12;2249:25;;;:16;:25;;;;;;;:39;;;2326:33;;;;2299:61;;-1:-1:-1;;;;;2299:61:3;;-1:-1:-1;;;;;2249:39:3;;;;;;2299:14;;:61;;2314:10;;2326:33;2299:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1930:437;;:::o;1240:44:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3838:132::-;3902:7;3927:15;;;:10;:15;;;;;:35;;;;3838:132::o;1192:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1192:42:4;;;;;;;;;;;;:::o;2037:122::-;-1:-1:-1;;;;;2132:13:4;2107:7;2132:13;;;:7;:13;;;;;:20;;2037:122::o;4263:163::-;4326:4;4368:15;;;:10;:15;;;;;:30;;;4349:15;:49;;;;:69;;;4403:15;4414:3;4403:10;:15::i;:::-;4402:16;;4263:163;-1:-1:-1;;4263:163:4:o;2690:1393:3:-;2763:16;2791:12;;2836:15;;;2791:12;2836:15;;;;;;;;:28;2895:16;:21;;;;:35;2949:15;;;-1:-1:-1;;;;;2791:12:3;;;;;2836:28;;;;;2895:35;;;;2949:22;;2941:106;;;;-1:-1:-1;;;;;2941:106:3;;;;;;;:::i;:::-;3057:66;;;;;-1:-1:-1;;;;;3057:24:3;;;;;:66;;3082:10;;3102:4;;3109:3;;3114:4;;3057:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3202:17;3215:3;3202:12;:17::i;:::-;:54;;;;-1:-1:-1;3223:21:3;;;;:16;:21;;;;;:29;;;:33;;3202:54;3199:693;;;3371:21;;;;:16;:21;;;;;:29;;;:36;-1:-1:-1;3368:301:3;;;3458:1;3426:21;;;:16;:21;;;;;;:29;;:33;;;3477:55;-1:-1:-1;;;;;3477:55:3;;-1:-1:-1;;;;;3477:12:3;;;;;:55;;3490:10;;3477:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3368:301;;;3569:21;;;;:16;:21;;;;;:29;;:37;;3602:4;;3569:21;:37;;3602:4;;3569:37;:::i;:::-;;;;-1:-1:-1;;3624:30:3;;-1:-1:-1;;;;;3624:30:3;;-1:-1:-1;;;;;3624:12:3;;;;;:30;;3637:10;;3649:4;;3624:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3368:301;3199:693;;;3707:15;;;;:10;:15;;;;;:34;;;3700:41;;3697:185;;;3760:107;;-1:-1:-1;;;;;3760:107:3;;;;;;;:::i;3697:185::-;3984:15;;;;:10;:15;;;;;:34;;;3976:42;;3973:103;;4033:32;;-1:-1:-1;;;;;4033:32:3;;-1:-1:-1;;;;;4033:14:3;;;;;:32;;4048:10;;4060:4;;4033:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3973:103;2690:1393;;;;;:::o;358:201:11:-;516:36;358:201;;;;;;;:::o;9137:264:4:-;9215:7;9233:10;9315:4;9334:9;9357:6;9277:96;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9277:96:4;;;;;;;;;9267:107;;9277:96;9267:107;;;;;-1:-1:-1;;9137:264:4;;;;;:::o;1141:672:3:-;1249:19;;;;:10;:19;;;;;;;;:28;;-1:-1:-1;;;;;1249:28:3;1281:10;1249:42;1241:91;;;;-1:-1:-1;;;;;1241:91:3;;;;;;;:::i;:::-;1342:12;1392:25;;;:16;:25;;;;;:33;;;1364:14;;1389:353;;1473:36;;;;;;;;-1:-1:-1;;;;;1473:36:3;;;;;;;;;;;;-1:-1:-1;1445:25:3;;;:16;:25;;;;;;:64;;;;-1:-1:-1;;1445:64:3;;;;;;;;-1:-1:-1;1445:64:3;;;;1389:353;;;1564:25;;;;:16;:25;;;;;:39;-1:-1:-1;;;;;1546:57:3;;;1564:39;;1546:57;1538:134;;;;-1:-1:-1;;;;;1538:134:3;;;;;;;:::i;:::-;1686:25;;;;:16;:25;;;;;:33;;:45;;1723:8;;1686:25;:45;;1723:8;;1686:45;:::i;:::-;;;;-1:-1:-1;;1389:353:3;1751:55;;;;;-1:-1:-1;;;;;1751:18:3;;;;;:55;;1770:10;;1790:4;;1797:8;;1751:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2472:286:4:-;2540:7;1572:12;;2540:7;;-1:-1:-1;;;;;1572:12:4;1558:10;:26;1550:84;;;;-1:-1:-1;;;;;1550:84:4;;;;;;;:::i;:::-;2575:15:::1;::::0;;;:10:::1;:15;::::0;;;;:22;::::1;;2574:23;2566:78;;;;-1:-1:-1::0;;;;;2566:78:4::1;;;;;;;:::i;:::-;-1:-1:-1::0;;2654:15:4::1;::::0;;;2679:4:::1;2654:15;::::0;;;;;;;:29;;-1:-1:-1;;2654:29:4::1;::::0;::::1;::::0;;2700:25:::1;::::0;::::1;::::0;2726:24;::::1;::::0;-1:-1:-1;;;;;2726:24:4::1;2472:286:::0;;;:::o;3373:257::-;3456:4;1572:12;;-1:-1:-1;;;;;1572:12:4;1558:10;:26;1550:84;;;;-1:-1:-1;;;;;1550:84:4;;;;;;;:::i;:::-;3475:15:::1;3486:3;3475:10;:15::i;:::-;3471:153;;3505:15;::::0;;;:10:::1;:15;::::0;;;;:34:::1;;:42:::0;;3543:4;;3505:15;:42:::1;::::0;3543:4;;3505:42:::1;:::i;:::-;::::0;;;-1:-1:-1;3568:4:4::1;::::0;-1:-1:-1;3561:11:4::1;::::0;-1:-1:-1;3561:11:4::1;3471:153;-1:-1:-1::0;3608:5:4::1;3601:12;;573:27:::0;;;-1:-1:-1;;;;;573:27:4;;:::o;5342:1146::-;-1:-1:-1;;;;;5683:18:4;;5593:7;5683:18;;;:7;:18;;;;;:25;5593:7;;5666:43;;5672:9;;5666:5;:43::i;:::-;-1:-1:-1;;;;;5746:18:4;;;;;;;:7;:18;;;;;;;;:27;;;;;;;;;;;;;;;;;5834:628;;;;;;;;;;;;;;;;;5933:10;5834:628;;;;;;;5969:24;5834:628;;;;;;;;;;5653:56;;-1:-1:-1;5834:628:4;;;6066:32;6022:14;6066:15;:32;:::i;:::-;5834:628;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5834:628:4;;;;;;;;;;;;;;5817:14;;;:10;:14;;;;;;;:645;;;;;;;;-1:-1:-1;;5817:645:4;;;;;;;-1:-1:-1;;5817:645:4;;-1:-1:-1;;;;;5817:645:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5817:645:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5817:645:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5817:14:4;5342:1146;-1:-1:-1;;5342:1146:4:o;179:173:11:-;314:31;179:173;;;;;;;:::o;763:155:17:-;-1:-1:-1;;;;;;871:40:17;;886:25;871:40;763:155;;;:::o;14:198:19:-;84:20;;-1:-1:-1;;;;;133:54:19;;123:65;;113:2;;202:1;199;192:12;217:750;;330:3;323:4;315:6;311:17;307:27;297:2;;352:5;345;338:20;297:2;392:6;379:20;418:4;441:18;437:2;434:26;431:2;;;463:18;;:::i;:::-;510:2;506;502:11;533:28;557:2;553;549:11;533:28;:::i;:::-;595:15;;;626:12;;;;658:15;;;692;;;688:24;;685:33;-1:-1:-1;682:2:19;;;735:5;728;721:20;682:2;761:5;752:14;;775:163;789:2;786:1;783:9;775:163;;;846:17;;834:30;;807:1;800:9;;;;;884:12;;;;916;;775:163;;;-1:-1:-1;956:5:19;287:680;-1:-1:-1;;;;;;;287:680:19:o;972:552::-;;1069:3;1062:4;1054:6;1050:17;1046:27;1036:2;;1091:5;1084;1077:20;1036:2;1131:6;1118:20;1157:18;1153:2;1150:26;1147:2;;;1179:18;;:::i;:::-;1223:55;1266:2;1247:13;;-1:-1:-1;;1243:27:19;1272:4;1239:38;1223:55;:::i;:::-;1303:2;1294:7;1287:19;1349:3;1342:4;1337:2;1329:6;1325:15;1321:26;1318:35;1315:2;;;1370:5;1363;1356:20;1315:2;1439;1432:4;1424:6;1420:17;1413:4;1404:7;1400:18;1387:55;1462:16;;;1480:4;1458:27;1451:42;;;;1466:7;1026:498;-1:-1:-1;;1026:498:19:o;1529:198::-;;1641:2;1629:9;1620:7;1616:23;1612:32;1609:2;;;1662:6;1654;1647:22;1609:2;1690:31;1711:9;1690:31;:::i;:::-;1680:41;1599:128;-1:-1:-1;;;1599:128:19:o;1732:1001::-;;;;;;1971:3;1959:9;1950:7;1946:23;1942:33;1939:2;;;1993:6;1985;1978:22;1939:2;2021:31;2042:9;2021:31;:::i;:::-;2011:41;;2071:40;2107:2;2096:9;2092:18;2071:40;:::i;:::-;2061:50;;2162:2;2151:9;2147:18;2134:32;2185:18;2226:2;2218:6;2215:14;2212:2;;;2247:6;2239;2232:22;2212:2;2275:67;2334:7;2325:6;2314:9;2310:22;2275:67;:::i;:::-;2265:77;;2395:2;2384:9;2380:18;2367:32;2351:48;;2424:2;2414:8;2411:16;2408:2;;;2445:6;2437;2430:22;2408:2;2473:69;2534:7;2523:8;2512:9;2508:24;2473:69;:::i;:::-;2463:79;;2595:3;2584:9;2580:19;2567:33;2551:49;;2625:2;2615:8;2612:16;2609:2;;;2646:6;2638;2631:22;2609:2;;2674:53;2719:7;2708:8;2697:9;2693:24;2674:53;:::i;:::-;2664:63;;;1929:804;;;;;;;;:::o;2738:632::-;;;;;;2927:3;2915:9;2906:7;2902:23;2898:33;2895:2;;;2949:6;2941;2934:22;2895:2;2977:31;2998:9;2977:31;:::i;:::-;2967:41;;3027:40;3063:2;3052:9;3048:18;3027:40;:::i;:::-;3017:50;;3114:2;3103:9;3099:18;3086:32;3076:42;;3165:2;3154:9;3150:18;3137:32;3127:42;;3220:3;3209:9;3205:19;3192:33;3248:18;3240:6;3237:30;3234:2;;;3285:6;3277;3270:22;3234:2;3313:51;3356:7;3347:6;3336:9;3332:22;3313:51;:::i;3375:618::-;;;;;;;;3589:3;3577:9;3568:7;3564:23;3560:33;3557:2;;;3611:6;3603;3596:22;3557:2;3639:31;3660:9;3639:31;:::i;:::-;3629:41;;3689:40;3725:2;3714:9;3710:18;3689:40;:::i;:::-;3547:446;;3679:50;;-1:-1:-1;;;;3776:2:19;3761:18;;3748:32;;3827:2;3812:18;;3799:32;;3878:3;3863:19;;3850:33;;-1:-1:-1;3930:3:19;3915:19;;3902:33;;-1:-1:-1;3982:3:19;3967:19;;;3954:33;;-1:-1:-1;3547:446:19:o;3998:266::-;;;4127:2;4115:9;4106:7;4102:23;4098:32;4095:2;;;4148:6;4140;4133:22;4095:2;4176:31;4197:9;4176:31;:::i;:::-;4166:41;4254:2;4239:18;;;;4226:32;;-1:-1:-1;;;4085:179:19:o;4269:334::-;;;;4415:2;4403:9;4394:7;4390:23;4386:32;4383:2;;;4436:6;4428;4421:22;4383:2;4464:31;4485:9;4464:31;:::i;:::-;4454:41;4542:2;4527:18;;4514:32;;-1:-1:-1;4593:2:19;4578:18;;;4565:32;;4373:230;-1:-1:-1;;;4373:230:19:o;4608:297::-;;4728:2;4716:9;4707:7;4703:23;4699:32;4696:2;;;4749:6;4741;4734:22;4696:2;4786:9;4780:16;4839:5;4832:13;4825:21;4818:5;4815:32;4805:2;;4866:6;4858;4851:22;4910:352;;5021:2;5009:9;5000:7;4996:23;4992:32;4989:2;;;5042:6;5034;5027:22;4989:2;5086:9;5073:23;-1:-1:-1;;;;;;5129:5:19;5125:78;5118:5;5115:89;5105:2;;5223:6;5215;5208:22;5267:190;;5379:2;5367:9;5358:7;5354:23;5350:32;5347:2;;;5400:6;5392;5385:22;5347:2;-1:-1:-1;5428:23:19;;5337:120;-1:-1:-1;5337:120:19:o;5462:258::-;;;5591:2;5579:9;5570:7;5566:23;5562:32;5559:2;;;5612:6;5604;5597:22;5559:2;-1:-1:-1;;5640:23:19;;;5710:2;5695:18;;;5682:32;;-1:-1:-1;5549:171:19:o;5725:456::-;5920:28;-1:-1:-1;;;;;6034:15:19;;;6030:24;;6018:37;;6089:15;;;;6085:24;;;6080:2;6071:12;;6064:46;6135:2;6126:12;;6119:28;6172:2;6163:12;;5900:281::o;6186:226::-;-1:-1:-1;;;;;6350:55:19;;;;6332:74;;6320:2;6305:18;;6287:125::o;6417:398::-;-1:-1:-1;;;;;6698:15:19;;;6680:34;;6750:15;;;;6745:2;6730:18;;6723:43;6797:2;6782:18;;6775:34;;;;6607:2;6592:18;;6574:241::o;6820:653::-;-1:-1:-1;;;;;7194:15:19;;;7176:34;;7246:15;;;;7241:2;7226:18;;7219:43;7293:2;7278:18;;7271:34;7336:2;7321:18;;7314:34;;;;7385:3;7379;7364:19;;7357:32;;;6820:653;7405:19;;;7398:33;7463:3;7448:19;;7105:368::o;7478:297::-;-1:-1:-1;;;;;7670:55:19;;;;7652:74;;7757:2;7742:18;;7735:34;7640:2;7625:18;;7607:168::o;7780:187::-;7945:14;;7938:22;7920:41;;7908:2;7893:18;;7875:92::o;7972:1134::-;8477:14;;8470:22;8452:41;;-1:-1:-1;;;;;8590:15:19;;;8585:2;8570:18;;8563:43;8642:15;;;;8637:2;8622:18;;8615:43;8689:2;8674:18;;8667:34;;;;8732:3;8717:19;;8710:35;;;;8776:3;8761:19;;8754:35;;;;8820:3;8805:19;;8798:35;;;;8864:3;8849:19;;8842:35;8908:3;8893:19;;8886:35;8952:3;8937:19;;8930:35;8996:3;8981:19;;8974:36;9041:3;9026:19;;9019:36;;;;9086:3;9071:19;;9064:36;8439:3;8424:19;;8406:700::o;9111:248::-;-1:-1:-1;;;;;;9273:79:19;;;;9255:98;;9243:2;9228:18;;9210:149::o;9364:407::-;9566:2;9548:21;;;9605:2;9585:18;;;9578:30;9644:34;9639:2;9624:18;;9617:62;9715:13;9710:2;9695:18;;9688:41;9761:3;9746:19;;9538:233::o;9776:409::-;9978:2;9960:21;;;10017:2;9997:18;;;9990:30;10056:34;10051:2;10036:18;;10029:62;10127:15;10122:2;10107:18;;10100:43;10175:3;10160:19;;9950:235::o;10190:397::-;10392:2;10374:21;;;10431:2;10411:18;;;10404:30;10470:34;10465:2;10450:18;;10443:62;10541:3;10536:2;10521:18;;10514:31;10577:3;10562:19;;10364:223::o;10592:475::-;10794:2;10776:21;;;10833:2;10813:18;;;10806:30;10872:34;10867:2;10852:18;;10845:62;10943:34;10938:2;10923:18;;10916:62;11015:9;11009:3;10994:19;;10987:38;11057:3;11042:19;;10766:301::o;11072:541::-;11274:2;11256:21;;;11313:2;11293:18;;;11286:30;11352:34;11347:2;11332:18;;11325:62;11423:34;11418:2;11403:18;;11396:62;11495:34;11489:3;11474:19;;11467:63;11567:3;11561;11546:19;;11539:32;11603:3;11588:19;;11246:367::o;11618:397::-;11820:2;11802:21;;;11859:2;11839:18;;;11832:30;11898:34;11893:2;11878:18;;11871:62;11969:3;11964:2;11949:18;;11942:31;12005:3;11990:19;;11792:223::o;12020:400::-;12222:2;12204:21;;;12261:2;12241:18;;;12234:30;12300:34;12295:2;12280:18;;12273:62;12371:6;12366:2;12351:18;;12344:34;12410:3;12395:19;;12194:226::o;12425:422::-;12627:2;12609:21;;;12666:2;12646:18;;;12639:30;12705:34;12700:2;12685:18;;12678:62;12776:28;12771:2;12756:18;;12749:56;12837:3;12822:19;;12599:248::o;12852:428::-;13054:2;13036:21;;;13093:2;13073:18;;;13066:30;;;13132:34;13112:18;;;13105:62;13203:34;13198:2;13183:18;;13176:62;13270:3;13255:19;;13026:254::o;13285:404::-;13487:2;13469:21;;;13526:2;13506:18;;;13499:30;13565:34;13560:2;13545:18;;13538:62;13636:10;13631:2;13616:18;;13609:38;13679:3;13664:19;;13459:230::o;13694:177::-;13840:25;;;13828:2;13813:18;;13795:76::o;13876:297::-;14050:25;;;-1:-1:-1;;;;;14111:55:19;14106:2;14091:18;;14084:83;14038:2;14023:18;;14005:168::o;14178:275::-;14249:2;14243:9;14314:2;14295:13;;-1:-1:-1;;14291:27:19;14279:40;;14349:18;14334:34;;14370:22;;;14331:62;14328:2;;;14396:18;;:::i;:::-;14432:2;14425:22;14223:230;;-1:-1:-1;14223:230:19:o;14458:128::-;;14529:1;14525:6;14522:1;14519:13;14516:2;;;14535:18;;:::i;:::-;-1:-1:-1;14571:9:19;;14506:80::o;14591:125::-;;14659:1;14656;14653:8;14650:2;;;14664:18;;:::i;:::-;-1:-1:-1;14701:9:19;;14640:76::o;14721:184::-;14773:77;14770:1;14763:88;14870:4;14867:1;14860:15;14894:4;14891:1;14884:15;14910:184;14962:77;14959:1;14952:88;15059:4;15056:1;15049:15;15083:4;15080:1;15073:15",
  "source": "/// SPDX-License-Identifier: None\npragma solidity ^0.8.0;\n\nimport \"./ERC20PaymentStandard.sol\";\nimport {IERC20} from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\n/**\n* @title ERC20CollateralPayment\n* @author Carson Case\n* @notice this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added\n */\ncontract ERC20CollateralPayment is ERC20PaymentStandard{\n    /// @notice collateral info is stored in a struct/mapping pair\n    struct collateral{\n        address ERC20Contract;\n        uint256 ammount;\n    }\n    mapping(uint256 => collateral) public collateralLookup;\n\n    /**\n    * @notice constructor just runs the ERC20PaymentStandard constructor\n    * @param _bonds is the contract address of bonds\n     */\n    constructor(address _bonds) ERC20PaymentStandard(_bonds){}\n\n    /**\n    * @notice addCollateral must be called before issuing loan\n    * @param _ERC20Contract address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\n    * @param _ammount is the ammount to add as collateral\n    * @param _loanId is the loan ID to add collateral to\n     */\n    function addCollateral(address _ERC20Contract, uint256 _ammount, uint256 _loanId) external{\n        require(loanLookup[_loanId].borrower == msg.sender, \"only the borrower can add collateral\");\n        IERC20 erc20 = IERC20(_ERC20Contract);\n        if(collateralLookup[_loanId].ammount == 0){\n            collateralLookup[_loanId] = collateral(_ERC20Contract, _ammount);\n        }else{\n            require(_ERC20Contract == collateralLookup[_loanId].ERC20Contract, \"When increasing collateral, you must use the same ERC20 address \");\n            collateralLookup[_loanId].ammount += _ammount;\n        }\n        erc20.transferFrom(msg.sender, address(this), _ammount);\n    }\n\n    /**\n    * @notice return Collateral when the loan is complete \n    * @param _loanId is the loan ID\n     */\n    function returnCollateral(uint256 _loanId) external{\n        require(msg.sender == loanLookup[_loanId].borrower, \"only the borrower can collect collateral\");\n        require(isComplete(_loanId) || !loanLookup[_loanId].issued, \"loan must be paid off or not started to collect collateral\");\n        IERC20 erc20 = IERC20(collateralLookup[_loanId].ERC20Contract);\n        erc20.transfer(msg.sender, collateralLookup[_loanId].ammount);\n    }\n\n    /**\n    * @notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\n    * However that was not a good idea as a hacker could create fake bonds.\n    * @param _id is the id of the bond to send in\n    * @param _amm is the ammount to send\n     */\n    function withdrawl(uint256 _id, uint256 _amm) external override{\n        IERC1155 erc1155 = IERC1155(bondContract);\n        IERC20 erc20 = IERC20(loanLookup[_id].ERC20Address);\n        IERC20 col = IERC20(collateralLookup[_id].ERC20Contract);\n        require(loanLookup[_id].issued, \"this loan has not been issued yet. How do you even have bonds for it???\");\n        erc1155.safeTransferFrom(msg.sender, address(this), _id, _amm, \"\");\n        //if loan is delinquent and there's collateral to collect\n        if(isDelinquent(_id) && collateralLookup[_id].ammount !=0){\n            //determine if we should send remainder of collateral or exact ammount of bonds sent\n            if(collateralLookup[_id].ammount < _amm){\n                collateralLookup[_id].ammount = 0;\n                col.transfer(msg.sender, collateralLookup[_id].ammount);\n            }else{\n                collateralLookup[_id].ammount -= _amm;\n                col.transfer(msg.sender, _amm);\n            }\n        }else{\n            if(_amm > loanLookup[_id].awaitingCollection){\n                revert(\"The ammount your are trying to collect is not available. And/Or there is no collateral to collect\");\n            }\n        }\n        //if there's payments to collect in this ammount, collect them.\n        if(_amm <= loanLookup[_id].awaitingCollection){\n            erc20.transfer(msg.sender, _amm);\n        }\n\n    }\n}",
  "sourcePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol",
  "ast": {
    "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol",
    "exportedSymbols": {
      "ERC1155Holder": [
        2980
      ],
      "ERC1155Receiver": [
        3014
      ],
      "ERC165": [
        3936
      ],
      "ERC20CollateralPayment": [
        916
      ],
      "ERC20PaymentStandard": [
        1394
      ],
      "IERC1155": [
        2873
      ],
      "IERC1155Receiver": [
        2914
      ],
      "IERC165": [
        3948
      ],
      "IERC20": [
        3593
      ]
    },
    "id": 917,
    "license": "None",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 619,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:3"
      },
      {
        "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol",
        "file": "./ERC20PaymentStandard.sol",
        "id": 620,
        "nodeType": "ImportDirective",
        "scope": 917,
        "sourceUnit": 1395,
        "src": "59:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 622,
        "nodeType": "ImportDirective",
        "scope": 917,
        "sourceUnit": 3594,
        "src": "96:70:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 621,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "104:6:3",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 624,
              "name": "ERC20PaymentStandard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1394,
              "src": "377:20:3"
            },
            "id": 625,
            "nodeType": "InheritanceSpecifier",
            "src": "377:20:3"
          }
        ],
        "contractDependencies": [
          1394,
          2914,
          2980,
          3014,
          3936,
          3948
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 623,
          "nodeType": "StructuredDocumentation",
          "src": "168:173:3",
          "text": " @title ERC20CollateralPayment\n @author Carson Case\n @notice this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added"
        },
        "fullyImplemented": true,
        "id": 916,
        "linearizedBaseContracts": [
          916,
          1394,
          2980,
          3014,
          2914,
          3936,
          3948
        ],
        "name": "ERC20CollateralPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC20CollateralPayment.collateral",
            "id": 630,
            "members": [
              {
                "constant": false,
                "id": 627,
                "mutability": "mutable",
                "name": "ERC20Contract",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "497:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 626,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "497:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 629,
                "mutability": "mutable",
                "name": "ammount",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "528:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 628,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "collateral",
            "nodeType": "StructDefinition",
            "scope": 916,
            "src": "470:80:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "444da0c9",
            "id": 635,
            "mutability": "mutable",
            "name": "collateralLookup",
            "nodeType": "VariableDeclaration",
            "scope": 916,
            "src": "555:54:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral)"
            },
            "typeName": {
              "id": 634,
              "keyType": {
                "id": 631,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "563:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "555:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral)"
              },
              "valueType": {
                "id": 633,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 632,
                  "name": "collateral",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 630,
                  "src": "574:10:3"
                },
                "referencedDeclaration": 630,
                "src": "574:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_collateral_$630_storage_ptr",
                  "typeString": "struct ERC20CollateralPayment.collateral"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 644,
              "nodeType": "Block",
              "src": "814:2:3",
              "statements": []
            },
            "documentation": {
              "id": 636,
              "nodeType": "StructuredDocumentation",
              "src": "616:137:3",
              "text": " @notice constructor just runs the ERC20PaymentStandard constructor\n @param _bonds is the contract address of bonds"
            },
            "id": 645,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 641,
                    "name": "_bonds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 638,
                    "src": "807:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 642,
                "modifierName": {
                  "id": 640,
                  "name": "ERC20PaymentStandard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1394,
                  "src": "786:20:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "786:28:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "_bonds",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "770:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:16:3"
            },
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:3"
            },
            "scope": 916,
            "src": "758:58:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "1231:582:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 656,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "1249:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 658,
                            "indexExpression": {
                              "id": 657,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 652,
                              "src": "1260:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1249:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 934,
                          "src": "1249:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 660,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1281:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1281:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1249:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792074686520626f72726f7765722063616e2061646420636f6c6c61746572616c",
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1293:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                          "typeString": "literal_string \"only the borrower can add collateral\""
                        },
                        "value": "only the borrower can add collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                          "typeString": "literal_string \"only the borrower can add collateral\""
                        }
                      ],
                      "id": 655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1241:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1241:91:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:91:3"
                },
                {
                  "assignments": [
                    668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 668,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 720,
                      "src": "1342:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3593",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 667,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 666,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3593,
                          "src": "1342:6:3"
                        },
                        "referencedDeclaration": 3593,
                        "src": "1342:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 672,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 670,
                        "name": "_ERC20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "1364:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 669,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "1357:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3593",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1342:37:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 673,
                          "name": "collateralLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 635,
                          "src": "1392:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                          }
                        },
                        "id": 675,
                        "indexExpression": {
                          "id": 674,
                          "name": "_loanId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 652,
                          "src": "1409:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1392:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateral_$630_storage",
                          "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ammount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 629,
                      "src": "1392:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1429:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1392:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 706,
                    "nodeType": "Block",
                    "src": "1524:218:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 690,
                                "name": "_ERC20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 648,
                                "src": "1546:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 691,
                                    "name": "collateralLookup",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 635,
                                    "src": "1564:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                      "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                    }
                                  },
                                  "id": 693,
                                  "indexExpression": {
                                    "id": 692,
                                    "name": "_loanId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 652,
                                    "src": "1581:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1564:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_collateral_$630_storage",
                                    "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                  }
                                },
                                "id": 694,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ERC20Contract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 627,
                                "src": "1564:39:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1546:57:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5768656e20696e6372656173696e6720636f6c6c61746572616c2c20796f75206d75737420757365207468652073616d65204552433230206164647265737320",
                              "id": 696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1605:66:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                                "typeString": "literal_string \"When increasing collateral, you must use the same ERC20 address \""
                              },
                              "value": "When increasing collateral, you must use the same ERC20 address "
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                                "typeString": "literal_string \"When increasing collateral, you must use the same ERC20 address \""
                              }
                            ],
                            "id": 689,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1538:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1538:134:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 698,
                        "nodeType": "ExpressionStatement",
                        "src": "1538:134:3"
                      },
                      {
                        "expression": {
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 699,
                                "name": "collateralLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 635,
                                "src": "1686:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                }
                              },
                              "id": 701,
                              "indexExpression": {
                                "id": 700,
                                "name": "_loanId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 652,
                                "src": "1703:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1686:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateral_$630_storage",
                                "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                              }
                            },
                            "id": 702,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ammount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 629,
                            "src": "1686:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 703,
                            "name": "_ammount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "1723:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1686:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 705,
                        "nodeType": "ExpressionStatement",
                        "src": "1686:45:3"
                      }
                    ]
                  },
                  "id": 707,
                  "nodeType": "IfStatement",
                  "src": "1389:353:3",
                  "trueBody": {
                    "id": 688,
                    "nodeType": "Block",
                    "src": "1431:89:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 679,
                              "name": "collateralLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "1445:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                              }
                            },
                            "id": 681,
                            "indexExpression": {
                              "id": 680,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 652,
                              "src": "1462:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1445:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateral_$630_storage",
                              "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 683,
                                "name": "_ERC20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 648,
                                "src": "1484:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 684,
                                "name": "_ammount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 650,
                                "src": "1500:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 682,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 630,
                              "src": "1473:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_collateral_$630_storage_ptr_$",
                                "typeString": "type(struct ERC20CollateralPayment.collateral storage pointer)"
                              }
                            },
                            "id": 685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1473:36:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateral_$630_memory_ptr",
                              "typeString": "struct ERC20CollateralPayment.collateral memory"
                            }
                          },
                          "src": "1445:64:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$630_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 687,
                        "nodeType": "ExpressionStatement",
                        "src": "1445:64:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 711,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1770:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1770:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 715,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1790:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$916",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$916",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          ],
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1782:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 713,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1782:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1782:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 717,
                        "name": "_ammount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "1797:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 708,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 668,
                        "src": "1751:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3574,
                      "src": "1751:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1751:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 719,
                  "nodeType": "ExpressionStatement",
                  "src": "1751:55:3"
                }
              ]
            },
            "documentation": {
              "id": 646,
              "nodeType": "StructuredDocumentation",
              "src": "822:314:3",
              "text": " @notice addCollateral must be called before issuing loan\n @param _ERC20Contract address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\n @param _ammount is the ammount to add as collateral\n @param _loanId is the loan ID to add collateral to"
            },
            "functionSelector": "c75cf245",
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_ERC20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "1164:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "_ammount",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "1188:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "_loanId",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "1206:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1163:59:3"
            },
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1231:0:3"
            },
            "scope": 916,
            "src": "1141:672:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 772,
              "nodeType": "Block",
              "src": "1981:386:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 728,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1999:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1999:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 730,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "2013:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 732,
                            "indexExpression": {
                              "id": 731,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "2024:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2013:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 934,
                          "src": "2013:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1999:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792074686520626f72726f7765722063616e20636f6c6c65637420636f6c6c61746572616c",
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2043:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                          "typeString": "literal_string \"only the borrower can collect collateral\""
                        },
                        "value": "only the borrower can collect collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                          "typeString": "literal_string \"only the borrower can collect collateral\""
                        }
                      ],
                      "id": 727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1991:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:95:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:95:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 740,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "2115:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 739,
                            "name": "isComplete",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1363,
                            "src": "2104:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2127:27:3",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 742,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 960,
                                "src": "2128:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 744,
                              "indexExpression": {
                                "id": 743,
                                "name": "_loanId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "2139:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2128:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "issued",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 930,
                            "src": "2128:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2104:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f616e206d7573742062652070616964206f6666206f72206e6f74207374617274656420746f20636f6c6c65637420636f6c6c61746572616c",
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2156:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                          "typeString": "literal_string \"loan must be paid off or not started to collect collateral\""
                        },
                        "value": "loan must be paid off or not started to collect collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                          "typeString": "literal_string \"loan must be paid off or not started to collect collateral\""
                        }
                      ],
                      "id": 738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2096:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:121:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:121:3"
                },
                {
                  "assignments": [
                    753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 753,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 772,
                      "src": "2227:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3593",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 752,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 751,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3593,
                          "src": "2227:6:3"
                        },
                        "referencedDeclaration": 3593,
                        "src": "2227:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 760,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 755,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "2249:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 757,
                          "indexExpression": {
                            "id": 756,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "2266:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2249:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$630_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Contract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 627,
                        "src": "2249:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 754,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "2242:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3593",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2227:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 764,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2314:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2314:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 766,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "2326:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 768,
                          "indexExpression": {
                            "id": 767,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "2343:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2326:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$630_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ammount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 629,
                        "src": "2326:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 761,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "2299:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3542,
                      "src": "2299:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:61:3"
                }
              ]
            },
            "documentation": {
              "id": 722,
              "nodeType": "StructuredDocumentation",
              "src": "1819:106:3",
              "text": " @notice return Collateral when the loan is complete \n @param _loanId is the loan ID"
            },
            "functionSelector": "44e02dbc",
            "id": 773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "_loanId",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "1956:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1956:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1955:17:3"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:3"
            },
            "scope": 916,
            "src": "1930:437:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1338
            ],
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "2753:1330:3",
              "statements": [
                {
                  "assignments": [
                    784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 784,
                      "mutability": "mutable",
                      "name": "erc1155",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "2763:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$2873",
                        "typeString": "contract IERC1155"
                      },
                      "typeName": {
                        "id": 783,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 782,
                          "name": "IERC1155",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2873,
                          "src": "2763:8:3"
                        },
                        "referencedDeclaration": 2873,
                        "src": "2763:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2873",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 788,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 786,
                        "name": "bondContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "2791:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 785,
                      "name": "IERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2873,
                      "src": "2782:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC1155_$2873_$",
                        "typeString": "type(contract IERC1155)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$2873",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2763:41:3"
                },
                {
                  "assignments": [
                    791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 791,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "2814:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3593",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 790,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 789,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3593,
                          "src": "2814:6:3"
                        },
                        "referencedDeclaration": 3593,
                        "src": "2814:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 798,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 793,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "2836:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 795,
                          "indexExpression": {
                            "id": 794,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "2847:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2836:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 796,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 932,
                        "src": "2836:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 792,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "2829:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2829:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3593",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2814:51:3"
                },
                {
                  "assignments": [
                    801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 801,
                      "mutability": "mutable",
                      "name": "col",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "2875:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3593",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 800,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 799,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3593,
                          "src": "2875:6:3"
                        },
                        "referencedDeclaration": 3593,
                        "src": "2875:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 808,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 803,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "2895:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 805,
                          "indexExpression": {
                            "id": 804,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "2912:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2895:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$630_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Contract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 627,
                        "src": "2895:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 802,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "2888:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2888:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3593",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2875:56:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 810,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "2949:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 812,
                          "indexExpression": {
                            "id": 811,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "2960:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2949:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 813,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issued",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "2949:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206c6f616e20686173206e6f74206265656e20697373756564207965742e20486f7720646f20796f75206576656e206861766520626f6e647320666f722069743f3f3f",
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2973:73:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        },
                        "value": "this loan has not been issued yet. How do you even have bonds for it???"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        }
                      ],
                      "id": 809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2941:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:106:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 820,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3082:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3082:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 824,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3102:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$916",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$916",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          ],
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3094:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 822,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3094:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3094:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 826,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "3109:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 827,
                        "name": "_amm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "3114:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3120:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 817,
                        "name": "erc1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "3057:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2873",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2856,
                      "src": "3057:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "3057:66:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 832,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "3215:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 831,
                        "name": "isDelinquent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1131,
                        "src": "3202:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3202:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 834,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "3223:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 836,
                          "indexExpression": {
                            "id": 835,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "3240:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3223:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$630_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ammount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 629,
                        "src": "3223:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3255:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3223:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3202:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 896,
                    "nodeType": "Block",
                    "src": "3683:209:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 884,
                            "name": "_amm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "3700:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 885,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 960,
                                "src": "3707:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 887,
                              "indexExpression": {
                                "id": 886,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "3718:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3707:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 888,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "awaitingCollection",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 952,
                            "src": "3707:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3700:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 895,
                        "nodeType": "IfStatement",
                        "src": "3697:185:3",
                        "trueBody": {
                          "id": 894,
                          "nodeType": "Block",
                          "src": "3742:140:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "54686520616d6d6f756e7420796f75722061726520747279696e6720746f20636f6c6c656374206973206e6f7420617661696c61626c652e20416e642f4f72207468657265206973206e6f20636f6c6c61746572616c20746f20636f6c6c656374",
                                    "id": 891,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3767:99:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_846cc0b1aafc73139d8ddf10bd5c5eb839730e911733144a6446ec920579faed",
                                      "typeString": "literal_string \"The ammount your are trying to collect is not available. And/Or there is no collateral to collect\""
                                    },
                                    "value": "The ammount your are trying to collect is not available. And/Or there is no collateral to collect"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_846cc0b1aafc73139d8ddf10bd5c5eb839730e911733144a6446ec920579faed",
                                      "typeString": "literal_string \"The ammount your are trying to collect is not available. And/Or there is no collateral to collect\""
                                    }
                                  ],
                                  "id": 890,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967277,
                                    4294967277
                                  ],
                                  "referencedDeclaration": 4294967277,
                                  "src": "3760:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3760:107:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 893,
                              "nodeType": "ExpressionStatement",
                              "src": "3760:107:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 897,
                  "nodeType": "IfStatement",
                  "src": "3199:693:3",
                  "trueBody": {
                    "id": 883,
                    "nodeType": "Block",
                    "src": "3257:422:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 841,
                                "name": "collateralLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 635,
                                "src": "3371:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                }
                              },
                              "id": 843,
                              "indexExpression": {
                                "id": 842,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "3388:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3371:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateral_$630_storage",
                                "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                              }
                            },
                            "id": 844,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ammount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 629,
                            "src": "3371:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 845,
                            "name": "_amm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "3403:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3371:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 881,
                          "nodeType": "Block",
                          "src": "3551:118:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 866,
                                      "name": "collateralLookup",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 635,
                                      "src": "3569:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                        "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                      }
                                    },
                                    "id": 868,
                                    "indexExpression": {
                                      "id": 867,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 776,
                                      "src": "3586:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3569:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_collateral_$630_storage",
                                      "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                    }
                                  },
                                  "id": 869,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ammount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 629,
                                  "src": "3569:29:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 870,
                                  "name": "_amm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 778,
                                  "src": "3602:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3569:37:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 872,
                              "nodeType": "ExpressionStatement",
                              "src": "3569:37:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 876,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3637:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 877,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3637:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 878,
                                    "name": "_amm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 778,
                                    "src": "3649:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 873,
                                    "name": "col",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 801,
                                    "src": "3624:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$3593",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 875,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3542,
                                  "src": "3624:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3624:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 880,
                              "nodeType": "ExpressionStatement",
                              "src": "3624:30:3"
                            }
                          ]
                        },
                        "id": 882,
                        "nodeType": "IfStatement",
                        "src": "3368:301:3",
                        "trueBody": {
                          "id": 865,
                          "nodeType": "Block",
                          "src": "3408:139:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 847,
                                      "name": "collateralLookup",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 635,
                                      "src": "3426:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                        "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                      }
                                    },
                                    "id": 849,
                                    "indexExpression": {
                                      "id": 848,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 776,
                                      "src": "3443:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3426:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_collateral_$630_storage",
                                      "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                    }
                                  },
                                  "id": 850,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ammount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 629,
                                  "src": "3426:29:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3458:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3426:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 853,
                              "nodeType": "ExpressionStatement",
                              "src": "3426:33:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 857,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3490:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 858,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3490:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 859,
                                        "name": "collateralLookup",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 635,
                                        "src": "3502:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                          "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                        }
                                      },
                                      "id": 861,
                                      "indexExpression": {
                                        "id": 860,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 776,
                                        "src": "3519:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3502:21:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateral_$630_storage",
                                        "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                      }
                                    },
                                    "id": 862,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ammount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 629,
                                    "src": "3502:29:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 854,
                                    "name": "col",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 801,
                                    "src": "3477:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$3593",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3542,
                                  "src": "3477:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3477:55:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 864,
                              "nodeType": "ExpressionStatement",
                              "src": "3477:55:3"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 898,
                      "name": "_amm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "3976:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 899,
                          "name": "loanLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "3984:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                          }
                        },
                        "id": 901,
                        "indexExpression": {
                          "id": 900,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "3995:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3984:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage",
                          "typeString": "struct ERC20PaymentStandard.loan storage ref"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "awaitingCollection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 952,
                      "src": "3984:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3976:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 913,
                  "nodeType": "IfStatement",
                  "src": "3973:103:3",
                  "trueBody": {
                    "id": 912,
                    "nodeType": "Block",
                    "src": "4019:57:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 907,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4048:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4048:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 909,
                              "name": "_amm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "4060:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 904,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "4033:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3593",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3542,
                            "src": "4033:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4033:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 911,
                        "nodeType": "ExpressionStatement",
                        "src": "4033:32:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 774,
              "nodeType": "StructuredDocumentation",
              "src": "2373:312:3",
              "text": " @notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\n However that was not a good idea as a hacker could create fake bonds.\n @param _id is the id of the bond to send in\n @param _amm is the ammount to send"
            },
            "functionSelector": "a97868be",
            "id": 915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawl",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 780,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2745:8:3"
            },
            "parameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "2709:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2709:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "_amm",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "2722:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2722:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2708:27:3"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2753:0:3"
            },
            "scope": 916,
            "src": "2690:1393:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 917,
        "src": "342:3743:3"
      }
    ],
    "src": "34:4051:3"
  },
  "legacyAST": {
    "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol",
    "exportedSymbols": {
      "ERC1155Holder": [
        2980
      ],
      "ERC1155Receiver": [
        3014
      ],
      "ERC165": [
        3936
      ],
      "ERC20CollateralPayment": [
        916
      ],
      "ERC20PaymentStandard": [
        1394
      ],
      "IERC1155": [
        2873
      ],
      "IERC1155Receiver": [
        2914
      ],
      "IERC165": [
        3948
      ],
      "IERC20": [
        3593
      ]
    },
    "id": 917,
    "license": "None",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 619,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:3"
      },
      {
        "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol",
        "file": "./ERC20PaymentStandard.sol",
        "id": 620,
        "nodeType": "ImportDirective",
        "scope": 917,
        "sourceUnit": 1395,
        "src": "59:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 622,
        "nodeType": "ImportDirective",
        "scope": 917,
        "sourceUnit": 3594,
        "src": "96:70:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 621,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "104:6:3",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 624,
              "name": "ERC20PaymentStandard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1394,
              "src": "377:20:3"
            },
            "id": 625,
            "nodeType": "InheritanceSpecifier",
            "src": "377:20:3"
          }
        ],
        "contractDependencies": [
          1394,
          2914,
          2980,
          3014,
          3936,
          3948
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 623,
          "nodeType": "StructuredDocumentation",
          "src": "168:173:3",
          "text": " @title ERC20CollateralPayment\n @author Carson Case\n @notice this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added"
        },
        "fullyImplemented": true,
        "id": 916,
        "linearizedBaseContracts": [
          916,
          1394,
          2980,
          3014,
          2914,
          3936,
          3948
        ],
        "name": "ERC20CollateralPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC20CollateralPayment.collateral",
            "id": 630,
            "members": [
              {
                "constant": false,
                "id": 627,
                "mutability": "mutable",
                "name": "ERC20Contract",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "497:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 626,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "497:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 629,
                "mutability": "mutable",
                "name": "ammount",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "528:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 628,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "collateral",
            "nodeType": "StructDefinition",
            "scope": 916,
            "src": "470:80:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "444da0c9",
            "id": 635,
            "mutability": "mutable",
            "name": "collateralLookup",
            "nodeType": "VariableDeclaration",
            "scope": 916,
            "src": "555:54:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral)"
            },
            "typeName": {
              "id": 634,
              "keyType": {
                "id": 631,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "563:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "555:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral)"
              },
              "valueType": {
                "id": 633,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 632,
                  "name": "collateral",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 630,
                  "src": "574:10:3"
                },
                "referencedDeclaration": 630,
                "src": "574:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_collateral_$630_storage_ptr",
                  "typeString": "struct ERC20CollateralPayment.collateral"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 644,
              "nodeType": "Block",
              "src": "814:2:3",
              "statements": []
            },
            "documentation": {
              "id": 636,
              "nodeType": "StructuredDocumentation",
              "src": "616:137:3",
              "text": " @notice constructor just runs the ERC20PaymentStandard constructor\n @param _bonds is the contract address of bonds"
            },
            "id": 645,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 641,
                    "name": "_bonds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 638,
                    "src": "807:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 642,
                "modifierName": {
                  "id": 640,
                  "name": "ERC20PaymentStandard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1394,
                  "src": "786:20:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "786:28:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "_bonds",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "770:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:16:3"
            },
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:3"
            },
            "scope": 916,
            "src": "758:58:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "1231:582:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 656,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "1249:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 658,
                            "indexExpression": {
                              "id": 657,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 652,
                              "src": "1260:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1249:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 934,
                          "src": "1249:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 660,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1281:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1281:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1249:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792074686520626f72726f7765722063616e2061646420636f6c6c61746572616c",
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1293:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                          "typeString": "literal_string \"only the borrower can add collateral\""
                        },
                        "value": "only the borrower can add collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                          "typeString": "literal_string \"only the borrower can add collateral\""
                        }
                      ],
                      "id": 655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1241:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1241:91:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:91:3"
                },
                {
                  "assignments": [
                    668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 668,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 720,
                      "src": "1342:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3593",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 667,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 666,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3593,
                          "src": "1342:6:3"
                        },
                        "referencedDeclaration": 3593,
                        "src": "1342:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 672,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 670,
                        "name": "_ERC20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "1364:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 669,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "1357:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3593",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1342:37:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 673,
                          "name": "collateralLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 635,
                          "src": "1392:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                          }
                        },
                        "id": 675,
                        "indexExpression": {
                          "id": 674,
                          "name": "_loanId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 652,
                          "src": "1409:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1392:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateral_$630_storage",
                          "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ammount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 629,
                      "src": "1392:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1429:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1392:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 706,
                    "nodeType": "Block",
                    "src": "1524:218:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 690,
                                "name": "_ERC20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 648,
                                "src": "1546:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 691,
                                    "name": "collateralLookup",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 635,
                                    "src": "1564:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                      "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                    }
                                  },
                                  "id": 693,
                                  "indexExpression": {
                                    "id": 692,
                                    "name": "_loanId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 652,
                                    "src": "1581:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1564:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_collateral_$630_storage",
                                    "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                  }
                                },
                                "id": 694,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ERC20Contract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 627,
                                "src": "1564:39:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1546:57:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5768656e20696e6372656173696e6720636f6c6c61746572616c2c20796f75206d75737420757365207468652073616d65204552433230206164647265737320",
                              "id": 696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1605:66:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                                "typeString": "literal_string \"When increasing collateral, you must use the same ERC20 address \""
                              },
                              "value": "When increasing collateral, you must use the same ERC20 address "
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                                "typeString": "literal_string \"When increasing collateral, you must use the same ERC20 address \""
                              }
                            ],
                            "id": 689,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1538:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1538:134:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 698,
                        "nodeType": "ExpressionStatement",
                        "src": "1538:134:3"
                      },
                      {
                        "expression": {
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 699,
                                "name": "collateralLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 635,
                                "src": "1686:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                }
                              },
                              "id": 701,
                              "indexExpression": {
                                "id": 700,
                                "name": "_loanId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 652,
                                "src": "1703:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1686:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateral_$630_storage",
                                "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                              }
                            },
                            "id": 702,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ammount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 629,
                            "src": "1686:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 703,
                            "name": "_ammount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "1723:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1686:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 705,
                        "nodeType": "ExpressionStatement",
                        "src": "1686:45:3"
                      }
                    ]
                  },
                  "id": 707,
                  "nodeType": "IfStatement",
                  "src": "1389:353:3",
                  "trueBody": {
                    "id": 688,
                    "nodeType": "Block",
                    "src": "1431:89:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 679,
                              "name": "collateralLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "1445:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                              }
                            },
                            "id": 681,
                            "indexExpression": {
                              "id": 680,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 652,
                              "src": "1462:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1445:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateral_$630_storage",
                              "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 683,
                                "name": "_ERC20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 648,
                                "src": "1484:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 684,
                                "name": "_ammount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 650,
                                "src": "1500:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 682,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 630,
                              "src": "1473:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_collateral_$630_storage_ptr_$",
                                "typeString": "type(struct ERC20CollateralPayment.collateral storage pointer)"
                              }
                            },
                            "id": 685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1473:36:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateral_$630_memory_ptr",
                              "typeString": "struct ERC20CollateralPayment.collateral memory"
                            }
                          },
                          "src": "1445:64:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$630_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 687,
                        "nodeType": "ExpressionStatement",
                        "src": "1445:64:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 711,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1770:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1770:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 715,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1790:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$916",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$916",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          ],
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1782:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 713,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1782:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1782:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 717,
                        "name": "_ammount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "1797:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 708,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 668,
                        "src": "1751:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3574,
                      "src": "1751:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1751:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 719,
                  "nodeType": "ExpressionStatement",
                  "src": "1751:55:3"
                }
              ]
            },
            "documentation": {
              "id": 646,
              "nodeType": "StructuredDocumentation",
              "src": "822:314:3",
              "text": " @notice addCollateral must be called before issuing loan\n @param _ERC20Contract address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\n @param _ammount is the ammount to add as collateral\n @param _loanId is the loan ID to add collateral to"
            },
            "functionSelector": "c75cf245",
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_ERC20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "1164:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "_ammount",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "1188:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "_loanId",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "1206:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1163:59:3"
            },
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1231:0:3"
            },
            "scope": 916,
            "src": "1141:672:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 772,
              "nodeType": "Block",
              "src": "1981:386:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 728,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1999:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1999:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 730,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "2013:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 732,
                            "indexExpression": {
                              "id": 731,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "2024:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2013:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 934,
                          "src": "2013:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1999:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792074686520626f72726f7765722063616e20636f6c6c65637420636f6c6c61746572616c",
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2043:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                          "typeString": "literal_string \"only the borrower can collect collateral\""
                        },
                        "value": "only the borrower can collect collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                          "typeString": "literal_string \"only the borrower can collect collateral\""
                        }
                      ],
                      "id": 727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1991:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:95:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:95:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 740,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "2115:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 739,
                            "name": "isComplete",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1363,
                            "src": "2104:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2127:27:3",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 742,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 960,
                                "src": "2128:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 744,
                              "indexExpression": {
                                "id": 743,
                                "name": "_loanId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "2139:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2128:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "issued",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 930,
                            "src": "2128:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2104:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f616e206d7573742062652070616964206f6666206f72206e6f74207374617274656420746f20636f6c6c65637420636f6c6c61746572616c",
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2156:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                          "typeString": "literal_string \"loan must be paid off or not started to collect collateral\""
                        },
                        "value": "loan must be paid off or not started to collect collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                          "typeString": "literal_string \"loan must be paid off or not started to collect collateral\""
                        }
                      ],
                      "id": 738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2096:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:121:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:121:3"
                },
                {
                  "assignments": [
                    753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 753,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 772,
                      "src": "2227:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3593",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 752,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 751,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3593,
                          "src": "2227:6:3"
                        },
                        "referencedDeclaration": 3593,
                        "src": "2227:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 760,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 755,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "2249:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 757,
                          "indexExpression": {
                            "id": 756,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "2266:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2249:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$630_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Contract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 627,
                        "src": "2249:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 754,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "2242:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3593",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2227:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 764,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2314:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2314:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 766,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "2326:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 768,
                          "indexExpression": {
                            "id": 767,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "2343:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2326:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$630_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ammount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 629,
                        "src": "2326:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 761,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "2299:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3542,
                      "src": "2299:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:61:3"
                }
              ]
            },
            "documentation": {
              "id": 722,
              "nodeType": "StructuredDocumentation",
              "src": "1819:106:3",
              "text": " @notice return Collateral when the loan is complete \n @param _loanId is the loan ID"
            },
            "functionSelector": "44e02dbc",
            "id": 773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "_loanId",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "1956:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1956:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1955:17:3"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:3"
            },
            "scope": 916,
            "src": "1930:437:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1338
            ],
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "2753:1330:3",
              "statements": [
                {
                  "assignments": [
                    784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 784,
                      "mutability": "mutable",
                      "name": "erc1155",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "2763:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$2873",
                        "typeString": "contract IERC1155"
                      },
                      "typeName": {
                        "id": 783,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 782,
                          "name": "IERC1155",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2873,
                          "src": "2763:8:3"
                        },
                        "referencedDeclaration": 2873,
                        "src": "2763:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2873",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 788,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 786,
                        "name": "bondContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "2791:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 785,
                      "name": "IERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2873,
                      "src": "2782:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC1155_$2873_$",
                        "typeString": "type(contract IERC1155)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$2873",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2763:41:3"
                },
                {
                  "assignments": [
                    791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 791,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "2814:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3593",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 790,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 789,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3593,
                          "src": "2814:6:3"
                        },
                        "referencedDeclaration": 3593,
                        "src": "2814:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 798,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 793,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "2836:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 795,
                          "indexExpression": {
                            "id": 794,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "2847:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2836:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 796,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 932,
                        "src": "2836:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 792,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "2829:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2829:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3593",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2814:51:3"
                },
                {
                  "assignments": [
                    801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 801,
                      "mutability": "mutable",
                      "name": "col",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "2875:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3593",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 800,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 799,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3593,
                          "src": "2875:6:3"
                        },
                        "referencedDeclaration": 3593,
                        "src": "2875:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 808,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 803,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "2895:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 805,
                          "indexExpression": {
                            "id": 804,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "2912:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2895:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$630_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Contract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 627,
                        "src": "2895:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 802,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "2888:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2888:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3593",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2875:56:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 810,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "2949:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 812,
                          "indexExpression": {
                            "id": 811,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "2960:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2949:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 813,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issued",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "2949:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206c6f616e20686173206e6f74206265656e20697373756564207965742e20486f7720646f20796f75206576656e206861766520626f6e647320666f722069743f3f3f",
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2973:73:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        },
                        "value": "this loan has not been issued yet. How do you even have bonds for it???"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        }
                      ],
                      "id": 809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2941:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:106:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 820,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3082:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3082:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 824,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3102:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$916",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$916",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          ],
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3094:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 822,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3094:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3094:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 826,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "3109:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 827,
                        "name": "_amm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "3114:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3120:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 817,
                        "name": "erc1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "3057:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2873",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2856,
                      "src": "3057:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "3057:66:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 832,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "3215:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 831,
                        "name": "isDelinquent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1131,
                        "src": "3202:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3202:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 834,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "3223:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 836,
                          "indexExpression": {
                            "id": 835,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "3240:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3223:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$630_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ammount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 629,
                        "src": "3223:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3255:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3223:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3202:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 896,
                    "nodeType": "Block",
                    "src": "3683:209:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 884,
                            "name": "_amm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "3700:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 885,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 960,
                                "src": "3707:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 887,
                              "indexExpression": {
                                "id": 886,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "3718:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3707:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 888,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "awaitingCollection",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 952,
                            "src": "3707:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3700:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 895,
                        "nodeType": "IfStatement",
                        "src": "3697:185:3",
                        "trueBody": {
                          "id": 894,
                          "nodeType": "Block",
                          "src": "3742:140:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "54686520616d6d6f756e7420796f75722061726520747279696e6720746f20636f6c6c656374206973206e6f7420617661696c61626c652e20416e642f4f72207468657265206973206e6f20636f6c6c61746572616c20746f20636f6c6c656374",
                                    "id": 891,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3767:99:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_846cc0b1aafc73139d8ddf10bd5c5eb839730e911733144a6446ec920579faed",
                                      "typeString": "literal_string \"The ammount your are trying to collect is not available. And/Or there is no collateral to collect\""
                                    },
                                    "value": "The ammount your are trying to collect is not available. And/Or there is no collateral to collect"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_846cc0b1aafc73139d8ddf10bd5c5eb839730e911733144a6446ec920579faed",
                                      "typeString": "literal_string \"The ammount your are trying to collect is not available. And/Or there is no collateral to collect\""
                                    }
                                  ],
                                  "id": 890,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967277,
                                    4294967277
                                  ],
                                  "referencedDeclaration": 4294967277,
                                  "src": "3760:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3760:107:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 893,
                              "nodeType": "ExpressionStatement",
                              "src": "3760:107:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 897,
                  "nodeType": "IfStatement",
                  "src": "3199:693:3",
                  "trueBody": {
                    "id": 883,
                    "nodeType": "Block",
                    "src": "3257:422:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 841,
                                "name": "collateralLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 635,
                                "src": "3371:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                }
                              },
                              "id": 843,
                              "indexExpression": {
                                "id": 842,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "3388:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3371:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateral_$630_storage",
                                "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                              }
                            },
                            "id": 844,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ammount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 629,
                            "src": "3371:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 845,
                            "name": "_amm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "3403:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3371:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 881,
                          "nodeType": "Block",
                          "src": "3551:118:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 866,
                                      "name": "collateralLookup",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 635,
                                      "src": "3569:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                        "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                      }
                                    },
                                    "id": 868,
                                    "indexExpression": {
                                      "id": 867,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 776,
                                      "src": "3586:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3569:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_collateral_$630_storage",
                                      "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                    }
                                  },
                                  "id": 869,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ammount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 629,
                                  "src": "3569:29:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 870,
                                  "name": "_amm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 778,
                                  "src": "3602:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3569:37:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 872,
                              "nodeType": "ExpressionStatement",
                              "src": "3569:37:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 876,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3637:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 877,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3637:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 878,
                                    "name": "_amm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 778,
                                    "src": "3649:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 873,
                                    "name": "col",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 801,
                                    "src": "3624:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$3593",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 875,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3542,
                                  "src": "3624:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3624:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 880,
                              "nodeType": "ExpressionStatement",
                              "src": "3624:30:3"
                            }
                          ]
                        },
                        "id": 882,
                        "nodeType": "IfStatement",
                        "src": "3368:301:3",
                        "trueBody": {
                          "id": 865,
                          "nodeType": "Block",
                          "src": "3408:139:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 847,
                                      "name": "collateralLookup",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 635,
                                      "src": "3426:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                        "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                      }
                                    },
                                    "id": 849,
                                    "indexExpression": {
                                      "id": 848,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 776,
                                      "src": "3443:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3426:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_collateral_$630_storage",
                                      "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                    }
                                  },
                                  "id": 850,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ammount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 629,
                                  "src": "3426:29:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3458:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3426:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 853,
                              "nodeType": "ExpressionStatement",
                              "src": "3426:33:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 857,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3490:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 858,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3490:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 859,
                                        "name": "collateralLookup",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 635,
                                        "src": "3502:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$630_storage_$",
                                          "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                        }
                                      },
                                      "id": 861,
                                      "indexExpression": {
                                        "id": 860,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 776,
                                        "src": "3519:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3502:21:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateral_$630_storage",
                                        "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                      }
                                    },
                                    "id": 862,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ammount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 629,
                                    "src": "3502:29:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 854,
                                    "name": "col",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 801,
                                    "src": "3477:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$3593",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3542,
                                  "src": "3477:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3477:55:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 864,
                              "nodeType": "ExpressionStatement",
                              "src": "3477:55:3"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 898,
                      "name": "_amm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "3976:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 899,
                          "name": "loanLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "3984:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                          }
                        },
                        "id": 901,
                        "indexExpression": {
                          "id": 900,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "3995:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3984:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage",
                          "typeString": "struct ERC20PaymentStandard.loan storage ref"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "awaitingCollection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 952,
                      "src": "3984:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3976:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 913,
                  "nodeType": "IfStatement",
                  "src": "3973:103:3",
                  "trueBody": {
                    "id": 912,
                    "nodeType": "Block",
                    "src": "4019:57:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 907,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4048:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4048:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 909,
                              "name": "_amm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "4060:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 904,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "4033:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3593",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3542,
                            "src": "4033:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4033:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 911,
                        "nodeType": "ExpressionStatement",
                        "src": "4033:32:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 774,
              "nodeType": "StructuredDocumentation",
              "src": "2373:312:3",
              "text": " @notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\n However that was not a good idea as a hacker could create fake bonds.\n @param _id is the id of the bond to send in\n @param _amm is the ammount to send"
            },
            "functionSelector": "a97868be",
            "id": 915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawl",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 780,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2745:8:3"
            },
            "parameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "2709:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2709:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "_amm",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "2722:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2722:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2708:27:3"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2753:0:3"
            },
            "scope": 916,
            "src": "2690:1393:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 917,
        "src": "342:3743:3"
      }
    ],
    "src": "34:4051:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0x02389Ab38C7E14d153DAd4be7F570cEfa9DB4DB9",
      "transactionHash": "0xd09df55ea9e09eaf666d5b983251d9b21921e12473bbb4b0ba4aefc3dce323b9"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9838BDD4849278e2dF76a7CE907b5cb9690Af7F7",
      "transactionHash": "0x0422dcf8c53e009f10e5898c4cd0fca3e2588b807a53c9e340ae6a57049e2830"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-11T02:13:49.152Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Carson Case",
    "kind": "dev",
    "methods": {
      "addCollateral(address,uint256,uint256)": {
        "params": {
          "_ERC20Contract": "address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20",
          "_ammount": "is the ammount to add as collateral",
          "_loanId": "is the loan ID to add collateral to"
        }
      },
      "addInterest(uint256,uint256)": {
        "params": {
          "_amm": "the ammount of interest to add",
          "_id": "is the id of the loan"
        },
        "returns": {
          "_0": "true if added. Will not add interest if payment has been completed. This prevents lenders from refusing to end a loan when it is rightfully over by forever increasing the totalPaymentsValue through interest staking and never fully collecting payment. This also means that if lenders do not realize interest gains soon enough they may not be able to collect them before the borrower can complete the loan."
        }
      },
      "configureNew(address,address,uint256,uint256,uint256,uint256,uint256)": {
        "details": "borrower is msg.sender for testing. In production might want to make this a param",
        "params": {
          "_accrualPeriod": "the time it takes for interest to accrue in seconds",
          "_borrower": "is the borrower loan is being configured for. Keep in mind. ONLY this borrower can mint bonds to start the loan",
          "_erc20": "is the ERC20 contract address that will be used for payments",
          "_inverseInterestRate": "the interest rate expressed as inverse. 2% = 1/5 = inverse of 5",
          "_minPayment": "is the minimum payment that must be made before the payment period ends",
          "_paymentPeriod": "payment must be made by this time or delinquent function will return true",
          "_principal": "the origional loan value before interest"
        },
        "returns": {
          "_0": "the id it just created"
        }
      },
      "constructor": {
        "params": {
          "_bonds": "is the contract address of bonds"
        }
      },
      "getId(address,uint256)": {
        "params": {
          "_borrower": "is borrower",
          "_index": "is the index in the borrowers loan array"
        },
        "returns": {
          "_0": "the loan ID"
        }
      },
      "getInterest(uint256)": {
        "params": {
          "_id": "is the loan ID"
        },
        "returns": {
          "_0": "inverse interest rate"
        }
      },
      "getNumberOfLoans(address)": {
        "params": {
          "_who": "is who to look up"
        },
        "returns": {
          "_0": "length"
        }
      },
      "isComplete(uint256)": {
        "params": {
          "_id": "of loan to check"
        },
        "returns": {
          "_0": "return if the contract is payed off or not as bool"
        }
      },
      "isDelinquent(uint256)": {
        "params": {
          "_id": "is the hash id of the loan. Same as bond ERC1155 ID as well"
        },
        "returns": {
          "_0": "if delinquent or not. Meaning missed a payment"
        }
      },
      "issueBonds(uint256)": {
        "params": {
          "_id": "loan ID"
        },
        "returns": {
          "_0": "the loan principal (so bonds knows how many NFTs to mint)",
          "_1": "the borrowers address (so bonds can make sure borrower is calling this function)"
        }
      },
      "payment(uint256,uint256)": {
        "params": {
          "_erc20Ammount": "is ammount in loan's ERC20 to pay",
          "_id": "to pay off"
        }
      },
      "returnCollateral(uint256)": {
        "params": {
          "_loanId": "is the loan ID"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "withdrawl(uint256,uint256)": {
        "params": {
          "_amm": "is the ammount to send",
          "_id": "is the id of the bond to send in"
        }
      }
    },
    "title": "ERC20CollateralPayment",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addCollateral(address,uint256,uint256)": {
        "notice": "addCollateral must be called before issuing loan"
      },
      "addInterest(uint256,uint256)": {
        "notice": "Called each time new NFTs are minted by staking"
      },
      "configureNew(address,address,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "contract must be configured before bonds are issued. Pushes new loan to array for user"
      },
      "constructor": {
        "notice": "constructor just runs the ERC20PaymentStandard constructor"
      },
      "getId(address,uint256)": {
        "notice": "Returns the ID for a loan given the borrower and index in the array"
      },
      "getInterest(uint256)": {
        "notice": "get the interest rate of a loan. Makes it easy for other contract since it doens't have to parse struct"
      },
      "getNumberOfLoans(address)": {
        "notice": "gets the number of loans a person has"
      },
      "isComplete(uint256)": {
        "notice": "helper function"
      },
      "isDelinquent(uint256)": {
        "notice": "This contract is not very forgiving. Miss one payment and you're marked as delinquent. Unless contract is complete"
      },
      "issueBonds(uint256)": {
        "notice": "called when bonds are issued so as to make sure lender can only mint bonds once."
      },
      "payment(uint256,uint256)": {
        "notice": "function handles the payment of the loan. Does not have to be borrower as payment comes in. The contract holds it until collection by bond owners. MUST APPROVE FIRST in ERC20 contract first"
      },
      "returnCollateral(uint256)": {
        "notice": "return Collateral when the loan is complete "
      },
      "withdrawl(uint256,uint256)": {
        "notice": "MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function. However that was not a good idea as a hacker could create fake bonds."
      }
    },
    "notice": "this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added",
    "version": 1
  }
}
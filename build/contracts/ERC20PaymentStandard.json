{
  "contractName": "ERC20PaymentStandard",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bonds",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "bondContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanIDs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanLookup",
      "outputs": [
        {
          "internalType": "bool",
          "name": "issued",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "ERC20Address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "paymentPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paymentDueDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRateInverse",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accrualPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalPaymentsValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "awaitingCollection",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paymentComplete",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        }
      ],
      "name": "getNumberOfLoans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "issueBonds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amm",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "addInterest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "isDelinquent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_paymentPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_inverseInterestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_accrualPeriod",
          "type": "uint256"
        }
      ],
      "name": "configureNew",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_erc20Ammount",
          "type": "uint256"
        }
      ],
      "name": "payment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amm",
          "type": "uint256"
        }
      ],
      "name": "withdrawl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "isComplete",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bonds\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"addInterest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_paymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_inverseInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_accrualPeriod\",\"type\":\"uint256\"}],\"name\":\"configureNew\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"getNumberOfLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isDelinquent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"issueBonds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanIDs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanLookup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"issued\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"paymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentDueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateInverse\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accrualPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPaymentsValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"awaitingCollection\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentComplete\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_erc20Ammount\",\"type\":\"uint256\"}],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amm\",\"type\":\"uint256\"}],\"name\":\"withdrawl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Carson Case\",\"kind\":\"dev\",\"methods\":{\"addInterest(uint256,uint256)\":{\"params\":{\"_amm\":\"the ammount of interest to add\",\"_id\":\"is the id of the loan\"},\"returns\":{\"_0\":\"true if added. Will not add interest if payment has been completed. This prevents lenders from refusing to end a loan when it is rightfully over by forever increasing the totalPaymentsValue through interest staking and never fully collecting payment. This also means that if lenders do not realize interest gains soon enough they may not be able to collect them before the borrower can complete the loan.\"}},\"configureNew(address,address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"borrower is msg.sender for testing. In production might want to make this a param\",\"params\":{\"_accrualPeriod\":\"the time it takes for interest to accrue in seconds\",\"_borrower\":\"is the borrower loan is being configured for. Keep in mind. ONLY this borrower can mint bonds to start the loan\",\"_erc20\":\"is the ERC20 contract address that will be used for payments\",\"_inverseInterestRate\":\"the interest rate expressed as inverse. 2% = 1/5 = inverse of 5\",\"_minPayment\":\"is the minimum payment that must be made before the payment period ends\",\"_paymentPeriod\":\"payment must be made by this time or delinquent function will return true\",\"_principal\":\"the origional loan value before interest\"},\"returns\":{\"_0\":\"the id it just created\"}},\"constructor\":{\"params\":{\"_bonds\":\"contract\"}},\"getId(address,uint256)\":{\"params\":{\"_borrower\":\"is borrower\",\"_index\":\"is the index in the borrowers loan array\"},\"returns\":{\"_0\":\"the loan ID\"}},\"getInterest(uint256)\":{\"params\":{\"_id\":\"is the loan ID\"},\"returns\":{\"_0\":\"inverse interest rate\"}},\"getNumberOfLoans(address)\":{\"params\":{\"_who\":\"is who to look up\"},\"returns\":{\"_0\":\"length\"}},\"isComplete(uint256)\":{\"params\":{\"_id\":\"of loan to check\"},\"returns\":{\"_0\":\"return if the contract is payed off or not as bool\"}},\"isDelinquent(uint256)\":{\"params\":{\"_id\":\"is the hash id of the loan. Same as bond ERC1155 ID as well\"},\"returns\":{\"_0\":\"if delinquent or not. Meaning missed a payment\"}},\"issueBonds(uint256)\":{\"params\":{\"_id\":\"loan ID\"},\"returns\":{\"_0\":\"the loan principal (so bonds knows how many NFTs to mint)\",\"_1\":\"the borrowers address (so bonds can make sure borrower is calling this function)\"}},\"payment(uint256,uint256)\":{\"params\":{\"_erc20Ammount\":\"is ammount in loan's ERC20 to pay\",\"_id\":\"to pay off\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"withdrawl(uint256,uint256)\":{\"params\":{\"_amm\":\"is the ammount to send\",\"_id\":\"is the id of the bond to send in\"}}},\"title\":\"ERC20PaymentStandard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addInterest(uint256,uint256)\":{\"notice\":\"Called each time new NFTs are minted by staking\"},\"configureNew(address,address,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"contract must be configured before bonds are issued. Pushes new loan to array for user\"},\"constructor\":{\"notice\":\"just sets bonds contract\"},\"getId(address,uint256)\":{\"notice\":\"Returns the ID for a loan given the borrower and index in the array\"},\"getInterest(uint256)\":{\"notice\":\"get the interest rate of a loan. Makes it easy for other contract since it doens't have to parse struct\"},\"getNumberOfLoans(address)\":{\"notice\":\"gets the number of loans a person has\"},\"isComplete(uint256)\":{\"notice\":\"helper function\"},\"isDelinquent(uint256)\":{\"notice\":\"This contract is not very forgiving. Miss one payment and you're marked as delinquent. Unless contract is complete\"},\"issueBonds(uint256)\":{\"notice\":\"called when bonds are issued so as to make sure lender can only mint bonds once.\"},\"payment(uint256,uint256)\":{\"notice\":\"function handles the payment of the loan. Does not have to be borrower as payment comes in. The contract holds it until collection by bond owners. MUST APPROVE FIRST in ERC20 contract first\"},\"withdrawl(uint256,uint256)\":{\"notice\":\"MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function. However that was not a good idea as a hacker could create fake bonds.\"}},\"notice\":\"This contract is a standard meant to be overriden that works with the Bonds contract to offer noncolateralized, flexable lending onchain\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol\":\"ERC20PaymentStandard\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol\":{\"keccak256\":\"0x95b2e78e8270c6087eb21ab3cfe827e181223cd901f64c0190d4689f8495e844\",\"license\":\"None\",\"urls\":[\"bzz-raw://44b3d5887eff3899b62d9445092804a8e0466c48ad0a068600e82ac48f39d846\",\"dweb:/ipfs/QmNXV8eGg7G3r7W2QpDNjuforgejC1Kt31yx5dNn2w2wUx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db9d720fadb1315ba64790815f9f1d80237cca584fc530b8906519bd46ff4cc\",\"dweb:/ipfs/QmXQSGPuGHG5e9ZRVbcUymP3B78cn6ZjfaiaEwd3P3yBCF\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc7aa8a96aaeb7e1672a3d5fd37582136ff46b6a6cafabcc40ec0e00a42915e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f294719963da5d6c0aa89f6e79eb6dbcbcc258a2f42686e735dbb0791593a761\",\"dweb:/ipfs/QmTnVcJfNe5728bUBhjMmBXJFDR1HwVQfw9jGmexbGmS7z\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2ccdc162657b677334eb08a60bb50a0dd74b22eff7150abb06487f58dbebd5e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fff47f23d2b9cfce4660566d3e5fa355959a6f3ba8c8394271addd9845a07d58\",\"dweb:/ipfs/QmU6vHnARdZscV47wHaPRnzS3pqSKG3YoLbhMUbyAHxLda\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0xfb1161632a10d0bd366c80db583246fa490183b45ec4f59acb43b97d1a7437b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1b773c4f83eed25714e54f3ac4d7d5c43f70ba9adf7a0039870395280d57ab0\",\"dweb:/ipfs/QmeMWUj4afupT66btFmbXPWePdv1NAVbJuAGwb3YmDGjH5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:19",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:19",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:19"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:19"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:1:19",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "256:3:19",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:19",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:19"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:19"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:19",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:19",
                "type": ""
              }
            ],
            "src": "14:310:19"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12960:19",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:19",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:147:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:19"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:19"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "190:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "199:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "202:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "192:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "192:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "192:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "144:42:19",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:54:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:65:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:73:19"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:19"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:19",
                "type": ""
              }
            ],
            "src": "14:198:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "287:680:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "336:24:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "345:5:19"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "352:5:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "338:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "338:20:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "338:20:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "315:6:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "323:4:19",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "311:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "311:17:19"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "330:3:19"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "307:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "307:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "300:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "300:35:19"
                  },
                  "nodeType": "YulIf",
                  "src": "297:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "369:30:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "392:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "379:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "379:20:19"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "373:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "408:14:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "418:4:19",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "412:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "461:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "463:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "463:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "463:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "437:2:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "441:18:19",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "434:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:26:19"
                  },
                  "nodeType": "YulIf",
                  "src": "431:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "492:21:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "506:2:19"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "510:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:11:19"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "496:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "522:39:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "553:2:19"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "557:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:11:19"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "533:15:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "533:28:19"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "526:3:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "570:16:19",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "583:3:19"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "574:5:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "602:3:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "607:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "595:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "595:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "595:15:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "619:19:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "630:3:19"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "635:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "626:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "626:12:19"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "619:3:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "647:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "662:6:19"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "670:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "658:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "658:15:19"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "651:3:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "719:24:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "728:5:19"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "735:5:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "721:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "721:20:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "721:20:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "696:6:19"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "704:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "692:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "692:15:19"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "709:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:24:19"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "714:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "685:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "685:33:19"
                  },
                  "nodeType": "YulIf",
                  "src": "682:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "752:14:19",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "761:5:19"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "756:1:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "820:118:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "841:3:19"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "859:3:19"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "846:12:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "846:17:19"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "834:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "834:30:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "834:30:19"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "877:19:19",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "888:3:19"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "893:2:19"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "884:3:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "884:12:19"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "877:3:19"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "909:19:19",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "920:3:19"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "925:2:19"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "916:3:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "916:12:19"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "909:3:19"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "786:1:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "789:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "783:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "783:9:19"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "793:18:19",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "795:14:19",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "804:1:19"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "807:1:19",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "800:3:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "800:9:19"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "795:1:19"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "779:3:19",
                    "statements": []
                  },
                  "src": "775:163:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "947:14:19",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "956:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "947:5:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_array$_t_uint256_$dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "261:6:19",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "269:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "277:5:19",
                "type": ""
              }
            ],
            "src": "217:750:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1026:498:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1075:24:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1084:5:19"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1091:5:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1077:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1077:20:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1077:20:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1054:6:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1062:4:19",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1050:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1050:17:19"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1069:3:19"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1046:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1039:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1039:35:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1036:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1108:30:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1131:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1118:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1118:20:19"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1112:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1177:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1179:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1179:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1179:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1153:2:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1157:18:19",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1150:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1150:26:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1147:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1208:70:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1251:2:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1255:4:19",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1247:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1247:13:19"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1266:2:19",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1262:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1262:7:19"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1243:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1243:27:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1272:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1239:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1239:38:19"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1223:15:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:55:19"
                  },
                  "variables": [
                    {
                      "name": "array_1",
                      "nodeType": "YulTypedName",
                      "src": "1212:7:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array_1",
                        "nodeType": "YulIdentifier",
                        "src": "1294:7:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1303:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1287:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1287:19:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1287:19:19"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1354:24:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1363:5:19"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1370:5:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1356:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1356:20:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1356:20:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1329:6:19"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1337:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1325:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1325:15:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1342:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1321:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1321:26:19"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1349:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1318:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1318:35:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1315:2:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array_1",
                            "nodeType": "YulIdentifier",
                            "src": "1404:7:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1413:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1400:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1400:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1424:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1432:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1420:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1420:17:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1439:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1387:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:55:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1387:55:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array_1",
                                "nodeType": "YulIdentifier",
                                "src": "1466:7:19"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1475:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1462:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1462:16:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1480:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1458:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1458:27:19"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1487:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1451:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1451:42:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1451:42:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1502:16:19",
                  "value": {
                    "name": "array_1",
                    "nodeType": "YulIdentifier",
                    "src": "1511:7:19"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1502:5:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1000:6:19",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1008:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1016:5:19",
                "type": ""
              }
            ],
            "src": "972:552:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1599:128:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1645:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1654:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1662:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1647:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1647:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1647:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1620:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1629:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1616:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1616:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1641:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1612:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1612:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1609:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1680:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1711:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1690:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1690:31:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1680:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1565:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1576:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1588:6:19",
                "type": ""
              }
            ],
            "src": "1529:198:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1929:804:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1976:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1985:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1993:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1978:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1978:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1978:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1950:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1959:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1946:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1946:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1971:3:19",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1942:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:33:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1939:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2011:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2042:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2021:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:31:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2011:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2061:50:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2096:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2107:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2092:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2092:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2071:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2071:40:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2061:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2120:46:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2151:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2162:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2147:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2147:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2134:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2134:32:19"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2124:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2175:28:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2185:18:19",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2179:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2230:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2239:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2247:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2232:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2232:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2232:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2218:6:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2226:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2215:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2215:14:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2212:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2265:77:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2314:9:19"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2325:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2310:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2310:22:19"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2334:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "2275:34:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2275:67:19"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2265:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2351:48:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2384:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2395:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2380:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2380:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2367:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:32:19"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2355:8:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2428:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2437:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2445:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2430:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2430:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2430:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2414:8:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2424:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2411:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2411:16:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2408:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2463:79:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2512:9:19"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2523:8:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2508:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2508:24:19"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2534:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "2473:34:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2473:69:19"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2463:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2551:49:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2584:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2595:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2580:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2580:19:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2567:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2567:33:19"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "2555:8:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2629:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2638:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2646:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2631:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2631:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2631:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "2615:8:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2625:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2612:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2612:16:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2609:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2664:63:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2697:9:19"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "2708:8:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2693:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2693:24:19"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2719:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "2674:18:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2674:53:19"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2664:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1863:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1874:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1886:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1894:6:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1902:6:19",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1910:6:19",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1918:6:19",
                "type": ""
              }
            ],
            "src": "1732:1001:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2885:485:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2932:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2941:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2949:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2934:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2934:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2934:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2906:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2915:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2902:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2902:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2927:3:19",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2898:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2898:33:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2895:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2967:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2998:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2977:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2977:31:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2967:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3017:50:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3052:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3063:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3048:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3048:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3027:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3027:40:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3017:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3076:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3103:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3114:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3099:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3099:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3086:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3086:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3076:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3127:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3154:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3165:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3150:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3150:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3137:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3137:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3127:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3178:47:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3209:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3220:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3205:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3205:19:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3192:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3192:33:19"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3182:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3268:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3277:6:19"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3285:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3270:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3270:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3270:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3240:6:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3248:18:19",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3237:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3237:30:19"
                  },
                  "nodeType": "YulIf",
                  "src": "3234:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3303:61:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3336:9:19"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3347:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3332:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3332:22:19"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3356:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "3313:18:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3313:51:19"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3303:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2819:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2830:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2842:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2850:6:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2858:6:19",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2866:6:19",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2874:6:19",
                "type": ""
              }
            ],
            "src": "2738:632:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3547:446:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3594:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value5",
                              "nodeType": "YulIdentifier",
                              "src": "3603:6:19"
                            },
                            {
                              "name": "value5",
                              "nodeType": "YulIdentifier",
                              "src": "3611:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3596:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3596:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3596:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3568:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3577:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3564:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3564:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3589:3:19",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3560:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3560:33:19"
                  },
                  "nodeType": "YulIf",
                  "src": "3557:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3629:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3660:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3639:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3639:31:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3629:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3679:50:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3714:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3725:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3710:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3710:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3689:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3689:40:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3679:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3738:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3765:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3776:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3761:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3761:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3748:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3748:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3738:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3789:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3816:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3827:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3812:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3812:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3799:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3799:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3789:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3840:43:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3867:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3878:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3863:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3863:19:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3850:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3850:33:19"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3840:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3892:43:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3919:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3930:3:19",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3915:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3915:19:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3902:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3902:33:19"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "3892:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3944:43:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3971:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3982:3:19",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3967:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3967:19:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3954:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3954:33:19"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "3944:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3465:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3476:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3488:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3496:6:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3504:6:19",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3512:6:19",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3520:6:19",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3528:6:19",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "3536:6:19",
                "type": ""
              }
            ],
            "src": "3375:618:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4085:179:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4131:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4140:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4148:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4133:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4133:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4133:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4106:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4115:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4102:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4102:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4127:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4098:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4098:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4095:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4166:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4197:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4176:20:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4176:31:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4166:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4216:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4243:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4254:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4239:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4239:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4226:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4226:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4216:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4043:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4054:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4066:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4074:6:19",
                "type": ""
              }
            ],
            "src": "3998:266:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4347:219:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4393:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4402:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4410:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4395:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4395:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4395:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4368:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4377:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4364:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4364:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4389:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4360:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4360:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4357:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4428:29:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4447:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4441:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4441:16:19"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4432:5:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4510:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4519:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4527:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4512:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4512:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4512:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4479:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4500:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4493:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4493:13:19"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4486:6:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4486:21:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4476:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4476:32:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4469:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4469:40:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4466:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4545:15:19",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4555:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4545:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4313:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4324:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4336:6:19",
                "type": ""
              }
            ],
            "src": "4269:297:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4640:283:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4686:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4695:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4703:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4688:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4688:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4688:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4661:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4670:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4657:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4657:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4682:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4653:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4653:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4650:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4721:36:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4747:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4734:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4734:23:19"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4725:5:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4867:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4876:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4884:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4869:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4869:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4869:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4779:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4790:5:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4797:66:19",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4786:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4786:78:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4776:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4776:89:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4769:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4769:97:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4766:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4902:15:19",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4912:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4902:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4606:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4617:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4629:6:19",
                "type": ""
              }
            ],
            "src": "4571:352:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4998:120:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5044:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5053:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5061:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5046:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5046:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5046:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5019:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5028:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5015:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5015:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5040:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5011:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5011:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "5008:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5079:33:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5102:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5089:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5089:23:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5079:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4964:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4975:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4987:6:19",
                "type": ""
              }
            ],
            "src": "4928:190:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5210:171:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5256:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5265:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5273:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5258:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5258:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5258:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5231:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5240:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5227:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5227:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5252:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5223:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5223:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "5220:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5291:33:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5314:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5301:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5301:23:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5291:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5333:42:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5360:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5371:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5356:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5356:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5343:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5343:32:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5333:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5168:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5179:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5191:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5199:6:19",
                "type": ""
              }
            ],
            "src": "5123:258:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5561:281:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5571:38:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5581:28:19",
                    "type": "",
                    "value": "0x01000000000000000000000000"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5575:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5618:52:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5628:42:19",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "5622:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5686:3:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5699:6:19"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "5707:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5695:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5695:15:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5712:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "5691:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5691:24:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5679:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5679:37:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5679:37:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5736:3:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5741:2:19",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5732:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5732:12:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5754:6:19"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "5762:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5750:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5750:15:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5767:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "5746:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5746:24:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5725:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5725:46:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5725:46:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5791:3:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5796:2:19",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5787:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5787:12:19"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5801:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5780:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5780:28:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5780:28:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5817:19:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5828:3:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5833:2:19",
                        "type": "",
                        "value": "72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5824:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5824:12:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5817:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5521:3:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5526:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5534:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5542:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5553:3:19",
                "type": ""
              }
            ],
            "src": "5386:456:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5948:125:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5958:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5970:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5981:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5966:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5966:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5958:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6000:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6015:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6023:42:19",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6011:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6011:55:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5993:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5993:74:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5993:74:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5917:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5928:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5939:4:19",
                "type": ""
              }
            ],
            "src": "5847:226:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6235:241:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6245:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6257:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6268:2:19",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6253:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6253:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6245:4:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6280:52:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6290:42:19",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6284:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6348:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6363:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6371:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6359:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6359:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6341:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6341:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6341:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6395:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6406:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6391:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6391:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6415:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6423:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6411:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6411:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6384:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6384:43:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6384:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6447:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6458:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6443:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6443:18:19"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6463:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6436:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6436:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6436:34:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6188:9:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6199:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6207:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6215:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6226:4:19",
                "type": ""
              }
            ],
            "src": "6078:398:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6766:368:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6776:52:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6786:42:19",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6780:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6844:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6859:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6867:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6855:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6855:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6837:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6837:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6837:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6891:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6902:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6887:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6887:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6911:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6919:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6907:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6907:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6880:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6880:43:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6880:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6943:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6954:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6939:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6939:18:19"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6959:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6932:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6932:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6932:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6986:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6997:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6982:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6982:18:19"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7002:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6975:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6975:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6975:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7029:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7040:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7025:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7025:19:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7046:3:19",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7018:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7018:32:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7018:32:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7070:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7081:3:19",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7066:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7066:19:19"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7087:4:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7059:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7059:33:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7059:33:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7101:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7113:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7124:3:19",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7109:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7109:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7101:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6711:9:19",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6722:6:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6730:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6738:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6746:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6757:4:19",
                "type": ""
              }
            ],
            "src": "6481:653:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7268:168:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7278:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7290:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7301:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7286:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7286:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7278:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7320:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7335:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7343:42:19",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7331:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7331:55:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7313:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7313:74:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7313:74:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7407:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7418:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7403:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7403:18:19"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7423:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7396:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7396:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7396:34:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7229:9:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7240:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7248:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7259:4:19",
                "type": ""
              }
            ],
            "src": "7139:297:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7536:92:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7546:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7558:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7569:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7554:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7554:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7546:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7588:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7613:6:19"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7606:6:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7606:14:19"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7599:6:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7599:22:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7581:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7581:41:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7581:41:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7505:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7516:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7527:4:19",
                "type": ""
              }
            ],
            "src": "7441:187:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8067:700:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8077:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8089:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8100:3:19",
                        "type": "",
                        "value": "416"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8085:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8085:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8077:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8120:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8145:6:19"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8138:6:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8138:14:19"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8131:6:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8131:22:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8113:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8113:41:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8113:41:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8163:52:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8173:42:19",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8167:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8235:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8246:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8231:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8231:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8255:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8263:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8251:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8251:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8224:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8224:43:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8224:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8287:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8298:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8283:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8283:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8307:6:19"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8315:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8303:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8303:15:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8276:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8276:43:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8276:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8339:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8350:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8335:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8335:18:19"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8355:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8328:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8328:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8328:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8382:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8393:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8378:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8378:19:19"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "8399:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8371:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8371:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8371:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8426:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8437:3:19",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8422:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8422:19:19"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "8443:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8415:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8415:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8415:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8470:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8481:3:19",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8466:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8466:19:19"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "8487:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8459:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8459:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8459:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8514:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8525:3:19",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8510:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8510:19:19"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "8531:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8503:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8503:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8503:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8558:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8569:3:19",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8554:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8554:19:19"
                      },
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "8575:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8547:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8547:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8547:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8602:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8613:3:19",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8598:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8598:19:19"
                      },
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "8619:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8591:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8591:35:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8591:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8646:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8657:3:19",
                            "type": "",
                            "value": "320"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8642:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8642:19:19"
                      },
                      {
                        "name": "value10",
                        "nodeType": "YulIdentifier",
                        "src": "8663:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8635:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8635:36:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8635:36:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8691:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8702:3:19",
                            "type": "",
                            "value": "352"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8687:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8687:19:19"
                      },
                      {
                        "name": "value11",
                        "nodeType": "YulIdentifier",
                        "src": "8708:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8680:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8680:36:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8680:36:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8736:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8747:3:19",
                            "type": "",
                            "value": "384"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8732:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8732:19:19"
                      },
                      {
                        "name": "value12",
                        "nodeType": "YulIdentifier",
                        "src": "8753:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8725:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8725:36:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8725:36:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_address_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_address_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7937:9:19",
                "type": ""
              },
              {
                "name": "value12",
                "nodeType": "YulTypedName",
                "src": "7948:7:19",
                "type": ""
              },
              {
                "name": "value11",
                "nodeType": "YulTypedName",
                "src": "7957:7:19",
                "type": ""
              },
              {
                "name": "value10",
                "nodeType": "YulTypedName",
                "src": "7966:7:19",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "7975:6:19",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "7983:6:19",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "7991:6:19",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "7999:6:19",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8007:6:19",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8015:6:19",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8023:6:19",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8031:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8039:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8047:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8058:4:19",
                "type": ""
              }
            ],
            "src": "7633:1134:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8871:149:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8881:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8893:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8904:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8889:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8889:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8881:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8923:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8938:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8946:66:19",
                            "type": "",
                            "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8934:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8934:79:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8916:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8916:98:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8916:98:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8840:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8851:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8862:4:19",
                "type": ""
              }
            ],
            "src": "8772:248:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9199:233:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9216:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9227:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9209:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9209:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9209:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9250:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9261:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9246:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9246:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9266:2:19",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9239:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9239:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9239:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9289:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9300:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9285:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9285:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9305:34:19",
                        "type": "",
                        "value": "You have already issued bonds fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9278:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9278:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9278:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9360:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9371:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9356:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9356:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9376:13:19",
                        "type": "",
                        "value": "r this loan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9349:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9349:41:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9349:41:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9399:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9411:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9422:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9407:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9407:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9399:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9176:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9190:4:19",
                "type": ""
              }
            ],
            "src": "9025:407:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9611:235:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9628:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9639:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9621:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9621:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9621:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9662:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9673:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9658:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9658:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9678:2:19",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9651:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9651:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9651:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9701:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9712:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9697:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9697:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9717:34:19",
                        "type": "",
                        "value": "Only the bond contract can call "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9690:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9690:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9690:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9772:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9783:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9768:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9768:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9788:15:19",
                        "type": "",
                        "value": "this function"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9761:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9761:43:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9761:43:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9813:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9825:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9836:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9821:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9821:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9813:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9588:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9602:4:19",
                "type": ""
              }
            ],
            "src": "9437:409:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10025:244:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10042:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10053:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10035:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10035:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10035:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10076:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10087:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10072:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10072:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10092:2:19",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10065:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10065:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10065:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10115:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10126:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10111:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10111:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10131:34:19",
                        "type": "",
                        "value": "There are not enough payments av"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10104:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10104:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10104:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10186:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10197:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10182:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10182:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10202:24:19",
                        "type": "",
                        "value": "ailable for collection"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10175:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10175:52:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10175:52:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10236:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10248:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10259:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10244:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10244:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10236:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_55878fd4b9b1ca92eac2474ddc9f953a159fdb2953aad27f69ec6bb964342ee4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10002:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10016:4:19",
                "type": ""
              }
            ],
            "src": "9851:418:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10448:223:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10465:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10476:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10458:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10458:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10458:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10499:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10510:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10495:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10495:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10515:2:19",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10488:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10488:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10488:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10538:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10549:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10534:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10534:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10554:34:19",
                        "type": "",
                        "value": "You must make the minimum paymen"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10527:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10527:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10527:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10609:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10620:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10605:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10605:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10625:3:19",
                        "type": "",
                        "value": "t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10598:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10598:31:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10598:31:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10638:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10650:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10661:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10646:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10646:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10638:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10425:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10439:4:19",
                "type": ""
              }
            ],
            "src": "10274:397:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10850:301:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10867:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10878:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10860:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10860:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10860:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10901:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10912:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10897:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10897:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10917:2:19",
                        "type": "",
                        "value": "71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10890:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10890:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10890:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10940:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10951:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10936:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10936:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10956:34:19",
                        "type": "",
                        "value": "this loan has not been issued ye"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10929:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10929:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10929:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11011:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11022:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11007:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11007:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11027:34:19",
                        "type": "",
                        "value": "t. How do you even have bonds fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11000:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11000:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11000:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11082:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11093:3:19",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11078:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11078:19:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11099:9:19",
                        "type": "",
                        "value": "r it???"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11071:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11071:38:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11071:38:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11118:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11130:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11141:3:19",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11126:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11126:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11118:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10827:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10841:4:19",
                "type": ""
              }
            ],
            "src": "10676:475:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11330:223:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11347:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11358:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11340:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11340:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11340:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11381:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11392:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11377:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11377:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11397:2:19",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11370:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11370:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11370:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11420:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11431:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11416:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11416:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11436:34:19",
                        "type": "",
                        "value": "This contract is alreayd paid of"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11409:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11409:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11409:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11491:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11502:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11487:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11487:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11507:3:19",
                        "type": "",
                        "value": "f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11480:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11480:31:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11480:31:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11520:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11532:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11543:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11528:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11528:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11520:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11307:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11321:4:19",
                "type": ""
              }
            ],
            "src": "11156:397:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11659:76:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11669:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11681:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11692:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11677:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11677:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11669:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11711:9:19"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11722:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11704:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11704:25:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11704:25:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11628:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11639:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11650:4:19",
                "type": ""
              }
            ],
            "src": "11558:177:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11869:168:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11879:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11891:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11902:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11887:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11887:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11879:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11921:9:19"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11932:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11914:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11914:25:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11914:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11959:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11970:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11955:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11955:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11979:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11987:42:19",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11975:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11975:55:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11948:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11948:83:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11948:83:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11830:9:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11841:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11849:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11860:4:19",
                "type": ""
              }
            ],
            "src": "11740:297:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12087:230:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12097:19:19",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12113:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12107:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12107:9:19"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "12097:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12125:58:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "12147:6:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "12163:4:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12169:2:19",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12159:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12159:13:19"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12178:2:19",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "12174:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12174:7:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12155:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12155:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12143:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12143:40:19"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "12129:10:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12258:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "12260:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12260:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12260:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "12201:10:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12213:18:19",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12198:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12198:34:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "12237:10:19"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12249:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "12234:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12234:22:19"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "12195:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12195:62:19"
                  },
                  "nodeType": "YulIf",
                  "src": "12192:2:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12296:2:19",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "12300:10:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12289:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12289:22:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12289:22:19"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "12067:4:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12076:6:19",
                "type": ""
              }
            ],
            "src": "12042:275:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12370:80:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12397:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12399:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12399:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12399:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12386:1:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12393:1:19"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "12389:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12389:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12383:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12383:13:19"
                  },
                  "nodeType": "YulIf",
                  "src": "12380:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12428:16:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12439:1:19"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12442:1:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12435:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12435:9:19"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "12428:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12353:1:19",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12356:1:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "12362:3:19",
                "type": ""
              }
            ],
            "src": "12322:128:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12504:76:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12526:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12528:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12528:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12528:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12520:1:19"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12523:1:19"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12517:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12517:8:19"
                  },
                  "nodeType": "YulIf",
                  "src": "12514:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12557:17:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12569:1:19"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12572:1:19"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12565:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12565:9:19"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12557:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12486:1:19",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12489:1:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12495:4:19",
                "type": ""
              }
            ],
            "src": "12455:125:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12617:152:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12634:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12637:77:19",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12627:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12627:88:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12627:88:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12731:1:19",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12734:4:19",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12724:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12724:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12724:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12755:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12758:4:19",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12748:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12748:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12748:15:19"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12585:184:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12806:152:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12823:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12826:77:19",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12816:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12816:88:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12816:88:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12920:1:19",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12923:4:19",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12913:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12913:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12913:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12944:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12947:4:19",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12937:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12937:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12937:15:19"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "12774:184:19"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_array$_t_uint256_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let _3 := mul(_1, _2)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _3), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value2 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value3 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value5, value5) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let _1 := 0x01000000000000000000000000\n        let _2 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(pos, mul(and(value0, _2), _1))\n        mstore(add(pos, 20), mul(and(value1, _2), _1))\n        mstore(add(pos, 40), value2)\n        end := add(pos, 72)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), tail)\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bool_t_address_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_address_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 416)\n        mstore(headStart, iszero(iszero(value0)))\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n        mstore(add(headStart, 384), value12)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"You have already issued bonds fo\")\n        mstore(add(headStart, 96), \"r this loan\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"Only the bond contract can call \")\n        mstore(add(headStart, 96), \"this function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_55878fd4b9b1ca92eac2474ddc9f953a159fdb2953aad27f69ec6bb964342ee4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"There are not enough payments av\")\n        mstore(add(headStart, 96), \"ailable for collection\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"You must make the minimum paymen\")\n        mstore(add(headStart, 96), \"t\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 71)\n        mstore(add(headStart, 64), \"this loan has not been issued ye\")\n        mstore(add(headStart, 96), \"t. How do you even have bonds fo\")\n        mstore(add(headStart, 128), \"r it???\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"This contract is alreayd paid of\")\n        mstore(add(headStart, 96), \"f\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "487:8916:4:-:0;;;1379:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1416:12;:21;;-1:-1:-1;;;;;;1416:21:4;-1:-1:-1;;;;;1416:21:4;;;;;;;;;;487:8916;;14:310:19;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:19;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:19:o;:::-;487:8916:4;;;;;;",
  "deployedSourceMap": "487:8916:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:233:12;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6812:879:4;;;;;;:::i;:::-;;:::i;:::-;;8702:202;;;;;;:::i;:::-;;:::i;1240:44::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3838:132::-;;;;;;:::i;:::-;;:::i;1192:42::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;2037:122::-;;;;;;:::i;:::-;;:::i;4263:163::-;;;;;;:::i;:::-;;:::i;8018:529::-;;;;;;:::i;:::-;;:::i;358:201:11:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9137:264:4:-;;;;;;:::i;:::-;;:::i;2472:286::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3373:257::-;;;;;;:::i;:::-;;:::i;573:27::-;;;:::i;:::-;;;;;;;:::i;5342:1146::-;;;;;;:::i;:::-;;:::i;179:173:11:-;;;;;;:::i;:::-;;:::i;312:233:12:-;414:4;-1:-1:-1;;;;;;437:49:12;;452:34;437:49;;:101;;;502:36;526:11;502:23;:36::i;:::-;430:108;;312:233;;;;:::o;6812:879:4:-;1804:15;;;;:10;:15;;;;;:34;;;;1762:31;;;;;6907:3;;-1:-1:-1;1754:130:4;;;;-1:-1:-1;;;;;1754:130:4;;;;;;;:::i;:::-;;;;;;;;;6926:14:::1;6943:15:::0;;;:10:::1;:15;::::0;;;;;;;;6926:32;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;;;::::0;;-1:-1:-1;;;;;6926:32:4::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;6976:30;::::1;;::::0;:182:::1;;;7145:2;:13;;;7124:2;:18;;;7100:2;:21;;;:42;;;;:::i;:::-;:58;6976:182;6968:293;;;;-1:-1:-1::0;;;;;6968:293:4::1;;;;;;;:::i;:::-;7295:2;:15;;;-1:-1:-1::0;;;;;7288:36:4::1;;7325:10;7345:4;7352:13;7288:78;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7381:15:4::1;::::0;;;:10:::1;:15;::::0;;;;:34:::1;;:51:::0;;7419:13;;7381:15;:51:::1;::::0;7419:13;;7381:51:::1;:::i;:::-;::::0;;;-1:-1:-1;;7518:16:4::1;::::0;::::1;::::0;7500:34:::1;::::0;:15:::1;:34;:::i;:::-;7467:15;::::0;;;:10:::1;:15;::::0;;;;:30:::1;::::0;::::1;:67:::0;;;;7578:31:::1;::::0;;::::1;:48:::0;;7613:13;;7467:15;7578:48:::1;::::0;7613:13;;7578:48:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;6812:879:4:o;8702:202::-;8763:4;8828:15;;;:10;:15;;;;;:34;;;;8785:31;;;;;:77;;;:112;;-1:-1:-1;;8875:15:4;;;;:10;:15;;;;;:22;;;8874:23;;8702:202::o;1240:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3838:132::-;3902:7;3927:15;;;:10;:15;;;;;:35;;;;3838:132::o;1192:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1192:42:4;;;;;;;;;;;;:::o;2037:122::-;-1:-1:-1;;;;;2132:13:4;2107:7;2132:13;;;:7;:13;;;;;:20;;2037:122::o;4263:163::-;4326:4;4368:15;;;:10;:15;;;;;:30;;;4349:15;:49;;;;:69;;;4403:15;4414:3;4403:10;:15::i;:::-;4402:16;;4263:163;-1:-1:-1;;4263:163:4:o;8018:529::-;8090:14;8116:12;;8161:15;;;8116:12;8161:15;;;;;;:28;-1:-1:-1;;;;;8116:12:4;;;;;8161:28;;;;8208:22;;8200:106;;;;-1:-1:-1;;;;;8200:106:4;;;;;;;:::i;:::-;8332:15;;;;:10;:15;;;;;:34;;;8324:42;;;8316:108;;;;-1:-1:-1;;;;;8316:108:4;;;;;;;:::i;:::-;8434:64;;;;;-1:-1:-1;;;;;8434:22:4;;;;;:64;;8457:10;;8477:4;;8484:3;;8489:4;;8434:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8508:32:4;;;;;-1:-1:-1;;;;;8508:14:4;;;-1:-1:-1;8508:14:4;;-1:-1:-1;8508:32:4;;8523:10;;8535:4;;8508:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8018:529;;;;:::o;358:201:11:-;516:36;358:201;;;;;;;:::o;9137:264:4:-;9215:7;9233:10;9315:4;9334:9;9357:6;9277:96;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9277:96:4;;;;;;;;;9267:107;;9277:96;9267:107;;;;;-1:-1:-1;;9137:264:4;;;;;:::o;2472:286::-;2540:7;1572:12;;2540:7;;-1:-1:-1;;;;;1572:12:4;1558:10;:26;1550:84;;;;-1:-1:-1;;;;;1550:84:4;;;;;;;:::i;:::-;2575:15:::1;::::0;;;:10:::1;:15;::::0;;;;:22;::::1;;2574:23;2566:78;;;;-1:-1:-1::0;;;;;2566:78:4::1;;;;;;;:::i;:::-;-1:-1:-1::0;;2654:15:4::1;::::0;;;2679:4:::1;2654:15;::::0;;;;;;;:29;;-1:-1:-1;;2654:29:4::1;::::0;::::1;::::0;;2700:25:::1;::::0;::::1;::::0;2726:24;::::1;::::0;-1:-1:-1;;;;;2726:24:4::1;2472:286:::0;;;:::o;3373:257::-;3456:4;1572:12;;-1:-1:-1;;;;;1572:12:4;1558:10;:26;1550:84;;;;-1:-1:-1;;;;;1550:84:4;;;;;;;:::i;:::-;3475:15:::1;3486:3;3475:10;:15::i;:::-;3471:153;;3505:15;::::0;;;:10:::1;:15;::::0;;;;:34:::1;;:42:::0;;3543:4;;3505:15;:42:::1;::::0;3543:4;;3505:42:::1;:::i;:::-;::::0;;;-1:-1:-1;3568:4:4::1;::::0;-1:-1:-1;3561:11:4::1;::::0;-1:-1:-1;3561:11:4::1;3471:153;-1:-1:-1::0;3608:5:4::1;3601:12;;573:27:::0;;;-1:-1:-1;;;;;573:27:4;;:::o;5342:1146::-;-1:-1:-1;;;;;5683:18:4;;5593:7;5683:18;;;:7;:18;;;;;:25;5593:7;;5666:43;;5672:9;;5666:5;:43::i;:::-;-1:-1:-1;;;;;5746:18:4;;;;;;;:7;:18;;;;;;;;:27;;;;;;;;;;;;;;;;;5834:628;;;;;;;;;;;;;;;;;5933:10;5834:628;;;;;;;5969:24;5834:628;;;;;;;;;;5653:56;;-1:-1:-1;5834:628:4;;;6066:32;6022:14;6066:15;:32;:::i;:::-;5834:628;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5834:628:4;;;;;;;;;;;;;;5817:14;;;:10;:14;;;;;;;:645;;;;;;;;-1:-1:-1;;5817:645:4;;;;;;;-1:-1:-1;;5817:645:4;;-1:-1:-1;;;;;5817:645:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5817:645:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5817:645:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5817:14:4;5342:1146;-1:-1:-1;;5342:1146:4:o;179:173:11:-;314:31;179:173;;;;;;;:::o;763:155:17:-;-1:-1:-1;;;;;;871:40:17;;886:25;871:40;763:155;;;:::o;14:198:19:-;84:20;;-1:-1:-1;;;;;133:54:19;;123:65;;113:2;;202:1;199;192:12;217:750;;330:3;323:4;315:6;311:17;307:27;297:2;;352:5;345;338:20;297:2;392:6;379:20;418:4;441:18;437:2;434:26;431:2;;;463:18;;:::i;:::-;510:2;506;502:11;533:28;557:2;553;549:11;533:28;:::i;:::-;595:15;;;626:12;;;;658:15;;;692;;;688:24;;685:33;-1:-1:-1;682:2:19;;;735:5;728;721:20;682:2;761:5;752:14;;775:163;789:2;786:1;783:9;775:163;;;846:17;;834:30;;807:1;800:9;;;;;884:12;;;;916;;775:163;;;-1:-1:-1;956:5:19;287:680;-1:-1:-1;;;;;;;287:680:19:o;972:552::-;;1069:3;1062:4;1054:6;1050:17;1046:27;1036:2;;1091:5;1084;1077:20;1036:2;1131:6;1118:20;1157:18;1153:2;1150:26;1147:2;;;1179:18;;:::i;:::-;1223:55;1266:2;1247:13;;-1:-1:-1;;1243:27:19;1272:4;1239:38;1223:55;:::i;:::-;1303:2;1294:7;1287:19;1349:3;1342:4;1337:2;1329:6;1325:15;1321:26;1318:35;1315:2;;;1370:5;1363;1356:20;1315:2;1439;1432:4;1424:6;1420:17;1413:4;1404:7;1400:18;1387:55;1462:16;;;1480:4;1458:27;1451:42;;;;1466:7;1026:498;-1:-1:-1;;1026:498:19:o;1529:198::-;;1641:2;1629:9;1620:7;1616:23;1612:32;1609:2;;;1662:6;1654;1647:22;1609:2;1690:31;1711:9;1690:31;:::i;:::-;1680:41;1599:128;-1:-1:-1;;;1599:128:19:o;1732:1001::-;;;;;;1971:3;1959:9;1950:7;1946:23;1942:33;1939:2;;;1993:6;1985;1978:22;1939:2;2021:31;2042:9;2021:31;:::i;:::-;2011:41;;2071:40;2107:2;2096:9;2092:18;2071:40;:::i;:::-;2061:50;;2162:2;2151:9;2147:18;2134:32;2185:18;2226:2;2218:6;2215:14;2212:2;;;2247:6;2239;2232:22;2212:2;2275:67;2334:7;2325:6;2314:9;2310:22;2275:67;:::i;:::-;2265:77;;2395:2;2384:9;2380:18;2367:32;2351:48;;2424:2;2414:8;2411:16;2408:2;;;2445:6;2437;2430:22;2408:2;2473:69;2534:7;2523:8;2512:9;2508:24;2473:69;:::i;:::-;2463:79;;2595:3;2584:9;2580:19;2567:33;2551:49;;2625:2;2615:8;2612:16;2609:2;;;2646:6;2638;2631:22;2609:2;;2674:53;2719:7;2708:8;2697:9;2693:24;2674:53;:::i;:::-;2664:63;;;1929:804;;;;;;;;:::o;2738:632::-;;;;;;2927:3;2915:9;2906:7;2902:23;2898:33;2895:2;;;2949:6;2941;2934:22;2895:2;2977:31;2998:9;2977:31;:::i;:::-;2967:41;;3027:40;3063:2;3052:9;3048:18;3027:40;:::i;:::-;3017:50;;3114:2;3103:9;3099:18;3086:32;3076:42;;3165:2;3154:9;3150:18;3137:32;3127:42;;3220:3;3209:9;3205:19;3192:33;3248:18;3240:6;3237:30;3234:2;;;3285:6;3277;3270:22;3234:2;3313:51;3356:7;3347:6;3336:9;3332:22;3313:51;:::i;3375:618::-;;;;;;;;3589:3;3577:9;3568:7;3564:23;3560:33;3557:2;;;3611:6;3603;3596:22;3557:2;3639:31;3660:9;3639:31;:::i;:::-;3629:41;;3689:40;3725:2;3714:9;3710:18;3689:40;:::i;:::-;3547:446;;3679:50;;-1:-1:-1;;;;3776:2:19;3761:18;;3748:32;;3827:2;3812:18;;3799:32;;3878:3;3863:19;;3850:33;;-1:-1:-1;3930:3:19;3915:19;;3902:33;;-1:-1:-1;3982:3:19;3967:19;;;3954:33;;-1:-1:-1;3547:446:19:o;3998:266::-;;;4127:2;4115:9;4106:7;4102:23;4098:32;4095:2;;;4148:6;4140;4133:22;4095:2;4176:31;4197:9;4176:31;:::i;:::-;4166:41;4254:2;4239:18;;;;4226:32;;-1:-1:-1;;;4085:179:19:o;4269:297::-;;4389:2;4377:9;4368:7;4364:23;4360:32;4357:2;;;4410:6;4402;4395:22;4357:2;4447:9;4441:16;4500:5;4493:13;4486:21;4479:5;4476:32;4466:2;;4527:6;4519;4512:22;4571:352;;4682:2;4670:9;4661:7;4657:23;4653:32;4650:2;;;4703:6;4695;4688:22;4650:2;4747:9;4734:23;-1:-1:-1;;;;;;4790:5:19;4786:78;4779:5;4776:89;4766:2;;4884:6;4876;4869:22;4928:190;;5040:2;5028:9;5019:7;5015:23;5011:32;5008:2;;;5061:6;5053;5046:22;5008:2;-1:-1:-1;5089:23:19;;4998:120;-1:-1:-1;4998:120:19:o;5123:258::-;;;5252:2;5240:9;5231:7;5227:23;5223:32;5220:2;;;5273:6;5265;5258:22;5220:2;-1:-1:-1;;5301:23:19;;;5371:2;5356:18;;;5343:32;;-1:-1:-1;5210:171:19:o;5386:456::-;5581:28;-1:-1:-1;;;;;5695:15:19;;;5691:24;;5679:37;;5750:15;;;;5746:24;;;5741:2;5732:12;;5725:46;5796:2;5787:12;;5780:28;5833:2;5824:12;;5561:281::o;5847:226::-;-1:-1:-1;;;;;6011:55:19;;;;5993:74;;5981:2;5966:18;;5948:125::o;6078:398::-;-1:-1:-1;;;;;6359:15:19;;;6341:34;;6411:15;;;;6406:2;6391:18;;6384:43;6458:2;6443:18;;6436:34;;;;6268:2;6253:18;;6235:241::o;6481:653::-;-1:-1:-1;;;;;6855:15:19;;;6837:34;;6907:15;;;;6902:2;6887:18;;6880:43;6954:2;6939:18;;6932:34;6997:2;6982:18;;6975:34;;;;7046:3;7040;7025:19;;7018:32;;;6481:653;7066:19;;;7059:33;7124:3;7109:19;;6766:368::o;7139:297::-;-1:-1:-1;;;;;7331:55:19;;;;7313:74;;7418:2;7403:18;;7396:34;7301:2;7286:18;;7268:168::o;7441:187::-;7606:14;;7599:22;7581:41;;7569:2;7554:18;;7536:92::o;7633:1134::-;8138:14;;8131:22;8113:41;;-1:-1:-1;;;;;8251:15:19;;;8246:2;8231:18;;8224:43;8303:15;;;;8298:2;8283:18;;8276:43;8350:2;8335:18;;8328:34;;;;8393:3;8378:19;;8371:35;;;;8437:3;8422:19;;8415:35;;;;8481:3;8466:19;;8459:35;;;;8525:3;8510:19;;8503:35;8569:3;8554:19;;8547:35;8613:3;8598:19;;8591:35;8657:3;8642:19;;8635:36;8702:3;8687:19;;8680:36;;;;8747:3;8732:19;;8725:36;8100:3;8085:19;;8067:700::o;8772:248::-;-1:-1:-1;;;;;;8934:79:19;;;;8916:98;;8904:2;8889:18;;8871:149::o;9025:407::-;9227:2;9209:21;;;9266:2;9246:18;;;9239:30;9305:34;9300:2;9285:18;;9278:62;9376:13;9371:2;9356:18;;9349:41;9422:3;9407:19;;9199:233::o;9437:409::-;9639:2;9621:21;;;9678:2;9658:18;;;9651:30;9717:34;9712:2;9697:18;;9690:62;9788:15;9783:2;9768:18;;9761:43;9836:3;9821:19;;9611:235::o;9851:418::-;10053:2;10035:21;;;10092:2;10072:18;;;10065:30;10131:34;10126:2;10111:18;;10104:62;10202:24;10197:2;10182:18;;10175:52;10259:3;10244:19;;10025:244::o;10274:397::-;10476:2;10458:21;;;10515:2;10495:18;;;10488:30;10554:34;10549:2;10534:18;;10527:62;10625:3;10620:2;10605:18;;10598:31;10661:3;10646:19;;10448:223::o;10676:475::-;10878:2;10860:21;;;10917:2;10897:18;;;10890:30;10956:34;10951:2;10936:18;;10929:62;11027:34;11022:2;11007:18;;11000:62;11099:9;11093:3;11078:19;;11071:38;11141:3;11126:19;;10850:301::o;11156:397::-;11358:2;11340:21;;;11397:2;11377:18;;;11370:30;11436:34;11431:2;11416:18;;11409:62;11507:3;11502:2;11487:18;;11480:31;11543:3;11528:19;;11330:223::o;11558:177::-;11704:25;;;11692:2;11677:18;;11659:76::o;11740:297::-;11914:25;;;-1:-1:-1;;;;;11975:55:19;11970:2;11955:18;;11948:83;11902:2;11887:18;;11869:168::o;12042:275::-;12113:2;12107:9;12178:2;12159:13;;-1:-1:-1;;12155:27:19;12143:40;;12213:18;12198:34;;12234:22;;;12195:62;12192:2;;;12260:18;;:::i;:::-;12296:2;12289:22;12087:230;;-1:-1:-1;12087:230:19:o;12322:128::-;;12393:1;12389:6;12386:1;12383:13;12380:2;;;12399:18;;:::i;:::-;-1:-1:-1;12435:9:19;;12370:80::o;12455:125::-;;12523:1;12520;12517:8;12514:2;;;12528:18;;:::i;:::-;-1:-1:-1;12565:9:19;;12504:76::o;12585:184::-;12637:77;12634:1;12627:88;12734:4;12731:1;12724:15;12758:4;12755:1;12748:15;12774:184;12826:77;12823:1;12816:88;12923:4;12920:1;12913:15;12947:4;12944:1;12937:15",
  "source": "/// SPDX-License-Identifier: None\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport {IERC20} from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport {IERC1155} from '@openzeppelin/contracts/token/ERC1155/IERC1155.sol';\n\n/**\n* @title ERC20PaymentStandard\n* @author Carson Case\n* @notice This contract is a standard meant to be overriden that works with the Bonds contract to offer noncolateralized, flexable lending onchain\n */\ncontract ERC20PaymentStandard is ERC1155Holder{\n    // Initialized in constructor\n    address public bondContract;\n    \n    //Loan object. Stores lots of info about each loan\n    struct loan {\n        bool issued;\n        address ERC20Address;\n        address borrower;\n        bytes32 merkleRoot;\n        uint256 paymentPeriod;\n        uint256 paymentDueDate;\n        uint256 minPayment;\n        uint256 interestRateInverse;\n        uint256 accrualPeriod;\n        uint256 principal;\n        uint256 totalPaymentsValue;\n        uint256 awaitingCollection;\n        uint256 paymentComplete;\n    }\n    \n    //Two mappings. One to get the loans for a user. And the other to get the the loans based off id\n    mapping(uint256 => loan) public loanLookup;\n    mapping(address => uint256[]) public loanIDs;\n    \n    /**\n    * @notice just sets bonds contract\n    * @param _bonds contract\n     */\n    constructor(address _bonds){\n        bondContract = _bonds;\n    }\n    \n    /// @notice requires only the Bonds Contract call this function\n    modifier onlyBonds{\n        require(msg.sender == bondContract, \"Only the bond contract can call this function\");\n        _;\n    }\n    \n    /// @notice requires contract is not paid off\n    modifier incomplete(uint256 _id){\n        require(loanLookup[_id].paymentComplete <\n        loanLookup[_id].totalPaymentsValue,\n        \"This contract is alreayd paid off\");\n        _;\n    }\n    \n    /**\n    * @notice gets the number of loans a person has\n    * @param _who is who to look up\n    * @return length\n     */\n    function getNumberOfLoans(address _who) external virtual view returns(uint256){\n        return loanIDs[_who].length;\n    }\n    \n    /**\n    * @notice called when bonds are issued so as to make sure lender can only mint bonds once.\n    * @param _id loan ID\n    * @return the loan principal (so bonds knows how many NFTs to mint)\n    * @return the borrowers address (so bonds can make sure borrower is calling this function)\n     */\n    function issueBonds(uint256 _id) external virtual onlyBonds returns(uint256,address){\n        require(!loanLookup[_id].issued,\"You have already issued bonds for this loan\");\n        loanLookup[_id].issued = true;\n        return(loanLookup[_id].principal,loanLookup[_id].borrower);\n    }\n    \n    /**\n    * @notice Called each time new NFTs are minted by staking\n    * @param _amm the ammount of interest to add\n    * @param _id is the id of the loan\n    * @return true if added. Will not add interest if payment has been completed.\n    *This prevents lenders from refusing to end a loan when it is rightfully over by forever\n    *increasing the totalPaymentsValue through interest staking and never fully collecting payment.\n    *This also means that if lenders do not realize interest gains soon enough they may not be able to collect them before\n    *the borrower can complete the loan.\n     */\n    function addInterest(uint256 _amm, uint256 _id) onlyBonds external virtual returns(bool){\n        if(!isComplete(_id)){\n            loanLookup[_id].totalPaymentsValue += _amm;\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    /**\n    * @notice get the interest rate of a loan. Makes it easy for other contract since it doens't have to parse struct\n    * @param _id is the loan ID\n    * @return inverse interest rate\n     */\n    function getInterest(uint256 _id) external virtual view returns(uint256){\n        return(loanLookup[_id].interestRateInverse);\n    }\n    \n    /**\n    * @notice This contract is not very forgiving. Miss one payment and you're marked as delinquent. Unless contract is complete\n    * @param _id is the hash id of the loan. Same as bond ERC1155 ID as well\n    * @return if delinquent or not. Meaning missed a payment\n     */\n    function isDelinquent(uint256 _id) public virtual view returns(bool){\n        return (block.timestamp >= loanLookup[_id].paymentDueDate && !isComplete(_id));\n    }\n    \n     /**\n    * @notice contract must be configured before bonds are issued. Pushes new loan to array for user\n    * @dev borrower is msg.sender for testing. In production might want to make this a param\n    * @param _erc20 is the ERC20 contract address that will be used for payments\n    * @param _borrower is the borrower loan is being configured for. Keep in mind. ONLY this borrower can mint bonds to start the loan\n    * @param _minPayment is the minimum payment that must be made before the payment period ends\n    * @param _paymentPeriod payment must be made by this time or delinquent function will return true\n    * @param _principal the origional loan value before interest\n    * @param _inverseInterestRate the interest rate expressed as inverse. 2% = 1/5 = inverse of 5\n    * @param _accrualPeriod the time it takes for interest to accrue in seconds\n    * @return the id it just created\n     */\n    function configureNew(\n    address _erc20,\n    address _borrower,\n    uint256 _minPayment, \n    uint256 _paymentPeriod, \n    uint256 _principal, \n    uint256 _inverseInterestRate, \n    uint256 _accrualPeriod\n    )\n    external\n    virtual\n    returns(uint256)\n    {\n        //Create new ID for the loan\n        uint256 id = getId(_borrower, loanIDs[_borrower].length);\n        //Push to loan IDs\n        loanIDs[_borrower].push(id);\n        //Add loan info to lookup\n        loanLookup[id] = loan(\n        {\n            issued: false,\n            ERC20Address: _erc20,\n            borrower: msg.sender,\n            merkleRoot: keccak256(\"Hello World\"),\n            paymentPeriod: _paymentPeriod,\n            paymentDueDate: block.timestamp + _paymentPeriod,\n            minPayment: _minPayment,\n            interestRateInverse: _inverseInterestRate,\n            accrualPeriod: _accrualPeriod,\n            principal: _principal,\n            totalPaymentsValue: _principal,               //For now. Will update with interest updates\n            awaitingCollection: 0,\n            paymentComplete: 0\n            }\n        );\n        return id;\n    }\n    \n    /**\n    * @notice function handles the payment of the loan. Does not have to be borrower\n    *as payment comes in. The contract holds it until collection by bond owners. MUST APPROVE FIRST in ERC20 contract first\n    * @param _id to pay off\n    * @param _erc20Ammount is ammount in loan's ERC20 to pay\n     */\n    function payment(uint256 _id, uint256 _erc20Ammount) \n    external \n    virtual\n    incomplete(_id)\n    {\n        loan memory ln = loanLookup[_id];\n        require(_erc20Ammount >= ln.minPayment ||                                   //Payment must be more than min payment\n                ln.totalPaymentsValue - ln.paymentComplete < ln.minPayment,     //Exception for the last payment (remainder)\n                \"You must make the minimum payment\");\n                \n        IERC20(ln.ERC20Address).transferFrom(msg.sender, address(this), _erc20Ammount);     \n        loanLookup[_id].awaitingCollection += _erc20Ammount;                         \n        loanLookup[_id].paymentDueDate = block.timestamp + ln.paymentPeriod;             //Reset paymentTimer;\n        loanLookup[_id].paymentComplete += _erc20Ammount;                                //Increase paymentComplete\n    }\n    \n    /**\n    * @notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\n    * However that was not a good idea as a hacker could create fake bonds.\n    * @param _id is the id of the bond to send in\n    * @param _amm is the ammount to send\n     */\n    function withdrawl(uint256 _id, uint256 _amm) external virtual{\n        IERC1155 bonds = IERC1155(bondContract);\n        IERC20 erc20 = IERC20(loanLookup[_id].ERC20Address);\n        require(loanLookup[_id].issued, \"this loan has not been issued yet. How do you even have bonds for it???\");\n        require(_amm <= loanLookup[_id].awaitingCollection,\"There are not enough payments available for collection\");\n        bonds.safeTransferFrom(msg.sender, address(this), _id, _amm, \"\");\n        erc20.transfer(msg.sender, _amm);\n    }\n    \n    /**\n    * @notice helper function\n    * @param _id of loan to check\n    * @return return if the contract is payed off or not as bool\n     */\n    function isComplete(uint256 _id) public virtual view returns(bool){\n        return loanLookup[_id].paymentComplete >=\n        loanLookup[_id].totalPaymentsValue ||\n        !loanLookup[_id].issued;\n    }\n\n    /**\n    * @notice Returns the ID for a loan given the borrower and index in the array\n    * @param _borrower is borrower\n    * @param _index is the index in the borrowers loan array\n    * @return the loan ID\n     */\n    //\n    function getId(address _borrower, uint256 _index) public virtual view returns(uint256){\n        uint256 id = uint256(\n            keccak256(abi.encodePacked(\n            address(this),\n            _borrower,\n            _index\n        )));\n        return id;\n    }\n}",
  "sourcePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol",
  "ast": {
    "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol",
    "exportedSymbols": {
      "ERC1155Holder": [
        2980
      ],
      "ERC1155Receiver": [
        3014
      ],
      "ERC165": [
        3936
      ],
      "ERC20PaymentStandard": [
        1394
      ],
      "IERC1155": [
        2873
      ],
      "IERC1155Receiver": [
        2914
      ],
      "IERC165": [
        3948
      ],
      "IERC20": [
        3593
      ]
    },
    "id": 1395,
    "license": "None",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 918,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 919,
        "nodeType": "ImportDirective",
        "scope": 1395,
        "sourceUnit": 2981,
        "src": "59:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 921,
        "nodeType": "ImportDirective",
        "scope": 1395,
        "sourceUnit": 3594,
        "src": "131:70:4",
        "symbolAliases": [
          {
            "foreign": {
              "id": 920,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "139:6:4",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 923,
        "nodeType": "ImportDirective",
        "scope": 1395,
        "sourceUnit": 2874,
        "src": "202:76:4",
        "symbolAliases": [
          {
            "foreign": {
              "id": 922,
              "name": "IERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "210:8:4",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 925,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2980,
              "src": "520:13:4"
            },
            "id": 926,
            "nodeType": "InheritanceSpecifier",
            "src": "520:13:4"
          }
        ],
        "contractDependencies": [
          2914,
          2980,
          3014,
          3936,
          3948
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 924,
          "nodeType": "StructuredDocumentation",
          "src": "280:206:4",
          "text": " @title ERC20PaymentStandard\n @author Carson Case\n @notice This contract is a standard meant to be overriden that works with the Bonds contract to offer noncolateralized, flexable lending onchain"
        },
        "fullyImplemented": true,
        "id": 1394,
        "linearizedBaseContracts": [
          1394,
          2980,
          3014,
          2914,
          3936,
          3948
        ],
        "name": "ERC20PaymentStandard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e7004a7a",
            "id": 928,
            "mutability": "mutable",
            "name": "bondContract",
            "nodeType": "VariableDeclaration",
            "scope": 1394,
            "src": "573:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 927,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "573:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20PaymentStandard.loan",
            "id": 955,
            "members": [
              {
                "constant": false,
                "id": 930,
                "mutability": "mutable",
                "name": "issued",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "688:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 929,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "688:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 932,
                "mutability": "mutable",
                "name": "ERC20Address",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "709:20:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 931,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "709:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 934,
                "mutability": "mutable",
                "name": "borrower",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "739:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 933,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "739:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 936,
                "mutability": "mutable",
                "name": "merkleRoot",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "765:18:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 935,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "765:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 938,
                "mutability": "mutable",
                "name": "paymentPeriod",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "793:21:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 937,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "793:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 940,
                "mutability": "mutable",
                "name": "paymentDueDate",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "824:22:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 939,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "824:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 942,
                "mutability": "mutable",
                "name": "minPayment",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "856:18:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 941,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "856:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 944,
                "mutability": "mutable",
                "name": "interestRateInverse",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "884:27:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 943,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "884:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 946,
                "mutability": "mutable",
                "name": "accrualPeriod",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "921:21:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 945,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "921:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 948,
                "mutability": "mutable",
                "name": "principal",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "952:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 947,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "952:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 950,
                "mutability": "mutable",
                "name": "totalPaymentsValue",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "979:26:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 949,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "979:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 952,
                "mutability": "mutable",
                "name": "awaitingCollection",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "1015:26:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 951,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1015:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 954,
                "mutability": "mutable",
                "name": "paymentComplete",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "1051:23:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 953,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1051:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "loan",
            "nodeType": "StructDefinition",
            "scope": 1394,
            "src": "666:415:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "630e69ad",
            "id": 960,
            "mutability": "mutable",
            "name": "loanLookup",
            "nodeType": "VariableDeclaration",
            "scope": 1394,
            "src": "1192:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan)"
            },
            "typeName": {
              "id": 959,
              "keyType": {
                "id": 956,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1200:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1192:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan)"
              },
              "valueType": {
                "id": 958,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 957,
                  "name": "loan",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 955,
                  "src": "1211:4:4"
                },
                "referencedDeclaration": 955,
                "src": "1211:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_loan_$955_storage_ptr",
                  "typeString": "struct ERC20PaymentStandard.loan"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4af50116",
            "id": 965,
            "mutability": "mutable",
            "name": "loanIDs",
            "nodeType": "VariableDeclaration",
            "scope": 1394,
            "src": "1240:44:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 964,
              "keyType": {
                "id": 961,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1248:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1240:29:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 962,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 963,
                "nodeType": "ArrayTypeName",
                "src": "1259:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 975,
              "nodeType": "Block",
              "src": "1406:38:4",
              "statements": [
                {
                  "expression": {
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 971,
                      "name": "bondContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 928,
                      "src": "1416:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 972,
                      "name": "_bonds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "1431:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1416:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:21:4"
                }
              ]
            },
            "documentation": {
              "id": 966,
              "nodeType": "StructuredDocumentation",
              "src": "1295:79:4",
              "text": " @notice just sets bonds contract\n @param _bonds contract"
            },
            "id": 976,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "_bonds",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "1391:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1390:16:4"
            },
            "returnParameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:4"
            },
            "scope": 1394,
            "src": "1379:65:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 988,
              "nodeType": "Block",
              "src": "1540:112:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 980,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1558:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1558:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 982,
                          "name": "bondContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 928,
                          "src": "1572:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1558:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074686520626f6e6420636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1586:47:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef",
                          "typeString": "literal_string \"Only the bond contract can call this function\""
                        },
                        "value": "Only the bond contract can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef",
                          "typeString": "literal_string \"Only the bond contract can call this function\""
                        }
                      ],
                      "id": 979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1550:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:84:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:84:4"
                },
                {
                  "id": 987,
                  "nodeType": "PlaceholderStatement",
                  "src": "1644:1:4"
                }
              ]
            },
            "documentation": {
              "id": 977,
              "nodeType": "StructuredDocumentation",
              "src": "1454:63:4",
              "text": "@notice requires only the Bonds Contract call this function"
            },
            "id": 989,
            "name": "onlyBonds",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:0:4"
            },
            "src": "1522:130:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1008,
              "nodeType": "Block",
              "src": "1744:158:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 995,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "1762:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 997,
                            "indexExpression": {
                              "id": 996,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 992,
                              "src": "1773:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1762:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 998,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentComplete",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 954,
                          "src": "1762:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 999,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "1804:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 1001,
                            "indexExpression": {
                              "id": 1000,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 992,
                              "src": "1815:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1804:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalPaymentsValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 950,
                          "src": "1804:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1762:76:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320636f6e747261637420697320616c72656179642070616964206f6666",
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1848:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb",
                          "typeString": "literal_string \"This contract is alreayd paid off\""
                        },
                        "value": "This contract is alreayd paid off"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb",
                          "typeString": "literal_string \"This contract is alreayd paid off\""
                        }
                      ],
                      "id": 994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1754:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1754:130:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "1754:130:4"
                },
                {
                  "id": 1007,
                  "nodeType": "PlaceholderStatement",
                  "src": "1894:1:4"
                }
              ]
            },
            "documentation": {
              "id": 990,
              "nodeType": "StructuredDocumentation",
              "src": "1662:45:4",
              "text": "@notice requires contract is not paid off"
            },
            "id": 1009,
            "name": "incomplete",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 992,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "1732:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1731:13:4"
            },
            "src": "1712:190:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1022,
              "nodeType": "Block",
              "src": "2115:44:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1017,
                        "name": "loanIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "2132:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(address => uint256[] storage ref)"
                        }
                      },
                      "id": 1019,
                      "indexExpression": {
                        "id": 1018,
                        "name": "_who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "2140:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2132:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2132:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1016,
                  "id": 1021,
                  "nodeType": "Return",
                  "src": "2125:27:4"
                }
              ]
            },
            "documentation": {
              "id": 1010,
              "nodeType": "StructuredDocumentation",
              "src": "1912:120:4",
              "text": " @notice gets the number of loans a person has\n @param _who is who to look up\n @return length"
            },
            "functionSelector": "7e23f5dd",
            "id": 1023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberOfLoans",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "_who",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "2063:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2063:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2062:14:4"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1015,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "2107:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2106:9:4"
            },
            "scope": 1394,
            "src": "2037:122:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1061,
              "nodeType": "Block",
              "src": "2556:202:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2574:23:4",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1036,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "2575:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 1038,
                            "indexExpression": {
                              "id": 1037,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1026,
                              "src": "2586:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2575:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issued",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 930,
                          "src": "2575:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520616c72656164792069737375656420626f6e647320666f722074686973206c6f616e",
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2598:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad",
                          "typeString": "literal_string \"You have already issued bonds for this loan\""
                        },
                        "value": "You have already issued bonds for this loan"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad",
                          "typeString": "literal_string \"You have already issued bonds for this loan\""
                        }
                      ],
                      "id": 1035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2566:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:78:4"
                },
                {
                  "expression": {
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1044,
                          "name": "loanLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "2654:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                          }
                        },
                        "id": 1046,
                        "indexExpression": {
                          "id": 1045,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1026,
                          "src": "2665:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2654:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage",
                          "typeString": "struct ERC20PaymentStandard.loan storage ref"
                        }
                      },
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "issued",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 930,
                      "src": "2654:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2679:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2654:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1050,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:29:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1051,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "2700:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1053,
                          "indexExpression": {
                            "id": 1052,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "2711:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2700:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "principal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 948,
                        "src": "2700:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1055,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "2726:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1057,
                          "indexExpression": {
                            "id": 1056,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "2737:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2726:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1058,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "borrower",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 934,
                        "src": "2726:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1059,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2699:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,address)"
                    }
                  },
                  "functionReturnParameters": 1034,
                  "id": 1060,
                  "nodeType": "Return",
                  "src": "2693:58:4"
                }
              ]
            },
            "documentation": {
              "id": 1024,
              "nodeType": "StructuredDocumentation",
              "src": "2169:298:4",
              "text": " @notice called when bonds are issued so as to make sure lender can only mint bonds once.\n @param _id loan ID\n @return the loan principal (so bonds knows how many NFTs to mint)\n @return the borrowers address (so bonds can make sure borrower is calling this function)"
            },
            "functionSelector": "d41db84b",
            "id": 1062,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1029,
                "modifierName": {
                  "id": 1028,
                  "name": "onlyBonds",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 989,
                  "src": "2522:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2522:9:4"
              }
            ],
            "name": "issueBonds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "2492:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2492:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2491:13:4"
            },
            "returnParameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "2540:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "2548:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2539:17:4"
            },
            "scope": 1394,
            "src": "2472:286:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1092,
              "nodeType": "Block",
              "src": "3461:169:4",
              "statements": [
                {
                  "condition": {
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3474:16:4",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1075,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1067,
                          "src": "3486:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1074,
                        "name": "isComplete",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "3475:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 1076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3475:15:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1090,
                    "nodeType": "Block",
                    "src": "3587:37:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3608:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1073,
                        "id": 1089,
                        "nodeType": "Return",
                        "src": "3601:12:4"
                      }
                    ]
                  },
                  "id": 1091,
                  "nodeType": "IfStatement",
                  "src": "3471:153:4",
                  "trueBody": {
                    "id": 1087,
                    "nodeType": "Block",
                    "src": "3491:92:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1078,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 960,
                                "src": "3505:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 1080,
                              "indexExpression": {
                                "id": 1079,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1067,
                                "src": "3516:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3505:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 1081,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalPaymentsValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 950,
                            "src": "3505:34:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1082,
                            "name": "_amm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "3543:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3505:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1084,
                        "nodeType": "ExpressionStatement",
                        "src": "3505:42:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3568:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1073,
                        "id": 1086,
                        "nodeType": "Return",
                        "src": "3561:11:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1063,
              "nodeType": "StructuredDocumentation",
              "src": "2768:600:4",
              "text": " @notice Called each time new NFTs are minted by staking\n @param _amm the ammount of interest to add\n @param _id is the id of the loan\n @return true if added. Will not add interest if payment has been completed.\nThis prevents lenders from refusing to end a loan when it is rightfully over by forever\nincreasing the totalPaymentsValue through interest staking and never fully collecting payment.\nThis also means that if lenders do not realize interest gains soon enough they may not be able to collect them before\nthe borrower can complete the loan."
            },
            "functionSelector": "e62e1e42",
            "id": 1093,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1070,
                "modifierName": {
                  "id": 1069,
                  "name": "onlyBonds",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 989,
                  "src": "3421:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3421:9:4"
              }
            ],
            "name": "addInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "_amm",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "3394:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "3408:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3393:27:4"
            },
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "3456:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3456:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3455:6:4"
            },
            "scope": 1394,
            "src": "3373:257:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1107,
              "nodeType": "Block",
              "src": "3910:60:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1101,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "3927:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1103,
                          "indexExpression": {
                            "id": 1102,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1096,
                            "src": "3938:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3927:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "interestRateInverse",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 944,
                        "src": "3927:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1105,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3926:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1100,
                  "id": 1106,
                  "nodeType": "Return",
                  "src": "3920:43:4"
                }
              ]
            },
            "documentation": {
              "id": 1094,
              "nodeType": "StructuredDocumentation",
              "src": "3636:197:4",
              "text": " @notice get the interest rate of a loan. Makes it easy for other contract since it doens't have to parse struct\n @param _id is the loan ID\n @return inverse interest rate"
            },
            "functionSelector": "5fe2d689",
            "id": 1108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1096,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1108,
                  "src": "3859:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3859:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3858:13:4"
            },
            "returnParameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1108,
                  "src": "3902:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3902:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3901:9:4"
            },
            "scope": 1394,
            "src": "3838:132:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1130,
              "nodeType": "Block",
              "src": "4331:95:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1116,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "4349:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4349:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1118,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 960,
                                "src": "4368:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 1120,
                              "indexExpression": {
                                "id": 1119,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1111,
                                "src": "4379:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4368:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "paymentDueDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 940,
                            "src": "4368:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4349:49:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4402:16:4",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1124,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1111,
                                "src": "4414:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1123,
                              "name": "isComplete",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "4403:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256) view returns (bool)"
                              }
                            },
                            "id": 1125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4403:15:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4349:69:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1128,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4348:71:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1115,
                  "id": 1129,
                  "nodeType": "Return",
                  "src": "4341:78:4"
                }
              ]
            },
            "documentation": {
              "id": 1109,
              "nodeType": "StructuredDocumentation",
              "src": "3980:278:4",
              "text": " @notice This contract is not very forgiving. Miss one payment and you're marked as delinquent. Unless contract is complete\n @param _id is the hash id of the loan. Same as bond ERC1155 ID as well\n @return if delinquent or not. Meaning missed a payment"
            },
            "functionSelector": "91f67191",
            "id": 1131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDelinquent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1131,
                  "src": "4285:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4285:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4284:13:4"
            },
            "returnParameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1131,
                  "src": "4326:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4326:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4325:6:4"
            },
            "scope": 1394,
            "src": "4263:163:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1196,
              "nodeType": "Block",
              "src": "5606:882:4",
              "statements": [
                {
                  "assignments": [
                    1152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1152,
                      "mutability": "mutable",
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 1196,
                      "src": "5653:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1151,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5653:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1160,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1154,
                        "name": "_borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "5672:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1155,
                            "name": "loanIDs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "5683:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 1157,
                          "indexExpression": {
                            "id": 1156,
                            "name": "_borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "5691:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5683:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5683:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1153,
                      "name": "getId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1393,
                      "src": "5666:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5666:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5653:56:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1165,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "5770:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1161,
                          "name": "loanIDs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 965,
                          "src": "5746:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 1163,
                        "indexExpression": {
                          "id": 1162,
                          "name": "_borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1136,
                          "src": "5754:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5746:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5746:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5746:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "5746:27:4"
                },
                {
                  "expression": {
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1168,
                        "name": "loanLookup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "5817:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                        }
                      },
                      "id": 1170,
                      "indexExpression": {
                        "id": 1169,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "5828:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5817:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_loan_$955_storage",
                        "typeString": "struct ERC20PaymentStandard.loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "66616c7365",
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5870:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "id": 1173,
                          "name": "_erc20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1134,
                          "src": "5903:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1174,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5933:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5933:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "48656c6c6f20576f726c64",
                              "id": 1177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5979:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
                                "typeString": "literal_string \"Hello World\""
                              },
                              "value": "Hello World"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
                                "typeString": "literal_string \"Hello World\""
                              }
                            ],
                            "id": 1176,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "5969:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5969:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1179,
                          "name": "_paymentPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "6022:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1180,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "6066:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6066:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1182,
                            "name": "_paymentPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "6084:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6066:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1184,
                          "name": "_minPayment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1138,
                          "src": "6124:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1185,
                          "name": "_inverseInterestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "6170:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1186,
                          "name": "_accrualPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1146,
                          "src": "6219:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1187,
                          "name": "_principal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "6258:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1188,
                          "name": "_principal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "6302:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6405:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6437:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1171,
                        "name": "loan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 955,
                        "src": "5834:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_loan_$955_storage_ptr_$",
                          "typeString": "type(struct ERC20PaymentStandard.loan storage pointer)"
                        }
                      },
                      "id": 1191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "issued",
                        "ERC20Address",
                        "borrower",
                        "merkleRoot",
                        "paymentPeriod",
                        "paymentDueDate",
                        "minPayment",
                        "interestRateInverse",
                        "accrualPeriod",
                        "principal",
                        "totalPaymentsValue",
                        "awaitingCollection",
                        "paymentComplete"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5834:628:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                        "typeString": "struct ERC20PaymentStandard.loan memory"
                      }
                    },
                    "src": "5817:645:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_loan_$955_storage",
                      "typeString": "struct ERC20PaymentStandard.loan storage ref"
                    }
                  },
                  "id": 1193,
                  "nodeType": "ExpressionStatement",
                  "src": "5817:645:4"
                },
                {
                  "expression": {
                    "id": 1194,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1152,
                    "src": "6479:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1150,
                  "id": 1195,
                  "nodeType": "Return",
                  "src": "6472:9:4"
                }
              ]
            },
            "documentation": {
              "id": 1132,
              "nodeType": "StructuredDocumentation",
              "src": "4437:900:4",
              "text": " @notice contract must be configured before bonds are issued. Pushes new loan to array for user\n @dev borrower is msg.sender for testing. In production might want to make this a param\n @param _erc20 is the ERC20 contract address that will be used for payments\n @param _borrower is the borrower loan is being configured for. Keep in mind. ONLY this borrower can mint bonds to start the loan\n @param _minPayment is the minimum payment that must be made before the payment period ends\n @param _paymentPeriod payment must be made by this time or delinquent function will return true\n @param _principal the origional loan value before interest\n @param _inverseInterestRate the interest rate expressed as inverse. 2% = 1/5 = inverse of 5\n @param _accrualPeriod the time it takes for interest to accrue in seconds\n @return the id it just created"
            },
            "functionSelector": "f1f2a757",
            "id": 1197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configureNew",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "_erc20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5369:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5369:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "_borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5389:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5389:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "_minPayment",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5412:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5412:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "_paymentPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5438:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5438:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1142,
                  "mutability": "mutable",
                  "name": "_principal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5467:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5467:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1144,
                  "mutability": "mutable",
                  "name": "_inverseInterestRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5492:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5492:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1146,
                  "mutability": "mutable",
                  "name": "_accrualPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5527:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5527:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5363:192:4"
            },
            "returnParameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5593:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5593:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5592:9:4"
            },
            "scope": 1394,
            "src": "5342:1146:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1271,
              "nodeType": "Block",
              "src": "6916:775:4",
              "statements": [
                {
                  "assignments": [
                    1210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1210,
                      "mutability": "mutable",
                      "name": "ln",
                      "nodeType": "VariableDeclaration",
                      "scope": 1271,
                      "src": "6926:14:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                        "typeString": "struct ERC20PaymentStandard.loan"
                      },
                      "typeName": {
                        "id": 1209,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1208,
                          "name": "loan",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 955,
                          "src": "6926:4:4"
                        },
                        "referencedDeclaration": 955,
                        "src": "6926:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage_ptr",
                          "typeString": "struct ERC20PaymentStandard.loan"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1214,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1211,
                      "name": "loanLookup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 960,
                      "src": "6943:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                      }
                    },
                    "id": 1213,
                    "indexExpression": {
                      "id": 1212,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "6954:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6943:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_loan_$955_storage",
                      "typeString": "struct ERC20PaymentStandard.loan storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6926:32:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1216,
                            "name": "_erc20Ammount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "6976:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 1217,
                              "name": "ln",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "6993:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                                "typeString": "struct ERC20PaymentStandard.loan memory"
                              }
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "minPayment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 942,
                            "src": "6993:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6976:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1220,
                                "name": "ln",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1210,
                                "src": "7100:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                                  "typeString": "struct ERC20PaymentStandard.loan memory"
                                }
                              },
                              "id": 1221,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalPaymentsValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 950,
                              "src": "7100:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 1222,
                                "name": "ln",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1210,
                                "src": "7124:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                                  "typeString": "struct ERC20PaymentStandard.loan memory"
                                }
                              },
                              "id": 1223,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentComplete",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 954,
                              "src": "7124:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7100:42:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1225,
                              "name": "ln",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "7145:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                                "typeString": "struct ERC20PaymentStandard.loan memory"
                              }
                            },
                            "id": 1226,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "minPayment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 942,
                            "src": "7145:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7100:58:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6976:182:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d757374206d616b6520746865206d696e696d756d207061796d656e74",
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7225:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93",
                          "typeString": "literal_string \"You must make the minimum payment\""
                        },
                        "value": "You must make the minimum payment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93",
                          "typeString": "literal_string \"You must make the minimum payment\""
                        }
                      ],
                      "id": 1215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6968:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6968:293:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "6968:293:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1237,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7325:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7325:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1241,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7345:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                              "typeString": "contract ERC20PaymentStandard"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                              "typeString": "contract ERC20PaymentStandard"
                            }
                          ],
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7337:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1239,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7337:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7337:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1243,
                        "name": "_erc20Ammount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "7352:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1233,
                              "name": "ln",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "7295:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                                "typeString": "struct ERC20PaymentStandard.loan memory"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ERC20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 932,
                            "src": "7295:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1232,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3593,
                          "src": "7288:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7288:23:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3574,
                      "src": "7288:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7288:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1245,
                  "nodeType": "ExpressionStatement",
                  "src": "7288:78:4"
                },
                {
                  "expression": {
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1246,
                          "name": "loanLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "7381:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                          }
                        },
                        "id": 1248,
                        "indexExpression": {
                          "id": 1247,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "7392:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7381:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage",
                          "typeString": "struct ERC20PaymentStandard.loan storage ref"
                        }
                      },
                      "id": 1249,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "awaitingCollection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 952,
                      "src": "7381:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1250,
                      "name": "_erc20Ammount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "7419:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7381:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1252,
                  "nodeType": "ExpressionStatement",
                  "src": "7381:51:4"
                },
                {
                  "expression": {
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1253,
                          "name": "loanLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "7467:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                          }
                        },
                        "id": 1255,
                        "indexExpression": {
                          "id": 1254,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "7478:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7467:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage",
                          "typeString": "struct ERC20PaymentStandard.loan storage ref"
                        }
                      },
                      "id": 1256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paymentDueDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 940,
                      "src": "7467:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1257,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "7500:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7500:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 1259,
                          "name": "ln",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1210,
                          "src": "7518:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                            "typeString": "struct ERC20PaymentStandard.loan memory"
                          }
                        },
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentPeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 938,
                        "src": "7518:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7500:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7467:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "7467:67:4"
                },
                {
                  "expression": {
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1264,
                          "name": "loanLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "7578:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                          }
                        },
                        "id": 1266,
                        "indexExpression": {
                          "id": 1265,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "7589:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7578:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage",
                          "typeString": "struct ERC20PaymentStandard.loan storage ref"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paymentComplete",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 954,
                      "src": "7578:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1268,
                      "name": "_erc20Ammount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "7613:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7578:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1270,
                  "nodeType": "ExpressionStatement",
                  "src": "7578:48:4"
                }
              ]
            },
            "documentation": {
              "id": 1198,
              "nodeType": "StructuredDocumentation",
              "src": "6498:309:4",
              "text": " @notice function handles the payment of the loan. Does not have to be borrower\nas payment comes in. The contract holds it until collection by bond owners. MUST APPROVE FIRST in ERC20 contract first\n @param _id to pay off\n @param _erc20Ammount is ammount in loan's ERC20 to pay"
            },
            "functionSelector": "2f63147f",
            "id": 1272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1205,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1200,
                    "src": "6907:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1206,
                "modifierName": {
                  "id": 1204,
                  "name": "incomplete",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1009,
                  "src": "6896:10:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "6896:15:4"
              }
            ],
            "name": "payment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1200,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "6829:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6829:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "_erc20Ammount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "6842:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6842:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6828:36:4"
            },
            "returnParameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6916:0:4"
            },
            "scope": 1394,
            "src": "6812:879:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "8080:467:4",
              "statements": [
                {
                  "assignments": [
                    1282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1282,
                      "mutability": "mutable",
                      "name": "bonds",
                      "nodeType": "VariableDeclaration",
                      "scope": 1337,
                      "src": "8090:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$2873",
                        "typeString": "contract IERC1155"
                      },
                      "typeName": {
                        "id": 1281,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1280,
                          "name": "IERC1155",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2873,
                          "src": "8090:8:4"
                        },
                        "referencedDeclaration": 2873,
                        "src": "8090:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2873",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1286,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1284,
                        "name": "bondContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "8116:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1283,
                      "name": "IERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2873,
                      "src": "8107:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC1155_$2873_$",
                        "typeString": "type(contract IERC1155)"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8107:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$2873",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8090:39:4"
                },
                {
                  "assignments": [
                    1289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1289,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1337,
                      "src": "8139:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3593",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1288,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1287,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3593,
                          "src": "8139:6:4"
                        },
                        "referencedDeclaration": 3593,
                        "src": "8139:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1296,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1291,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "8161:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1293,
                          "indexExpression": {
                            "id": 1292,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1275,
                            "src": "8172:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8161:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 932,
                        "src": "8161:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1290,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "8154:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8154:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3593",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8139:51:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1298,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "8208:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1300,
                          "indexExpression": {
                            "id": 1299,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1275,
                            "src": "8219:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8208:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1301,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issued",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "8208:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206c6f616e20686173206e6f74206265656e20697373756564207965742e20486f7720646f20796f75206576656e206861766520626f6e647320666f722069743f3f3f",
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8232:73:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        },
                        "value": "this loan has not been issued yet. How do you even have bonds for it???"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        }
                      ],
                      "id": 1297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8200:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8200:106:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1304,
                  "nodeType": "ExpressionStatement",
                  "src": "8200:106:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1306,
                          "name": "_amm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1277,
                          "src": "8324:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1307,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "8332:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 1309,
                            "indexExpression": {
                              "id": 1308,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1275,
                              "src": "8343:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8332:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 1310,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "awaitingCollection",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 952,
                          "src": "8332:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8324:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865726520617265206e6f7420656e6f756768207061796d656e747320617661696c61626c6520666f7220636f6c6c656374696f6e",
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8367:56:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55878fd4b9b1ca92eac2474ddc9f953a159fdb2953aad27f69ec6bb964342ee4",
                          "typeString": "literal_string \"There are not enough payments available for collection\""
                        },
                        "value": "There are not enough payments available for collection"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55878fd4b9b1ca92eac2474ddc9f953a159fdb2953aad27f69ec6bb964342ee4",
                          "typeString": "literal_string \"There are not enough payments available for collection\""
                        }
                      ],
                      "id": 1305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8316:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8316:108:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1314,
                  "nodeType": "ExpressionStatement",
                  "src": "8316:108:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1318,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8457:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8457:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1322,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8477:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                              "typeString": "contract ERC20PaymentStandard"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                              "typeString": "contract ERC20PaymentStandard"
                            }
                          ],
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8469:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1320,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8469:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8469:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1324,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1275,
                        "src": "8484:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1325,
                        "name": "_amm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "8489:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8495:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 1315,
                        "name": "bonds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "8434:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2873",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 1317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2856,
                      "src": "8434:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8434:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1328,
                  "nodeType": "ExpressionStatement",
                  "src": "8434:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1332,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8523:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8523:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1334,
                        "name": "_amm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "8535:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1329,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1289,
                        "src": "8508:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3542,
                      "src": "8508:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8508:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "8508:32:4"
                }
              ]
            },
            "documentation": {
              "id": 1273,
              "nodeType": "StructuredDocumentation",
              "src": "7701:312:4",
              "text": " @notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\n However that was not a good idea as a hacker could create fake bonds.\n @param _id is the id of the bond to send in\n @param _amm is the ammount to send"
            },
            "functionSelector": "a97868be",
            "id": 1338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1275,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "8037:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8037:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1277,
                  "mutability": "mutable",
                  "name": "_amm",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "8050:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8050:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8036:27:4"
            },
            "returnParameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8080:0:4"
            },
            "scope": 1394,
            "src": "8018:529:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "8768:136:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1346,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "8785:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1348,
                          "indexExpression": {
                            "id": 1347,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "8796:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8785:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1349,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentComplete",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 954,
                        "src": "8785:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1350,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "8828:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1352,
                          "indexExpression": {
                            "id": 1351,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "8839:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8828:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalPaymentsValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 950,
                        "src": "8828:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8785:77:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "8874:23:4",
                      "subExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1355,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "8875:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1357,
                          "indexExpression": {
                            "id": 1356,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "8886:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8875:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1358,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issued",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "8875:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8785:112:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1345,
                  "id": 1361,
                  "nodeType": "Return",
                  "src": "8778:119:4"
                }
              ]
            },
            "documentation": {
              "id": 1339,
              "nodeType": "StructuredDocumentation",
              "src": "8557:140:4",
              "text": " @notice helper function\n @param _id of loan to check\n @return return if the contract is payed off or not as bool"
            },
            "functionSelector": "3a0be1a6",
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isComplete",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "8722:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8722:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8721:13:4"
            },
            "returnParameters": {
              "id": 1345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1344,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "8763:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1343,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8763:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8762:6:4"
            },
            "scope": 1394,
            "src": "8702:202:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1392,
              "nodeType": "Block",
              "src": "9223:178:4",
              "statements": [
                {
                  "assignments": [
                    1374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1374,
                      "mutability": "mutable",
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 1392,
                      "src": "9233:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1373,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9233:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1389,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1382,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "9315:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                                      "typeString": "contract ERC20PaymentStandard"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                                      "typeString": "contract ERC20PaymentStandard"
                                    }
                                  ],
                                  "id": 1381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9307:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1380,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9307:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9307:13:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1384,
                                "name": "_borrower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "9334:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1385,
                                "name": "_index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1368,
                                "src": "9357:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1378,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "9277:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "9277:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9277:96:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1377,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "9267:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9267:107:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9246:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1375,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9246:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9246:129:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9233:142:4"
                },
                {
                  "expression": {
                    "id": 1390,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1374,
                    "src": "9392:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1372,
                  "id": 1391,
                  "nodeType": "Return",
                  "src": "9385:9:4"
                }
              ]
            },
            "documentation": {
              "id": 1364,
              "nodeType": "StructuredDocumentation",
              "src": "8910:215:4",
              "text": " @notice Returns the ID for a loan given the borrower and index in the array\n @param _borrower is borrower\n @param _index is the index in the borrowers loan array\n @return the loan ID"
            },
            "functionSelector": "c5d3e11d",
            "id": 1393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1366,
                  "mutability": "mutable",
                  "name": "_borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1393,
                  "src": "9152:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9152:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1368,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1393,
                  "src": "9171:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9171:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9151:35:4"
            },
            "returnParameters": {
              "id": 1372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1371,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1393,
                  "src": "9215:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9215:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9214:9:4"
            },
            "scope": 1394,
            "src": "9137:264:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 1395,
        "src": "487:8916:4"
      }
    ],
    "src": "34:9369:4"
  },
  "legacyAST": {
    "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol",
    "exportedSymbols": {
      "ERC1155Holder": [
        2980
      ],
      "ERC1155Receiver": [
        3014
      ],
      "ERC165": [
        3936
      ],
      "ERC20PaymentStandard": [
        1394
      ],
      "IERC1155": [
        2873
      ],
      "IERC1155Receiver": [
        2914
      ],
      "IERC165": [
        3948
      ],
      "IERC20": [
        3593
      ]
    },
    "id": 1395,
    "license": "None",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 918,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 919,
        "nodeType": "ImportDirective",
        "scope": 1395,
        "sourceUnit": 2981,
        "src": "59:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 921,
        "nodeType": "ImportDirective",
        "scope": 1395,
        "sourceUnit": 3594,
        "src": "131:70:4",
        "symbolAliases": [
          {
            "foreign": {
              "id": 920,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "139:6:4",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 923,
        "nodeType": "ImportDirective",
        "scope": 1395,
        "sourceUnit": 2874,
        "src": "202:76:4",
        "symbolAliases": [
          {
            "foreign": {
              "id": 922,
              "name": "IERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "210:8:4",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 925,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2980,
              "src": "520:13:4"
            },
            "id": 926,
            "nodeType": "InheritanceSpecifier",
            "src": "520:13:4"
          }
        ],
        "contractDependencies": [
          2914,
          2980,
          3014,
          3936,
          3948
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 924,
          "nodeType": "StructuredDocumentation",
          "src": "280:206:4",
          "text": " @title ERC20PaymentStandard\n @author Carson Case\n @notice This contract is a standard meant to be overriden that works with the Bonds contract to offer noncolateralized, flexable lending onchain"
        },
        "fullyImplemented": true,
        "id": 1394,
        "linearizedBaseContracts": [
          1394,
          2980,
          3014,
          2914,
          3936,
          3948
        ],
        "name": "ERC20PaymentStandard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e7004a7a",
            "id": 928,
            "mutability": "mutable",
            "name": "bondContract",
            "nodeType": "VariableDeclaration",
            "scope": 1394,
            "src": "573:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 927,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "573:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20PaymentStandard.loan",
            "id": 955,
            "members": [
              {
                "constant": false,
                "id": 930,
                "mutability": "mutable",
                "name": "issued",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "688:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 929,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "688:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 932,
                "mutability": "mutable",
                "name": "ERC20Address",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "709:20:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 931,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "709:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 934,
                "mutability": "mutable",
                "name": "borrower",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "739:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 933,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "739:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 936,
                "mutability": "mutable",
                "name": "merkleRoot",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "765:18:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 935,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "765:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 938,
                "mutability": "mutable",
                "name": "paymentPeriod",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "793:21:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 937,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "793:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 940,
                "mutability": "mutable",
                "name": "paymentDueDate",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "824:22:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 939,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "824:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 942,
                "mutability": "mutable",
                "name": "minPayment",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "856:18:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 941,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "856:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 944,
                "mutability": "mutable",
                "name": "interestRateInverse",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "884:27:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 943,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "884:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 946,
                "mutability": "mutable",
                "name": "accrualPeriod",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "921:21:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 945,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "921:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 948,
                "mutability": "mutable",
                "name": "principal",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "952:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 947,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "952:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 950,
                "mutability": "mutable",
                "name": "totalPaymentsValue",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "979:26:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 949,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "979:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 952,
                "mutability": "mutable",
                "name": "awaitingCollection",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "1015:26:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 951,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1015:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 954,
                "mutability": "mutable",
                "name": "paymentComplete",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "1051:23:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 953,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1051:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "loan",
            "nodeType": "StructDefinition",
            "scope": 1394,
            "src": "666:415:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "630e69ad",
            "id": 960,
            "mutability": "mutable",
            "name": "loanLookup",
            "nodeType": "VariableDeclaration",
            "scope": 1394,
            "src": "1192:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan)"
            },
            "typeName": {
              "id": 959,
              "keyType": {
                "id": 956,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1200:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1192:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan)"
              },
              "valueType": {
                "id": 958,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 957,
                  "name": "loan",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 955,
                  "src": "1211:4:4"
                },
                "referencedDeclaration": 955,
                "src": "1211:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_loan_$955_storage_ptr",
                  "typeString": "struct ERC20PaymentStandard.loan"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4af50116",
            "id": 965,
            "mutability": "mutable",
            "name": "loanIDs",
            "nodeType": "VariableDeclaration",
            "scope": 1394,
            "src": "1240:44:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 964,
              "keyType": {
                "id": 961,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1248:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1240:29:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 962,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 963,
                "nodeType": "ArrayTypeName",
                "src": "1259:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 975,
              "nodeType": "Block",
              "src": "1406:38:4",
              "statements": [
                {
                  "expression": {
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 971,
                      "name": "bondContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 928,
                      "src": "1416:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 972,
                      "name": "_bonds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "1431:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1416:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:21:4"
                }
              ]
            },
            "documentation": {
              "id": 966,
              "nodeType": "StructuredDocumentation",
              "src": "1295:79:4",
              "text": " @notice just sets bonds contract\n @param _bonds contract"
            },
            "id": 976,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "_bonds",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "1391:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1390:16:4"
            },
            "returnParameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:4"
            },
            "scope": 1394,
            "src": "1379:65:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 988,
              "nodeType": "Block",
              "src": "1540:112:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 980,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1558:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1558:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 982,
                          "name": "bondContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 928,
                          "src": "1572:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1558:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074686520626f6e6420636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1586:47:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef",
                          "typeString": "literal_string \"Only the bond contract can call this function\""
                        },
                        "value": "Only the bond contract can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef",
                          "typeString": "literal_string \"Only the bond contract can call this function\""
                        }
                      ],
                      "id": 979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1550:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:84:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:84:4"
                },
                {
                  "id": 987,
                  "nodeType": "PlaceholderStatement",
                  "src": "1644:1:4"
                }
              ]
            },
            "documentation": {
              "id": 977,
              "nodeType": "StructuredDocumentation",
              "src": "1454:63:4",
              "text": "@notice requires only the Bonds Contract call this function"
            },
            "id": 989,
            "name": "onlyBonds",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:0:4"
            },
            "src": "1522:130:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1008,
              "nodeType": "Block",
              "src": "1744:158:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 995,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "1762:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 997,
                            "indexExpression": {
                              "id": 996,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 992,
                              "src": "1773:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1762:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 998,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentComplete",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 954,
                          "src": "1762:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 999,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "1804:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 1001,
                            "indexExpression": {
                              "id": 1000,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 992,
                              "src": "1815:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1804:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalPaymentsValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 950,
                          "src": "1804:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1762:76:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320636f6e747261637420697320616c72656179642070616964206f6666",
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1848:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb",
                          "typeString": "literal_string \"This contract is alreayd paid off\""
                        },
                        "value": "This contract is alreayd paid off"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb",
                          "typeString": "literal_string \"This contract is alreayd paid off\""
                        }
                      ],
                      "id": 994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1754:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1754:130:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "1754:130:4"
                },
                {
                  "id": 1007,
                  "nodeType": "PlaceholderStatement",
                  "src": "1894:1:4"
                }
              ]
            },
            "documentation": {
              "id": 990,
              "nodeType": "StructuredDocumentation",
              "src": "1662:45:4",
              "text": "@notice requires contract is not paid off"
            },
            "id": 1009,
            "name": "incomplete",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 992,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "1732:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1731:13:4"
            },
            "src": "1712:190:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1022,
              "nodeType": "Block",
              "src": "2115:44:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1017,
                        "name": "loanIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "2132:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(address => uint256[] storage ref)"
                        }
                      },
                      "id": 1019,
                      "indexExpression": {
                        "id": 1018,
                        "name": "_who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "2140:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2132:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2132:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1016,
                  "id": 1021,
                  "nodeType": "Return",
                  "src": "2125:27:4"
                }
              ]
            },
            "documentation": {
              "id": 1010,
              "nodeType": "StructuredDocumentation",
              "src": "1912:120:4",
              "text": " @notice gets the number of loans a person has\n @param _who is who to look up\n @return length"
            },
            "functionSelector": "7e23f5dd",
            "id": 1023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberOfLoans",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "_who",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "2063:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2063:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2062:14:4"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1015,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "2107:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2106:9:4"
            },
            "scope": 1394,
            "src": "2037:122:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1061,
              "nodeType": "Block",
              "src": "2556:202:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2574:23:4",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1036,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "2575:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 1038,
                            "indexExpression": {
                              "id": 1037,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1026,
                              "src": "2586:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2575:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issued",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 930,
                          "src": "2575:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520616c72656164792069737375656420626f6e647320666f722074686973206c6f616e",
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2598:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad",
                          "typeString": "literal_string \"You have already issued bonds for this loan\""
                        },
                        "value": "You have already issued bonds for this loan"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad",
                          "typeString": "literal_string \"You have already issued bonds for this loan\""
                        }
                      ],
                      "id": 1035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2566:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:78:4"
                },
                {
                  "expression": {
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1044,
                          "name": "loanLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "2654:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                          }
                        },
                        "id": 1046,
                        "indexExpression": {
                          "id": 1045,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1026,
                          "src": "2665:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2654:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage",
                          "typeString": "struct ERC20PaymentStandard.loan storage ref"
                        }
                      },
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "issued",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 930,
                      "src": "2654:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2679:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2654:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1050,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:29:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1051,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "2700:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1053,
                          "indexExpression": {
                            "id": 1052,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "2711:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2700:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "principal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 948,
                        "src": "2700:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1055,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "2726:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1057,
                          "indexExpression": {
                            "id": 1056,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "2737:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2726:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1058,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "borrower",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 934,
                        "src": "2726:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1059,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2699:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,address)"
                    }
                  },
                  "functionReturnParameters": 1034,
                  "id": 1060,
                  "nodeType": "Return",
                  "src": "2693:58:4"
                }
              ]
            },
            "documentation": {
              "id": 1024,
              "nodeType": "StructuredDocumentation",
              "src": "2169:298:4",
              "text": " @notice called when bonds are issued so as to make sure lender can only mint bonds once.\n @param _id loan ID\n @return the loan principal (so bonds knows how many NFTs to mint)\n @return the borrowers address (so bonds can make sure borrower is calling this function)"
            },
            "functionSelector": "d41db84b",
            "id": 1062,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1029,
                "modifierName": {
                  "id": 1028,
                  "name": "onlyBonds",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 989,
                  "src": "2522:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2522:9:4"
              }
            ],
            "name": "issueBonds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "2492:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2492:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2491:13:4"
            },
            "returnParameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "2540:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "2548:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2539:17:4"
            },
            "scope": 1394,
            "src": "2472:286:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1092,
              "nodeType": "Block",
              "src": "3461:169:4",
              "statements": [
                {
                  "condition": {
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3474:16:4",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1075,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1067,
                          "src": "3486:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1074,
                        "name": "isComplete",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "3475:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 1076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3475:15:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1090,
                    "nodeType": "Block",
                    "src": "3587:37:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3608:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1073,
                        "id": 1089,
                        "nodeType": "Return",
                        "src": "3601:12:4"
                      }
                    ]
                  },
                  "id": 1091,
                  "nodeType": "IfStatement",
                  "src": "3471:153:4",
                  "trueBody": {
                    "id": 1087,
                    "nodeType": "Block",
                    "src": "3491:92:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1078,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 960,
                                "src": "3505:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 1080,
                              "indexExpression": {
                                "id": 1079,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1067,
                                "src": "3516:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3505:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 1081,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalPaymentsValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 950,
                            "src": "3505:34:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1082,
                            "name": "_amm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "3543:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3505:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1084,
                        "nodeType": "ExpressionStatement",
                        "src": "3505:42:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3568:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1073,
                        "id": 1086,
                        "nodeType": "Return",
                        "src": "3561:11:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1063,
              "nodeType": "StructuredDocumentation",
              "src": "2768:600:4",
              "text": " @notice Called each time new NFTs are minted by staking\n @param _amm the ammount of interest to add\n @param _id is the id of the loan\n @return true if added. Will not add interest if payment has been completed.\nThis prevents lenders from refusing to end a loan when it is rightfully over by forever\nincreasing the totalPaymentsValue through interest staking and never fully collecting payment.\nThis also means that if lenders do not realize interest gains soon enough they may not be able to collect them before\nthe borrower can complete the loan."
            },
            "functionSelector": "e62e1e42",
            "id": 1093,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1070,
                "modifierName": {
                  "id": 1069,
                  "name": "onlyBonds",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 989,
                  "src": "3421:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3421:9:4"
              }
            ],
            "name": "addInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "_amm",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "3394:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "3408:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3393:27:4"
            },
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "3456:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3456:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3455:6:4"
            },
            "scope": 1394,
            "src": "3373:257:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1107,
              "nodeType": "Block",
              "src": "3910:60:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1101,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "3927:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1103,
                          "indexExpression": {
                            "id": 1102,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1096,
                            "src": "3938:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3927:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "interestRateInverse",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 944,
                        "src": "3927:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1105,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3926:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1100,
                  "id": 1106,
                  "nodeType": "Return",
                  "src": "3920:43:4"
                }
              ]
            },
            "documentation": {
              "id": 1094,
              "nodeType": "StructuredDocumentation",
              "src": "3636:197:4",
              "text": " @notice get the interest rate of a loan. Makes it easy for other contract since it doens't have to parse struct\n @param _id is the loan ID\n @return inverse interest rate"
            },
            "functionSelector": "5fe2d689",
            "id": 1108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1096,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1108,
                  "src": "3859:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3859:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3858:13:4"
            },
            "returnParameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1108,
                  "src": "3902:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3902:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3901:9:4"
            },
            "scope": 1394,
            "src": "3838:132:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1130,
              "nodeType": "Block",
              "src": "4331:95:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1116,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "4349:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4349:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1118,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 960,
                                "src": "4368:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 1120,
                              "indexExpression": {
                                "id": 1119,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1111,
                                "src": "4379:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4368:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "paymentDueDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 940,
                            "src": "4368:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4349:49:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4402:16:4",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1124,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1111,
                                "src": "4414:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1123,
                              "name": "isComplete",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "4403:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256) view returns (bool)"
                              }
                            },
                            "id": 1125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4403:15:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4349:69:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1128,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4348:71:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1115,
                  "id": 1129,
                  "nodeType": "Return",
                  "src": "4341:78:4"
                }
              ]
            },
            "documentation": {
              "id": 1109,
              "nodeType": "StructuredDocumentation",
              "src": "3980:278:4",
              "text": " @notice This contract is not very forgiving. Miss one payment and you're marked as delinquent. Unless contract is complete\n @param _id is the hash id of the loan. Same as bond ERC1155 ID as well\n @return if delinquent or not. Meaning missed a payment"
            },
            "functionSelector": "91f67191",
            "id": 1131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDelinquent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1131,
                  "src": "4285:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4285:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4284:13:4"
            },
            "returnParameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1131,
                  "src": "4326:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4326:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4325:6:4"
            },
            "scope": 1394,
            "src": "4263:163:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1196,
              "nodeType": "Block",
              "src": "5606:882:4",
              "statements": [
                {
                  "assignments": [
                    1152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1152,
                      "mutability": "mutable",
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 1196,
                      "src": "5653:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1151,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5653:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1160,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1154,
                        "name": "_borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "5672:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1155,
                            "name": "loanIDs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "5683:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 1157,
                          "indexExpression": {
                            "id": 1156,
                            "name": "_borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "5691:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5683:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5683:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1153,
                      "name": "getId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1393,
                      "src": "5666:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5666:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5653:56:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1165,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "5770:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1161,
                          "name": "loanIDs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 965,
                          "src": "5746:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 1163,
                        "indexExpression": {
                          "id": 1162,
                          "name": "_borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1136,
                          "src": "5754:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5746:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5746:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5746:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "5746:27:4"
                },
                {
                  "expression": {
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1168,
                        "name": "loanLookup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "5817:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                        }
                      },
                      "id": 1170,
                      "indexExpression": {
                        "id": 1169,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "5828:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5817:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_loan_$955_storage",
                        "typeString": "struct ERC20PaymentStandard.loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "66616c7365",
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5870:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "id": 1173,
                          "name": "_erc20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1134,
                          "src": "5903:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1174,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5933:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5933:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "48656c6c6f20576f726c64",
                              "id": 1177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5979:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
                                "typeString": "literal_string \"Hello World\""
                              },
                              "value": "Hello World"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
                                "typeString": "literal_string \"Hello World\""
                              }
                            ],
                            "id": 1176,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "5969:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5969:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1179,
                          "name": "_paymentPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "6022:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1180,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "6066:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6066:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1182,
                            "name": "_paymentPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "6084:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6066:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1184,
                          "name": "_minPayment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1138,
                          "src": "6124:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1185,
                          "name": "_inverseInterestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "6170:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1186,
                          "name": "_accrualPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1146,
                          "src": "6219:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1187,
                          "name": "_principal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "6258:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1188,
                          "name": "_principal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "6302:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6405:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6437:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1171,
                        "name": "loan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 955,
                        "src": "5834:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_loan_$955_storage_ptr_$",
                          "typeString": "type(struct ERC20PaymentStandard.loan storage pointer)"
                        }
                      },
                      "id": 1191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "issued",
                        "ERC20Address",
                        "borrower",
                        "merkleRoot",
                        "paymentPeriod",
                        "paymentDueDate",
                        "minPayment",
                        "interestRateInverse",
                        "accrualPeriod",
                        "principal",
                        "totalPaymentsValue",
                        "awaitingCollection",
                        "paymentComplete"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5834:628:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                        "typeString": "struct ERC20PaymentStandard.loan memory"
                      }
                    },
                    "src": "5817:645:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_loan_$955_storage",
                      "typeString": "struct ERC20PaymentStandard.loan storage ref"
                    }
                  },
                  "id": 1193,
                  "nodeType": "ExpressionStatement",
                  "src": "5817:645:4"
                },
                {
                  "expression": {
                    "id": 1194,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1152,
                    "src": "6479:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1150,
                  "id": 1195,
                  "nodeType": "Return",
                  "src": "6472:9:4"
                }
              ]
            },
            "documentation": {
              "id": 1132,
              "nodeType": "StructuredDocumentation",
              "src": "4437:900:4",
              "text": " @notice contract must be configured before bonds are issued. Pushes new loan to array for user\n @dev borrower is msg.sender for testing. In production might want to make this a param\n @param _erc20 is the ERC20 contract address that will be used for payments\n @param _borrower is the borrower loan is being configured for. Keep in mind. ONLY this borrower can mint bonds to start the loan\n @param _minPayment is the minimum payment that must be made before the payment period ends\n @param _paymentPeriod payment must be made by this time or delinquent function will return true\n @param _principal the origional loan value before interest\n @param _inverseInterestRate the interest rate expressed as inverse. 2% = 1/5 = inverse of 5\n @param _accrualPeriod the time it takes for interest to accrue in seconds\n @return the id it just created"
            },
            "functionSelector": "f1f2a757",
            "id": 1197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configureNew",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "_erc20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5369:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5369:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "_borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5389:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5389:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "_minPayment",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5412:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5412:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "_paymentPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5438:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5438:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1142,
                  "mutability": "mutable",
                  "name": "_principal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5467:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5467:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1144,
                  "mutability": "mutable",
                  "name": "_inverseInterestRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5492:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5492:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1146,
                  "mutability": "mutable",
                  "name": "_accrualPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5527:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5527:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5363:192:4"
            },
            "returnParameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "5593:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5593:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5592:9:4"
            },
            "scope": 1394,
            "src": "5342:1146:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1271,
              "nodeType": "Block",
              "src": "6916:775:4",
              "statements": [
                {
                  "assignments": [
                    1210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1210,
                      "mutability": "mutable",
                      "name": "ln",
                      "nodeType": "VariableDeclaration",
                      "scope": 1271,
                      "src": "6926:14:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                        "typeString": "struct ERC20PaymentStandard.loan"
                      },
                      "typeName": {
                        "id": 1209,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1208,
                          "name": "loan",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 955,
                          "src": "6926:4:4"
                        },
                        "referencedDeclaration": 955,
                        "src": "6926:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage_ptr",
                          "typeString": "struct ERC20PaymentStandard.loan"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1214,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1211,
                      "name": "loanLookup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 960,
                      "src": "6943:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                      }
                    },
                    "id": 1213,
                    "indexExpression": {
                      "id": 1212,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "6954:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6943:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_loan_$955_storage",
                      "typeString": "struct ERC20PaymentStandard.loan storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6926:32:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1216,
                            "name": "_erc20Ammount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "6976:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 1217,
                              "name": "ln",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "6993:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                                "typeString": "struct ERC20PaymentStandard.loan memory"
                              }
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "minPayment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 942,
                            "src": "6993:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6976:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1220,
                                "name": "ln",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1210,
                                "src": "7100:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                                  "typeString": "struct ERC20PaymentStandard.loan memory"
                                }
                              },
                              "id": 1221,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalPaymentsValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 950,
                              "src": "7100:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 1222,
                                "name": "ln",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1210,
                                "src": "7124:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                                  "typeString": "struct ERC20PaymentStandard.loan memory"
                                }
                              },
                              "id": 1223,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentComplete",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 954,
                              "src": "7124:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7100:42:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1225,
                              "name": "ln",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "7145:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                                "typeString": "struct ERC20PaymentStandard.loan memory"
                              }
                            },
                            "id": 1226,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "minPayment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 942,
                            "src": "7145:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7100:58:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6976:182:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d757374206d616b6520746865206d696e696d756d207061796d656e74",
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7225:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93",
                          "typeString": "literal_string \"You must make the minimum payment\""
                        },
                        "value": "You must make the minimum payment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93",
                          "typeString": "literal_string \"You must make the minimum payment\""
                        }
                      ],
                      "id": 1215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6968:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6968:293:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "6968:293:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1237,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7325:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7325:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1241,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7345:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                              "typeString": "contract ERC20PaymentStandard"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                              "typeString": "contract ERC20PaymentStandard"
                            }
                          ],
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7337:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1239,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7337:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7337:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1243,
                        "name": "_erc20Ammount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "7352:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1233,
                              "name": "ln",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "7295:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                                "typeString": "struct ERC20PaymentStandard.loan memory"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ERC20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 932,
                            "src": "7295:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1232,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3593,
                          "src": "7288:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7288:23:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3574,
                      "src": "7288:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7288:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1245,
                  "nodeType": "ExpressionStatement",
                  "src": "7288:78:4"
                },
                {
                  "expression": {
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1246,
                          "name": "loanLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "7381:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                          }
                        },
                        "id": 1248,
                        "indexExpression": {
                          "id": 1247,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "7392:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7381:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage",
                          "typeString": "struct ERC20PaymentStandard.loan storage ref"
                        }
                      },
                      "id": 1249,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "awaitingCollection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 952,
                      "src": "7381:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1250,
                      "name": "_erc20Ammount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "7419:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7381:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1252,
                  "nodeType": "ExpressionStatement",
                  "src": "7381:51:4"
                },
                {
                  "expression": {
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1253,
                          "name": "loanLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "7467:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                          }
                        },
                        "id": 1255,
                        "indexExpression": {
                          "id": 1254,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "7478:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7467:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage",
                          "typeString": "struct ERC20PaymentStandard.loan storage ref"
                        }
                      },
                      "id": 1256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paymentDueDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 940,
                      "src": "7467:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1257,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "7500:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7500:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 1259,
                          "name": "ln",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1210,
                          "src": "7518:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_memory_ptr",
                            "typeString": "struct ERC20PaymentStandard.loan memory"
                          }
                        },
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentPeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 938,
                        "src": "7518:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7500:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7467:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "7467:67:4"
                },
                {
                  "expression": {
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1264,
                          "name": "loanLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "7578:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                          }
                        },
                        "id": 1266,
                        "indexExpression": {
                          "id": 1265,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "7589:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7578:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_loan_$955_storage",
                          "typeString": "struct ERC20PaymentStandard.loan storage ref"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paymentComplete",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 954,
                      "src": "7578:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1268,
                      "name": "_erc20Ammount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "7613:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7578:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1270,
                  "nodeType": "ExpressionStatement",
                  "src": "7578:48:4"
                }
              ]
            },
            "documentation": {
              "id": 1198,
              "nodeType": "StructuredDocumentation",
              "src": "6498:309:4",
              "text": " @notice function handles the payment of the loan. Does not have to be borrower\nas payment comes in. The contract holds it until collection by bond owners. MUST APPROVE FIRST in ERC20 contract first\n @param _id to pay off\n @param _erc20Ammount is ammount in loan's ERC20 to pay"
            },
            "functionSelector": "2f63147f",
            "id": 1272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1205,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1200,
                    "src": "6907:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1206,
                "modifierName": {
                  "id": 1204,
                  "name": "incomplete",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1009,
                  "src": "6896:10:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "6896:15:4"
              }
            ],
            "name": "payment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1200,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "6829:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6829:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "_erc20Ammount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "6842:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6842:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6828:36:4"
            },
            "returnParameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6916:0:4"
            },
            "scope": 1394,
            "src": "6812:879:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "8080:467:4",
              "statements": [
                {
                  "assignments": [
                    1282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1282,
                      "mutability": "mutable",
                      "name": "bonds",
                      "nodeType": "VariableDeclaration",
                      "scope": 1337,
                      "src": "8090:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$2873",
                        "typeString": "contract IERC1155"
                      },
                      "typeName": {
                        "id": 1281,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1280,
                          "name": "IERC1155",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2873,
                          "src": "8090:8:4"
                        },
                        "referencedDeclaration": 2873,
                        "src": "8090:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2873",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1286,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1284,
                        "name": "bondContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "8116:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1283,
                      "name": "IERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2873,
                      "src": "8107:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC1155_$2873_$",
                        "typeString": "type(contract IERC1155)"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8107:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$2873",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8090:39:4"
                },
                {
                  "assignments": [
                    1289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1289,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1337,
                      "src": "8139:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3593",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1288,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1287,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3593,
                          "src": "8139:6:4"
                        },
                        "referencedDeclaration": 3593,
                        "src": "8139:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1296,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1291,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "8161:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1293,
                          "indexExpression": {
                            "id": 1292,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1275,
                            "src": "8172:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8161:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 932,
                        "src": "8161:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1290,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "8154:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3593_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8154:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3593",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8139:51:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1298,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "8208:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1300,
                          "indexExpression": {
                            "id": 1299,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1275,
                            "src": "8219:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8208:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1301,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issued",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "8208:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206c6f616e20686173206e6f74206265656e20697373756564207965742e20486f7720646f20796f75206576656e206861766520626f6e647320666f722069743f3f3f",
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8232:73:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        },
                        "value": "this loan has not been issued yet. How do you even have bonds for it???"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        }
                      ],
                      "id": 1297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8200:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8200:106:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1304,
                  "nodeType": "ExpressionStatement",
                  "src": "8200:106:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1306,
                          "name": "_amm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1277,
                          "src": "8324:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1307,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "8332:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 1309,
                            "indexExpression": {
                              "id": 1308,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1275,
                              "src": "8343:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8332:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$955_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 1310,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "awaitingCollection",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 952,
                          "src": "8332:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8324:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865726520617265206e6f7420656e6f756768207061796d656e747320617661696c61626c6520666f7220636f6c6c656374696f6e",
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8367:56:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55878fd4b9b1ca92eac2474ddc9f953a159fdb2953aad27f69ec6bb964342ee4",
                          "typeString": "literal_string \"There are not enough payments available for collection\""
                        },
                        "value": "There are not enough payments available for collection"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55878fd4b9b1ca92eac2474ddc9f953a159fdb2953aad27f69ec6bb964342ee4",
                          "typeString": "literal_string \"There are not enough payments available for collection\""
                        }
                      ],
                      "id": 1305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8316:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8316:108:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1314,
                  "nodeType": "ExpressionStatement",
                  "src": "8316:108:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1318,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8457:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8457:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1322,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8477:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                              "typeString": "contract ERC20PaymentStandard"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                              "typeString": "contract ERC20PaymentStandard"
                            }
                          ],
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8469:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1320,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8469:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8469:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1324,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1275,
                        "src": "8484:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1325,
                        "name": "_amm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "8489:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8495:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 1315,
                        "name": "bonds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "8434:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2873",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 1317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2856,
                      "src": "8434:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8434:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1328,
                  "nodeType": "ExpressionStatement",
                  "src": "8434:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1332,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8523:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8523:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1334,
                        "name": "_amm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "8535:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1329,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1289,
                        "src": "8508:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3593",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3542,
                      "src": "8508:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8508:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "8508:32:4"
                }
              ]
            },
            "documentation": {
              "id": 1273,
              "nodeType": "StructuredDocumentation",
              "src": "7701:312:4",
              "text": " @notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\n However that was not a good idea as a hacker could create fake bonds.\n @param _id is the id of the bond to send in\n @param _amm is the ammount to send"
            },
            "functionSelector": "a97868be",
            "id": 1338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1275,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "8037:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8037:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1277,
                  "mutability": "mutable",
                  "name": "_amm",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "8050:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8050:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8036:27:4"
            },
            "returnParameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8080:0:4"
            },
            "scope": 1394,
            "src": "8018:529:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "8768:136:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1346,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "8785:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1348,
                          "indexExpression": {
                            "id": 1347,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "8796:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8785:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1349,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentComplete",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 954,
                        "src": "8785:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1350,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "8828:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1352,
                          "indexExpression": {
                            "id": 1351,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "8839:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8828:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalPaymentsValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 950,
                        "src": "8828:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8785:77:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "8874:23:4",
                      "subExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1355,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "8875:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$955_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 1357,
                          "indexExpression": {
                            "id": 1356,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "8886:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8875:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$955_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 1358,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issued",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "8875:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8785:112:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1345,
                  "id": 1361,
                  "nodeType": "Return",
                  "src": "8778:119:4"
                }
              ]
            },
            "documentation": {
              "id": 1339,
              "nodeType": "StructuredDocumentation",
              "src": "8557:140:4",
              "text": " @notice helper function\n @param _id of loan to check\n @return return if the contract is payed off or not as bool"
            },
            "functionSelector": "3a0be1a6",
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isComplete",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "8722:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8722:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8721:13:4"
            },
            "returnParameters": {
              "id": 1345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1344,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "8763:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1343,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8763:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8762:6:4"
            },
            "scope": 1394,
            "src": "8702:202:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1392,
              "nodeType": "Block",
              "src": "9223:178:4",
              "statements": [
                {
                  "assignments": [
                    1374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1374,
                      "mutability": "mutable",
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 1392,
                      "src": "9233:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1373,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9233:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1389,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1382,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "9315:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                                      "typeString": "contract ERC20PaymentStandard"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20PaymentStandard_$1394",
                                      "typeString": "contract ERC20PaymentStandard"
                                    }
                                  ],
                                  "id": 1381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9307:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1380,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9307:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9307:13:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1384,
                                "name": "_borrower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "9334:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1385,
                                "name": "_index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1368,
                                "src": "9357:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1378,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "9277:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "9277:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9277:96:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1377,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "9267:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9267:107:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9246:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1375,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9246:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9246:129:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9233:142:4"
                },
                {
                  "expression": {
                    "id": 1390,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1374,
                    "src": "9392:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1372,
                  "id": 1391,
                  "nodeType": "Return",
                  "src": "9385:9:4"
                }
              ]
            },
            "documentation": {
              "id": 1364,
              "nodeType": "StructuredDocumentation",
              "src": "8910:215:4",
              "text": " @notice Returns the ID for a loan given the borrower and index in the array\n @param _borrower is borrower\n @param _index is the index in the borrowers loan array\n @return the loan ID"
            },
            "functionSelector": "c5d3e11d",
            "id": 1393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1366,
                  "mutability": "mutable",
                  "name": "_borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1393,
                  "src": "9152:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9152:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1368,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1393,
                  "src": "9171:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9171:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9151:35:4"
            },
            "returnParameters": {
              "id": 1372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1371,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1393,
                  "src": "9215:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9215:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9214:9:4"
            },
            "scope": 1394,
            "src": "9137:264:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 1395,
        "src": "487:8916:4"
      }
    ],
    "src": "34:9369:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0x112627aF8d3465204c57021cAbd106B63DAfbc0E",
      "transactionHash": "0x8db4dca0a8e26ffb80edfdb693e7a9c800e4ba5ad17645ea4ffc0fb2c92bad4e"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x3ff0285B9faF1f7E9b38E98a95C2410DE3259de8",
      "transactionHash": "0xf760cffcab591bb68c391ea7529a3ea770e48b63887f6a530a7e261a2043f701"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-11T02:13:49.138Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Carson Case",
    "kind": "dev",
    "methods": {
      "addInterest(uint256,uint256)": {
        "params": {
          "_amm": "the ammount of interest to add",
          "_id": "is the id of the loan"
        },
        "returns": {
          "_0": "true if added. Will not add interest if payment has been completed. This prevents lenders from refusing to end a loan when it is rightfully over by forever increasing the totalPaymentsValue through interest staking and never fully collecting payment. This also means that if lenders do not realize interest gains soon enough they may not be able to collect them before the borrower can complete the loan."
        }
      },
      "configureNew(address,address,uint256,uint256,uint256,uint256,uint256)": {
        "details": "borrower is msg.sender for testing. In production might want to make this a param",
        "params": {
          "_accrualPeriod": "the time it takes for interest to accrue in seconds",
          "_borrower": "is the borrower loan is being configured for. Keep in mind. ONLY this borrower can mint bonds to start the loan",
          "_erc20": "is the ERC20 contract address that will be used for payments",
          "_inverseInterestRate": "the interest rate expressed as inverse. 2% = 1/5 = inverse of 5",
          "_minPayment": "is the minimum payment that must be made before the payment period ends",
          "_paymentPeriod": "payment must be made by this time or delinquent function will return true",
          "_principal": "the origional loan value before interest"
        },
        "returns": {
          "_0": "the id it just created"
        }
      },
      "constructor": {
        "params": {
          "_bonds": "contract"
        }
      },
      "getId(address,uint256)": {
        "params": {
          "_borrower": "is borrower",
          "_index": "is the index in the borrowers loan array"
        },
        "returns": {
          "_0": "the loan ID"
        }
      },
      "getInterest(uint256)": {
        "params": {
          "_id": "is the loan ID"
        },
        "returns": {
          "_0": "inverse interest rate"
        }
      },
      "getNumberOfLoans(address)": {
        "params": {
          "_who": "is who to look up"
        },
        "returns": {
          "_0": "length"
        }
      },
      "isComplete(uint256)": {
        "params": {
          "_id": "of loan to check"
        },
        "returns": {
          "_0": "return if the contract is payed off or not as bool"
        }
      },
      "isDelinquent(uint256)": {
        "params": {
          "_id": "is the hash id of the loan. Same as bond ERC1155 ID as well"
        },
        "returns": {
          "_0": "if delinquent or not. Meaning missed a payment"
        }
      },
      "issueBonds(uint256)": {
        "params": {
          "_id": "loan ID"
        },
        "returns": {
          "_0": "the loan principal (so bonds knows how many NFTs to mint)",
          "_1": "the borrowers address (so bonds can make sure borrower is calling this function)"
        }
      },
      "payment(uint256,uint256)": {
        "params": {
          "_erc20Ammount": "is ammount in loan's ERC20 to pay",
          "_id": "to pay off"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "withdrawl(uint256,uint256)": {
        "params": {
          "_amm": "is the ammount to send",
          "_id": "is the id of the bond to send in"
        }
      }
    },
    "title": "ERC20PaymentStandard",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addInterest(uint256,uint256)": {
        "notice": "Called each time new NFTs are minted by staking"
      },
      "configureNew(address,address,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "contract must be configured before bonds are issued. Pushes new loan to array for user"
      },
      "constructor": {
        "notice": "just sets bonds contract"
      },
      "getId(address,uint256)": {
        "notice": "Returns the ID for a loan given the borrower and index in the array"
      },
      "getInterest(uint256)": {
        "notice": "get the interest rate of a loan. Makes it easy for other contract since it doens't have to parse struct"
      },
      "getNumberOfLoans(address)": {
        "notice": "gets the number of loans a person has"
      },
      "isComplete(uint256)": {
        "notice": "helper function"
      },
      "isDelinquent(uint256)": {
        "notice": "This contract is not very forgiving. Miss one payment and you're marked as delinquent. Unless contract is complete"
      },
      "issueBonds(uint256)": {
        "notice": "called when bonds are issued so as to make sure lender can only mint bonds once."
      },
      "payment(uint256,uint256)": {
        "notice": "function handles the payment of the loan. Does not have to be borrower as payment comes in. The contract holds it until collection by bond owners. MUST APPROVE FIRST in ERC20 contract first"
      },
      "withdrawl(uint256,uint256)": {
        "notice": "MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function. However that was not a good idea as a hacker could create fake bonds."
      }
    },
    "notice": "This contract is a standard meant to be overriden that works with the Bonds contract to offer noncolateralized, flexable lending onchain",
    "version": 1
  }
}